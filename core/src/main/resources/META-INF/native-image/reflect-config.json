[
  {
    "name": "org.nzbhydra.DevEndpoint$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.ExceptionInfo",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setException",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getException",
        "parameterTypes": []
      },
      {
        "name": "setTimestamp",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTimestamp",
        "parameterTypes": []
      },
      {
        "name": "getError",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.GenericResponse",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "isSuccessful",
        "parameterTypes": []
      },
      {
        "name": "notOk",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "ok",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "ok",
        "parameterTypes": []
      },
      {
        "name": "setSuccessful",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.NzbHydraNativeEntrypoint$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.HydraGlobalMethodSecurityConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "methodSecurityMetadataSource",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.PersistentLoginsEntity",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "setSeries",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSeries",
        "parameterTypes": []
      },
      {
        "name": "getToken",
        "parameterTypes": []
      },
      {
        "name": "setLastUsed",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "getLastUsed",
        "parameterTypes": []
      },
      {
        "name": "setToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.SecurityConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.backup.BackupAndRestore$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.backup.BackupEntry",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setCreationDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setFilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getCreationDate",
        "parameterTypes": []
      },
      {
        "name": "getFilename",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.backup.BackupWeb$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.BaseConfig",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setAuth",
        "parameterTypes": [
          "org.nzbhydra.config.auth.AuthConfig"
        ]
      },
      {
        "name": "setIndexers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getCategoriesConfig",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setCategoriesConfig",
        "parameterTypes": [
          "org.nzbhydra.config.category.CategoriesConfig"
        ]
      },
      {
        "name": "setSearching",
        "parameterTypes": [
          "org.nzbhydra.config.SearchingConfig"
        ]
      },
      {
        "name": "getSearching",
        "parameterTypes": []
      },
      {
        "name": "setGenericStorage",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDownloading",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.DownloadingConfig"
        ]
      },
      {
        "name": "setNotificationConfig",
        "parameterTypes": [
          "org.nzbhydra.config.NotificationConfig"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getMain",
        "parameterTypes": []
      },
      {
        "name": "setMain",
        "parameterTypes": [
          "org.nzbhydra.config.MainConfig"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAuth",
        "parameterTypes": []
      },
      {
        "name": "getDownloading",
        "parameterTypes": []
      },
      {
        "name": "getIndexers",
        "parameterTypes": []
      },
      {
        "name": "getGenericStorage",
        "parameterTypes": []
      },
      {
        "name": "getNotificationConfig",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.ConfigSpringConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.ConfigWeb$ApiHelpResponse",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setNewznabApi",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNewznabApi",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setApiKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setTorznabApi",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getTorznabApi",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getApiKey",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.FileSystemBrowser$DirectoryListingRequest",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setGoUp",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFullPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isGoUp",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getFullPath",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.FileSystemBrowser$FileSystemEntry",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getFullPath",
        "parameterTypes": []
      },
      {
        "name": "isHasParent",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getFolders",
        "parameterTypes": []
      },
      {
        "name": "lambda$getRoots$1",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setFiles",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "lambda$getFileFilterPredicate$0",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setFolders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getFiles",
        "parameterTypes": []
      },
      {
        "name": "setFullPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRoots",
        "parameterTypes": []
      },
      {
        "name": "lambda$getRoots$2",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setHasParent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getFileFilterPredicate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.FileSystemBrowser$FileSystemSubEntry",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getFullPath",
        "parameterTypes": []
      },
      {
        "name": "setFullPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.LoggingConfig",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setLogfilelevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isLogGc",
        "parameterTypes": []
      },
      {
        "name": "setMapIpToHost",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setConsolelevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogIpAddresses",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getLogMaxHistory",
        "parameterTypes": []
      },
      {
        "name": "getConsolelevel",
        "parameterTypes": []
      },
      {
        "name": "setLogUsername",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getLogfilelevel",
        "parameterTypes": []
      },
      {
        "name": "setMarkersToLog",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isMapIpToHost",
        "parameterTypes": []
      },
      {
        "name": "setLogGc",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHistoryUserInfoType",
        "parameterTypes": [
          "org.nzbhydra.config.HistoryUserInfoType"
        ]
      },
      {
        "name": "getMarkersToLog",
        "parameterTypes": []
      },
      {
        "name": "setLogMaxHistory",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isLogIpAddresses",
        "parameterTypes": []
      },
      {
        "name": "getHistoryUserInfoType",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isLogUsername",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.MainConfig",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "proxyType"
      },
      {
        "name": "showUpdateBannerOnUpdatedExternally"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getProxyIgnoreDomains",
        "parameterTypes": []
      },
      {
        "name": "setProxyIgnoreLocal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowWhatsNewBanner",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDisableSslLocally",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRepositoryBase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrlBase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSslKeyStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConfigVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getUrlBase",
        "parameterTypes": []
      },
      {
        "name": "setKeepHistory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getRepositoryBase",
        "parameterTypes": []
      },
      {
        "name": "isVerifySsl",
        "parameterTypes": []
      },
      {
        "name": "isInstanceCounterDownloaded",
        "parameterTypes": []
      },
      {
        "name": "getSniDisabledFor",
        "parameterTypes": []
      },
      {
        "name": "setVerifySsl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getProxyPort",
        "parameterTypes": []
      },
      {
        "name": "setBackupFolder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isUpdateCheckEnabled",
        "parameterTypes": []
      },
      {
        "name": "setProxyIgnoreDomains",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isProxyIgnoreLocal",
        "parameterTypes": []
      },
      {
        "name": "getTheme",
        "parameterTypes": []
      },
      {
        "name": "setBackupEveryXDays",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getPort",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getDatabaseWriteDelay",
        "parameterTypes": []
      },
      {
        "name": "setProxyUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSsl",
        "parameterTypes": []
      },
      {
        "name": "setBackupBeforeUpdate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseCsrf",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeepStatsForWeeks",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setKeepHistoryForWeeks",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getDereferer",
        "parameterTypes": []
      },
      {
        "name": "getProxyHost",
        "parameterTypes": []
      },
      {
        "name": "getKeepHistoryForWeeks",
        "parameterTypes": []
      },
      {
        "name": "setProxyPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDatabaseRetentionTime",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isShowNews",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isShowUpdateBannerOnUpdatedExternally",
        "parameterTypes": []
      },
      {
        "name": "setUpdateCheckEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getApiKey",
        "parameterTypes": []
      },
      {
        "name": "setShowUpdateBannerOnUpdatedExternally",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDatabaseRetentionTime",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "isUpdateToPrereleases",
        "parameterTypes": []
      },
      {
        "name": "setXmx",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUpdateAutomatically",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUpdateToPrereleases",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDeleteBackupsAfterWeeks",
        "parameterTypes": []
      },
      {
        "name": "setShutdownForRestart",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isShowWhatsNewBanner",
        "parameterTypes": []
      },
      {
        "name": "getProxyType",
        "parameterTypes": []
      },
      {
        "name": "getXmx",
        "parameterTypes": []
      },
      {
        "name": "setDeleteBackupsAfterWeeks",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setShowNews",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isUseCsrf",
        "parameterTypes": []
      },
      {
        "name": "getHost",
        "parameterTypes": []
      },
      {
        "name": "setDatabaseCompactTime",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setApiKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSslKeyStorePassword",
        "parameterTypes": []
      },
      {
        "name": "isShutdownForRestart",
        "parameterTypes": []
      },
      {
        "name": "isBackupBeforeUpdate",
        "parameterTypes": []
      },
      {
        "name": "isKeepHistory",
        "parameterTypes": []
      },
      {
        "name": "setProxyType",
        "parameterTypes": [
          "org.nzbhydra.config.ProxyType"
        ]
      },
      {
        "name": "getKeepStatsForWeeks",
        "parameterTypes": []
      },
      {
        "name": "getProxyPassword",
        "parameterTypes": []
      },
      {
        "name": "setDereferer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProxyUsername",
        "parameterTypes": []
      },
      {
        "name": "setInstanceCounterDownloaded",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isStartupBrowser",
        "parameterTypes": []
      },
      {
        "name": "setSslKeyStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isUpdateAutomatically",
        "parameterTypes": []
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBackupEveryXDays",
        "parameterTypes": []
      },
      {
        "name": "setDatabaseWriteDelay",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTheme",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogging",
        "parameterTypes": [
          "org.nzbhydra.config.LoggingConfig"
        ]
      },
      {
        "name": "setProxyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProxyHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getVerifySslDisabledFor",
        "parameterTypes": []
      },
      {
        "name": "setStartupBrowser",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSniDisabledFor",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isWelcomeShown",
        "parameterTypes": []
      },
      {
        "name": "getBackupFolder",
        "parameterTypes": []
      },
      {
        "name": "getDatabaseCompactTime",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getLogging",
        "parameterTypes": []
      },
      {
        "name": "isDisableSslLocally",
        "parameterTypes": []
      },
      {
        "name": "getSslKeyStore",
        "parameterTypes": []
      },
      {
        "name": "setVerifySslDisabledFor",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setWelcomeShown",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getConfigVersion",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.NotificationConfig",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setFilterOuts",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEntries",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getAppriseCliPath",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAppriseType",
        "parameterTypes": []
      },
      {
        "name": "setAppriseApiUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAppriseCliPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setAppriseType",
        "parameterTypes": [
          "org.nzbhydra.config.NotificationConfig$AppriseType"
        ]
      },
      {
        "name": "setDisplayNotificationsMax",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDisplayNotifications",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getEntries",
        "parameterTypes": []
      },
      {
        "name": "getAppriseApiUrl",
        "parameterTypes": []
      },
      {
        "name": "getDisplayNotificationsMax",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getFilterOuts",
        "parameterTypes": []
      },
      {
        "name": "isDisplayNotifications",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.NotificationConfigEntry",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "messageType"
      },
      {
        "name": "eventType"
      }
    ],
    "methods": [
      {
        "name": "getEventType",
        "parameterTypes": []
      },
      {
        "name": "getAppriseUrls",
        "parameterTypes": []
      },
      {
        "name": "getBodyTemplate",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setBodyTemplate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEventType",
        "parameterTypes": [
          "org.nzbhydra.config.notification.NotificationEventType"
        ]
      },
      {
        "name": "setAppriseUrls",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTitleTemplate",
        "parameterTypes": []
      },
      {
        "name": "setMessageType",
        "parameterTypes": [
          "org.nzbhydra.config.NotificationConfigEntry$MessageType"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getMessageType",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setTitleTemplate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.SearchingConfig",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "removeTrailing"
      },
      {
        "name": "applyRestrictions"
      },
      {
        "name": "idFallbackToQueryGeneration"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenWords",
        "parameterTypes": []
      },
      {
        "name": "getCustomQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "getRemoveTrailing",
        "parameterTypes": []
      },
      {
        "name": "getCoverSize",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getLoadLimitInternal",
        "parameterTypes": []
      },
      {
        "name": "setTransformNewznabCategories",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLanguage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCustomMappings",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getGenerateQueries",
        "parameterTypes": []
      },
      {
        "name": "setWrapApiErrors",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isLoadAllCachedOnInternal",
        "parameterTypes": []
      },
      {
        "name": "setShowQuickFilterButtons",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isUseOriginalCategories",
        "parameterTypes": []
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setAlwaysShowQuickFilterButtons",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isReplaceUmlauts",
        "parameterTypes": []
      },
      {
        "name": "setCoverSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isTransformNewznabCategories",
        "parameterTypes": []
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMinSeeders",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreTemporarilyDisabled",
        "parameterTypes": []
      },
      {
        "name": "getRequiredWords",
        "parameterTypes": []
      },
      {
        "name": "getKeepSearchResultsForDays",
        "parameterTypes": []
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDuplicateAgeThreshold",
        "parameterTypes": [
          "float"
        ]
      },
      {
        "name": "setUserAgents",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLoadLimitInternal",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getForbiddenPosters",
        "parameterTypes": []
      },
      {
        "name": "setLanguagesToKeep",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMinSeeders",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "isIgnoreLoadLimitingForInternalSearches",
        "parameterTypes": []
      },
      {
        "name": "setForbiddenWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSendTorznabCategories",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDuplicateAgeThreshold",
        "parameterTypes": []
      },
      {
        "name": "setReplaceUmlauts",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isIgnorePassworded",
        "parameterTypes": []
      },
      {
        "name": "setPreselectQuickFilterButtons",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": []
      },
      {
        "name": "getRequiredRegex",
        "parameterTypes": []
      },
      {
        "name": "isAlwaysShowQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "setDuplicateSizeThresholdInPercent",
        "parameterTypes": [
          "float"
        ]
      },
      {
        "name": "setRequiredWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setForbiddenGroups",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getLanguagesToKeep",
        "parameterTypes": []
      },
      {
        "name": "setIdFallbackToQueryGeneration",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "isShowQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "setCustomQuickFilterButtons",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isSendTorznabCategories",
        "parameterTypes": []
      },
      {
        "name": "getUserAgents",
        "parameterTypes": []
      },
      {
        "name": "setGlobalCacheTimeMinutes",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setForbiddenPosters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setGenerateQueries",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setRequiredRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getGlobalCacheTimeMinutes",
        "parameterTypes": []
      },
      {
        "name": "setIgnoreLoadLimitingForInternalSearches",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRemoveTrailing",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setForbiddenRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCustomMappings",
        "parameterTypes": []
      },
      {
        "name": "setIgnoreTemporarilyDisabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setKeepSearchResultsForDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getPreselectQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "isWrapApiErrors",
        "parameterTypes": []
      },
      {
        "name": "getAlwaysConvertIds",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenRegex",
        "parameterTypes": []
      },
      {
        "name": "setApplyRestrictions",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "getLanguage",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setAlwaysConvertIds",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setUseOriginalCategories",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getForbiddenGroups",
        "parameterTypes": []
      },
      {
        "name": "setGenerateQueriesFormat",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.QueryFormat"
        ]
      },
      {
        "name": "setIgnorePassworded",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getGenerateQueriesFormat",
        "parameterTypes": []
      },
      {
        "name": "setLoadAllCachedOnInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDuplicateSizeThresholdInPercent",
        "parameterTypes": []
      },
      {
        "name": "getApplyRestrictions",
        "parameterTypes": []
      },
      {
        "name": "getIdFallbackToQueryGeneration",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.auth.AuthConfig",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "authType"
      }
    ],
    "methods": [
      {
        "name": "setRememberUsers",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestrictDetailsDl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAuthHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAllowApiStats",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestrictAdmin",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isRestrictStats",
        "parameterTypes": []
      },
      {
        "name": "isRememberUsers",
        "parameterTypes": []
      },
      {
        "name": "setRestrictStats",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAuthHeader",
        "parameterTypes": []
      },
      {
        "name": "getUsers",
        "parameterTypes": []
      },
      {
        "name": "setAuthType",
        "parameterTypes": [
          "org.nzbhydra.config.auth.AuthType"
        ]
      },
      {
        "name": "setRestrictSearch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUsers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isRestrictIndexerSelection",
        "parameterTypes": []
      },
      {
        "name": "setRememberMeValidityDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isRestrictSearch",
        "parameterTypes": []
      },
      {
        "name": "isAllowApiStats",
        "parameterTypes": []
      },
      {
        "name": "isAuthConfigured",
        "parameterTypes": []
      },
      {
        "name": "isRestrictDetailsDl",
        "parameterTypes": []
      },
      {
        "name": "getAuthHeaderIpRanges",
        "parameterTypes": []
      },
      {
        "name": "getAuthType",
        "parameterTypes": []
      },
      {
        "name": "setRestrictIndexerSelection",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getRememberMeValidityDays",
        "parameterTypes": []
      },
      {
        "name": "setAuthHeaderIpRanges",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isRestrictAdmin",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.auth.UserAuthConfig",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isMaySeeStats",
        "parameterTypes": []
      },
      {
        "name": "setMaySeeDetailsDl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShowIndexerSelection",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "isMaySeeDetailsDl",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMaySeeAdmin",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isShowIndexerSelection",
        "parameterTypes": []
      },
      {
        "name": "isMaySeeAdmin",
        "parameterTypes": []
      },
      {
        "name": "setMaySeeStats",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.category.CategoriesConfig",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isEnableCategorySizes",
        "parameterTypes": []
      },
      {
        "name": "lambda$withoutAll$0",
        "parameterTypes": [
          "org.nzbhydra.config.category.Category"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getDefaultCategory",
        "parameterTypes": []
      },
      {
        "name": "setDefaultCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "setEnableCategorySizes",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "withoutAll",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.category.Category",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "newznabCategories"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getApplyRestrictionsType",
        "parameterTypes": []
      },
      {
        "name": "setForbiddenWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPreselect",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setForbiddenRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRequiredWords",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getMinSizePreset",
        "parameterTypes": []
      },
      {
        "name": "setApplyRestrictionsType",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setApplySizeLimitsToApi",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRequiredRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getForbiddenWords",
        "parameterTypes": []
      },
      {
        "name": "setMinSizePreset",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "setMayBeSelected",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isMayBeSelected",
        "parameterTypes": []
      },
      {
        "name": "setSearchType",
        "parameterTypes": [
          "org.nzbhydra.config.searching.SearchType"
        ]
      },
      {
        "name": "deepEquals",
        "parameterTypes": [
          "org.nzbhydra.config.category.Category"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getNewznabCategories",
        "parameterTypes": []
      },
      {
        "name": "getSubtype",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setRequiredWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getRequiredRegex",
        "parameterTypes": []
      },
      {
        "name": "setNewznabCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isApplySizeLimitsToApi",
        "parameterTypes": []
      },
      {
        "name": "getIgnoreResultsFrom",
        "parameterTypes": []
      },
      {
        "name": "setSubtype",
        "parameterTypes": [
          "org.nzbhydra.config.category.Category$Subtype"
        ]
      },
      {
        "name": "getForbiddenRegex",
        "parameterTypes": []
      },
      {
        "name": "setIgnoreResultsFrom",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "getSearchType",
        "parameterTypes": []
      },
      {
        "name": "isPreselect",
        "parameterTypes": []
      },
      {
        "name": "getMaxSizePreset",
        "parameterTypes": []
      },
      {
        "name": "setMaxSizePreset",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.downloading.DownloaderConfig",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getIconCssClass",
        "parameterTypes": []
      },
      {
        "name": "setDownloaderType",
        "parameterTypes": [
          "org.nzbhydra.downloading.DownloaderType"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAddPaused",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDownloadType",
        "parameterTypes": []
      },
      {
        "name": "getApiKey",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "isAddPaused",
        "parameterTypes": []
      },
      {
        "name": "setApiKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNzbAddingType",
        "parameterTypes": []
      },
      {
        "name": "getDefaultCategory",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "setDefaultCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNzbAddingType",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.NzbAddingType"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDownloaderType",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setIconCssClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDownloadType",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.DownloadType"
        ]
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.downloading.DownloadingConfig",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "nzbAccessType"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getExternalUrl",
        "parameterTypes": []
      },
      {
        "name": "isUpdateStatuses",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setSaveTorrentsTo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSendMagnetLinks",
        "parameterTypes": []
      },
      {
        "name": "setSendMagnetLinks",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setDownloaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setShowDownloaderStatus",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSaveNzbsTo",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getPrimaryDownloader",
        "parameterTypes": []
      },
      {
        "name": "setNzbAccessType",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.FileDownloadAccessType"
        ]
      },
      {
        "name": "getDownloaders",
        "parameterTypes": []
      },
      {
        "name": "isShowDownloaderStatus",
        "parameterTypes": []
      },
      {
        "name": "setFallbackForFailed",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "getSaveTorrentsTo",
        "parameterTypes": []
      },
      {
        "name": "setSaveNzbsTo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNzbAccessType",
        "parameterTypes": []
      },
      {
        "name": "setPrimaryDownloader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateStatuses",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getFallbackForFailed",
        "parameterTypes": []
      },
      {
        "name": "setExternalUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.indexer.CapsCheckRequest",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      },
      {
        "name": "getIndexerConfig",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getCheckType",
        "parameterTypes": []
      },
      {
        "name": "setCheckType",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.CapsCheckRequest$CheckType"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.indexer.CheckCapsResponse",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setConfigComplete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getIndexerConfig",
        "parameterTypes": []
      },
      {
        "name": "isAllCapsChecked",
        "parameterTypes": []
      },
      {
        "name": "setAllCapsChecked",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isConfigComplete",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.indexer.IndexerCategoryConfig$MainCategory",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getSubCategories",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSubCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.indexer.IndexerCategoryConfig$SubCategory",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.indexer.IndexerConfig",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "supportedSearchIds"
      },
      {
        "name": "enabledForSearchSource"
      },
      {
        "name": "backend"
      },
      {
        "name": "state"
      },
      {
        "name": "disabledAt"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getSearchModuleType",
        "parameterTypes": []
      },
      {
        "name": "setDisabledAt",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setGeneralMinSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCategoryMapping",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerCategoryConfig"
        ]
      },
      {
        "name": "setState",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig$State"
        ]
      },
      {
        "name": "setColor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getVipExpirationDate",
        "parameterTypes": []
      },
      {
        "name": "setApiKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConfigComplete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabledCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getApiPath",
        "parameterTypes": []
      },
      {
        "name": "setSupportedSearchIds",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getBackend",
        "parameterTypes": []
      },
      {
        "name": "setSupportedSearchTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getHost",
        "parameterTypes": []
      },
      {
        "name": "setShowOnSearch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllCapsChecked",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": []
      },
      {
        "name": "getHitLimit",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setHitLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getHitLimitResetTime",
        "parameterTypes": []
      },
      {
        "name": "getApiKey",
        "parameterTypes": []
      },
      {
        "name": "getCustomParameters",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHitLimitResetTime",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getSupportedSearchTypes",
        "parameterTypes": []
      },
      {
        "name": "isEligibleForInternalSearch",
        "parameterTypes": []
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoadLimitOnRandom",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMinSeeders",
        "parameterTypes": []
      },
      {
        "name": "getGeneralMinSize",
        "parameterTypes": []
      },
      {
        "name": "getSchedule",
        "parameterTypes": []
      },
      {
        "name": "isIndexerEquals",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig",
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      },
      {
        "name": "isShowOnSearch",
        "parameterTypes": []
      },
      {
        "name": "getEnabledCategories",
        "parameterTypes": []
      },
      {
        "name": "getDownloadLimit",
        "parameterTypes": []
      },
      {
        "name": "setScore",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getScore",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "setApiPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLastError",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "setVipExpirationDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabledForSearchSource",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setDisabledUntil",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getDisabledAt",
        "parameterTypes": []
      },
      {
        "name": "isPreselect",
        "parameterTypes": []
      },
      {
        "name": "getLoadLimitOnRandom",
        "parameterTypes": []
      },
      {
        "name": "setBackend",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.BackendType"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMinSeeders",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getSupportedSearchIds",
        "parameterTypes": []
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "setSchedule",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getColor",
        "parameterTypes": []
      },
      {
        "name": "isAllCapsChecked",
        "parameterTypes": []
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCustomParameters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isConfigComplete",
        "parameterTypes": []
      },
      {
        "name": "setPreselect",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getEnabledForSearchSource",
        "parameterTypes": []
      },
      {
        "name": "setDownloadLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getDisabledUntil",
        "parameterTypes": []
      },
      {
        "name": "getDisabledLevel",
        "parameterTypes": []
      },
      {
        "name": "setSearchModuleType",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.SearchModuleType"
        ]
      },
      {
        "name": "setLastError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisabledLevel",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getCategoryMapping",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.safeconfig.SafeCategory",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getSearchType",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getMinSizePreset",
        "parameterTypes": []
      },
      {
        "name": "isPreselect",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "isMayBeSelected",
        "parameterTypes": []
      },
      {
        "name": "getMaxSizePreset",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getIgnoreResultsFrom",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.safeconfig.SafeConfig",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getNotificationConfig",
        "parameterTypes": []
      },
      {
        "name": "setDereferer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCategoriesConfig",
        "parameterTypes": []
      },
      {
        "name": "setAuthType",
        "parameterTypes": [
          "org.nzbhydra.config.auth.AuthType"
        ]
      },
      {
        "name": "setNotificationConfig",
        "parameterTypes": [
          "org.nzbhydra.config.safeconfig.SafeNotificationConfig"
        ]
      },
      {
        "name": "setCategoriesConfig",
        "parameterTypes": [
          "org.nzbhydra.config.safeconfig.SafeCategoriesConfig"
        ]
      },
      {
        "name": "getLogging",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setDownloading",
        "parameterTypes": [
          "org.nzbhydra.config.safeconfig.SafeDownloadingConfig"
        ]
      },
      {
        "name": "lambda$new$0",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      },
      {
        "name": "setIndexers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getDownloading",
        "parameterTypes": []
      },
      {
        "name": "setKeepHistory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSearching",
        "parameterTypes": []
      },
      {
        "name": "setShowNews",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAuthType",
        "parameterTypes": []
      },
      {
        "name": "getIndexers",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLogging",
        "parameterTypes": [
          "org.nzbhydra.config.safeconfig.SafeLoggingConfig"
        ]
      },
      {
        "name": "setSearching",
        "parameterTypes": [
          "org.nzbhydra.config.safeconfig.SafeSearchingConfig"
        ]
      },
      {
        "name": "getDereferer",
        "parameterTypes": []
      },
      {
        "name": "isShowNews",
        "parameterTypes": []
      },
      {
        "name": "isKeepHistory",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.safeconfig.SafeDownloaderConfig",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getIconCssClass",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDownloadType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDefaultCategory",
        "parameterTypes": []
      },
      {
        "name": "getDownloadType",
        "parameterTypes": []
      },
      {
        "name": "setDefaultCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIconCssClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDownloaderType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDownloaderType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.safeconfig.SafeIndexerConfig",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getVipExpirationDate",
        "parameterTypes": []
      },
      {
        "name": "setPreselect",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isShowOnSearch",
        "parameterTypes": []
      },
      {
        "name": "setVipExpirationDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShowOnSearch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getEnabledForSearchSource",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getSearchModuleType",
        "parameterTypes": []
      },
      {
        "name": "getColor",
        "parameterTypes": []
      },
      {
        "name": "setSearchModuleType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isPreselect",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setEnabledForSearchSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setColor",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.searching.CustomQueryAndTitleMapping",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "fromPattern"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getFrom",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setFrom",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getFromPattern",
        "parameterTypes": []
      },
      {
        "name": "setFromPattern",
        "parameterTypes": [
          "java.util.regex.Pattern"
        ]
      },
      {
        "name": "setSearchType",
        "parameterTypes": [
          "org.nzbhydra.config.searching.SearchType"
        ]
      },
      {
        "name": "getTo",
        "parameterTypes": []
      },
      {
        "name": "setTo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSearchType",
        "parameterTypes": []
      },
      {
        "name": "getAffectedValue",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setAffectedValue",
        "parameterTypes": [
          "org.nzbhydra.config.searching.AffectedValue"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.validation.ConfigValidationResult",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "isOk",
        "parameterTypes": []
      },
      {
        "name": "setErrorMessages",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getNewConfig",
        "parameterTypes": []
      },
      {
        "name": "getWarningMessages",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setWarningMessages",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setOk",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNewConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "isRestartNeeded",
        "parameterTypes": []
      },
      {
        "name": "getErrorMessages",
        "parameterTypes": []
      },
      {
        "name": "setRestartNeeded",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.database.DatabaseRecreationConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.debuginfos.DebugInfosProvider$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.debuginfos.DebugInfosWeb$Endpoint",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getProduces",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getEndpoint",
        "parameterTypes": []
      },
      {
        "name": "getConsumes",
        "parameterTypes": []
      },
      {
        "name": "getMethods",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getParams",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.debuginfos.DebugInfosWeb$PrefixAndEndpoint",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getEndpoints",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getPrefix",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.debuginfos.DebugInfosWeb$ThreadCpuUsageChartData",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getKey",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getValues",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.debuginfos.DebugInfosWeb$TimeAndValue",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getTime",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.AddFilesRequest",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getSearchResults",
        "parameterTypes": []
      },
      {
        "name": "setSearchResults",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getDownloaderName",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDownloaderName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCategory",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.AddFilesRequest$SearchResult",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getOriginalCategory",
        "parameterTypes": []
      },
      {
        "name": "setOriginalCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSearchResultId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMappedCategory",
        "parameterTypes": []
      },
      {
        "name": "setMappedCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getSearchResultId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.DownloadStatusUpdater$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.downloading.FileDownloadEntity",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "searchResult"
      }
    ],
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "org.nzbhydra.downloading.FileDownloadStatus"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getError",
        "parameterTypes": []
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getIp",
        "parameterTypes": []
      },
      {
        "name": "getTime",
        "parameterTypes": []
      },
      {
        "name": "setExternalId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExternalId",
        "parameterTypes": []
      },
      {
        "name": "getAccessSource",
        "parameterTypes": []
      },
      {
        "name": "setSearchResult",
        "parameterTypes": [
          "org.nzbhydra.searching.db.SearchResultEntity"
        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAccessSource",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSource"
        ]
      },
      {
        "name": "setNzbAccessType",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.FileDownloadAccessType"
        ]
      },
      {
        "name": "setIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSearchResult",
        "parameterTypes": []
      },
      {
        "name": "getAge",
        "parameterTypes": []
      },
      {
        "name": "getNzbAccessType",
        "parameterTypes": []
      },
      {
        "name": "setAge",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.FileDownloadEntityTO",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "org.nzbhydra.downloading.FileDownloadStatus"
        ]
      },
      {
        "name": "setAge",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getIp",
        "parameterTypes": []
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNzbAccessType",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAccessSource",
        "parameterTypes": []
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSearchResult",
        "parameterTypes": []
      },
      {
        "name": "getAge",
        "parameterTypes": []
      },
      {
        "name": "setNzbAccessType",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.FileDownloadAccessType"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setAccessSource",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSource"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getError",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setSearchResult",
        "parameterTypes": [
          "org.nzbhydra.searching.db.SearchResultEntityTO"
        ]
      },
      {
        "name": "setExternalId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExternalId",
        "parameterTypes": []
      },
      {
        "name": "getTime",
        "parameterTypes": []
      },
      {
        "name": "setIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.FileHandler$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.downloading.FileZipResponse",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setMissedIds",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "getMissedIds",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getAddedIds",
        "parameterTypes": []
      },
      {
        "name": "setZipFilepath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getZipFilepath",
        "parameterTypes": []
      },
      {
        "name": "isSuccessful",
        "parameterTypes": []
      },
      {
        "name": "setSuccessful",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddedIds",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.AddNzbsResponse",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAddedIds",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setSuccessful",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMissedIds",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAddedIds",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "isSuccessful",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getMissedIds",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderStatus",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDownloadingTitlePercentFinished",
        "parameterTypes": []
      },
      {
        "name": "getDownloadingTitleRemainingTimeFormatted",
        "parameterTypes": []
      },
      {
        "name": "setRemainingSeconds",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setDownloadingTitleRemainingTimeFormatted",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getRemainingSizeInMegaBytes",
        "parameterTypes": []
      },
      {
        "name": "setDownloadingTitleRemainingSizeFormatted",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLastDownloadRate",
        "parameterTypes": []
      },
      {
        "name": "setLastDownloadRate",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setDownloadRateFormatted",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDownloaderType",
        "parameterTypes": []
      },
      {
        "name": "setLastUpdateForNow",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "setElementsInQueue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getRemainingSizeFormatted",
        "parameterTypes": []
      },
      {
        "name": "getRemainingTimeFormatted",
        "parameterTypes": []
      },
      {
        "name": "isLastUpdateForNow",
        "parameterTypes": []
      },
      {
        "name": "setDownloadingTitlePercentFinished",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setDownloadRateInKilobytes",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": []
      },
      {
        "name": "setRemainingTimeFormatted",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getElementsInQueue",
        "parameterTypes": []
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemainingSizeInMegaBytes",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getRemainingSeconds",
        "parameterTypes": []
      },
      {
        "name": "getDownloaderName",
        "parameterTypes": []
      },
      {
        "name": "setState",
        "parameterTypes": [
          "org.nzbhydra.downloading.downloaders.DownloaderStatus$State"
        ]
      },
      {
        "name": "setDownloaderName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemainingSizeFormatted",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDownloaderType",
        "parameterTypes": [
          "org.nzbhydra.downloading.DownloaderType"
        ]
      },
      {
        "name": "setDownloadingRatesInKilobytes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getDownloadingTitleRemainingSizeFormatted",
        "parameterTypes": []
      },
      {
        "name": "setDownloadingTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDownloadingRatesInKilobytes",
        "parameterTypes": []
      },
      {
        "name": "getDownloadingTitle",
        "parameterTypes": []
      },
      {
        "name": "getDownloadRateInKilobytes",
        "parameterTypes": []
      },
      {
        "name": "getDownloadRateFormatted",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.torrents.SaveOrSendTorrentsResponse",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getMissedIds",
        "parameterTypes": []
      },
      {
        "name": "setMissedIds",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setSuccessful",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAddedIds",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isSuccessful",
        "parameterTypes": []
      },
      {
        "name": "setAddedIds",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.torrents.TorrentFileHandler$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.externaltools.AddDialogInfo",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getNzbhydraHost",
        "parameterTypes": []
      },
      {
        "name": "setTorrentIndexersConfigured",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setNzbhydraHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsenetIndexersConfigured",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "isUsenetIndexersConfigured",
        "parameterTypes": []
      },
      {
        "name": "setPrioritiesConfigured",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isPrioritiesConfigured",
        "parameterTypes": []
      },
      {
        "name": "isTorrentIndexersConfigured",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.externaltools.AddRequest",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getPriority",
        "parameterTypes": []
      },
      {
        "name": "isEnableInteractiveSearch",
        "parameterTypes": []
      },
      {
        "name": "setPriority",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getSeasonPackSeedTime",
        "parameterTypes": []
      },
      {
        "name": "setXdarrHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConfigureForUsenet",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAddDisabledIndexers",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setXdarrApiKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnableAutomaticSearch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRemoveYearFromSearchString",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDiscographySeedTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseHydraPriorities",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSeedTime",
        "parameterTypes": []
      },
      {
        "name": "getEarlyDownloadLimit",
        "parameterTypes": []
      },
      {
        "name": "setMinimumSeeders",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSeedRatio",
        "parameterTypes": []
      },
      {
        "name": "getNzbhydraHost",
        "parameterTypes": []
      },
      {
        "name": "isEnableRss",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setExternalTool",
        "parameterTypes": [
          "org.nzbhydra.externaltools.AddRequest$ExternalTool"
        ]
      },
      {
        "name": "isAddDisabledIndexers",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isAddTorrent",
        "parameterTypes": []
      },
      {
        "name": "getExternalTool",
        "parameterTypes": []
      },
      {
        "name": "isConfigureForTorrents",
        "parameterTypes": []
      },
      {
        "name": "isEnableAutomaticSearch",
        "parameterTypes": []
      },
      {
        "name": "getDiscographySeedTime",
        "parameterTypes": []
      },
      {
        "name": "setSeedTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isConfigureForUsenet",
        "parameterTypes": []
      },
      {
        "name": "isAddUsenet",
        "parameterTypes": []
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAnimeCategories",
        "parameterTypes": []
      },
      {
        "name": "getXdarrHost",
        "parameterTypes": []
      },
      {
        "name": "setEnableInteractiveSearch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMinimumSeeders",
        "parameterTypes": []
      },
      {
        "name": "setAddTorrent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEarlyDownloadLimit",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isUseHydraPriorities",
        "parameterTypes": []
      },
      {
        "name": "setNzbhydraName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setSeasonPackSeedTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNzbhydraHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getXdarrApiKey",
        "parameterTypes": []
      },
      {
        "name": "getAdditionalParameters",
        "parameterTypes": []
      },
      {
        "name": "setSeedRatio",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAnimeCategories",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConfigureForTorrents",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getNzbhydraName",
        "parameterTypes": []
      },
      {
        "name": "getAddType",
        "parameterTypes": []
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "setEnableRss",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAdditionalParameters",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAddUsenet",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isRemoveYearFromSearchString",
        "parameterTypes": []
      },
      {
        "name": "setAddType",
        "parameterTypes": [
          "org.nzbhydra.externaltools.AddRequest$AddType"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.History$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.History$IndexerSearchTO",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isSuccessful",
        "parameterTypes": []
      },
      {
        "name": "setIndexerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIndexerName",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setSuccessful",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setResultsCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getResultsCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.History$SearchDetails",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getIp",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIndexerSearches",
        "parameterTypes": []
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIndexerSearches",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.HistoryWeb$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.SortModel",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getColumn",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setSortMode",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getSortMode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.Stats$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.StatsResponse",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getSearchSharesPerIp",
        "parameterTypes": []
      },
      {
        "name": "getIndexerScores",
        "parameterTypes": []
      },
      {
        "name": "setNumberOfEnabledIndexers",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUserAgentDownloadShares",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDownloadsPerHourOfDay",
        "parameterTypes": []
      },
      {
        "name": "getSearchesPerHourOfDay",
        "parameterTypes": []
      },
      {
        "name": "setIndexerApiAccessStats",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getIndexerApiAccessStats",
        "parameterTypes": []
      },
      {
        "name": "setDownloadsPerHourOfDay",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getDownloadSharesPerUser",
        "parameterTypes": []
      },
      {
        "name": "setIndexerScores",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getAvgResponseTimes",
        "parameterTypes": []
      },
      {
        "name": "getBefore",
        "parameterTypes": []
      },
      {
        "name": "getUserAgentDownloadShares",
        "parameterTypes": []
      },
      {
        "name": "setSuccessfulDownloadsPerIndexer",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getSearchSharesPerUser",
        "parameterTypes": []
      },
      {
        "name": "getIndexerDownloadShares",
        "parameterTypes": []
      },
      {
        "name": "setDownloadsPerAgeStats",
        "parameterTypes": [
          "org.nzbhydra.historystats.stats.DownloadPerAgeStats"
        ]
      },
      {
        "name": "setUserAgentSearchShares",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getSuccessfulDownloadsPerIndexer",
        "parameterTypes": []
      },
      {
        "name": "setNumberOfConfiguredIndexers",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getUserAgentSearchShares",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfConfiguredIndexers",
        "parameterTypes": []
      },
      {
        "name": "setDownloadsPerDayOfWeek",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSearchSharesPerIp",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAfter",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setAvgResponseTimes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getDownloadsPerDayOfWeek",
        "parameterTypes": []
      },
      {
        "name": "setSearchesPerHourOfDay",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getSearchesPerDayOfWeek",
        "parameterTypes": []
      },
      {
        "name": "setSearchesPerDayOfWeek",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSearchSharesPerUser",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getAfter",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDownloadSharesPerIp",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfEnabledIndexers",
        "parameterTypes": []
      },
      {
        "name": "getDownloadsPerAgeStats",
        "parameterTypes": []
      },
      {
        "name": "setDownloadSharesPerUser",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIndexerDownloadShares",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBefore",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setDownloadSharesPerIp",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.stats.AverageResponseTime",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAvgResponseTime",
        "parameterTypes": []
      },
      {
        "name": "getDelta",
        "parameterTypes": []
      },
      {
        "name": "setAvgResponseTime",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setDelta",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "getIndexer",
        "parameterTypes": []
      },
      {
        "name": "setIndexer",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.stats.CountPerDayOfWeek",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getCount",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDay",
        "parameterTypes": []
      },
      {
        "name": "setDay",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.stats.CountPerHourOfDay",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setHour",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getHour",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.stats.DownloadOrSearchSharePerUserOrIp",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setPercentage",
        "parameterTypes": [
          "float"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getKey",
        "parameterTypes": []
      },
      {
        "name": "setCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getCount",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPercentage",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.stats.DownloadPerAge",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setAge",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getCount",
        "parameterTypes": []
      },
      {
        "name": "getAge",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.stats.DownloadPerAgeStats",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setPercentOlder2000",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDownloadsPerAge",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getPercentOlder3000",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setPercentOlder3000",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getDownloadsPerAge",
        "parameterTypes": []
      },
      {
        "name": "getPercentOlder1000",
        "parameterTypes": []
      },
      {
        "name": "getPercentOlder2000",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setPercentOlder1000",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setAverageAge",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getAverageAge",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.stats.HistoryRequest",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "isDistinct",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setPage",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getPage",
        "parameterTypes": []
      },
      {
        "name": "setFilterModel",
        "parameterTypes": [
          "org.nzbhydra.historystats.FilterModel"
        ]
      },
      {
        "name": "isOnlyCurrentUser",
        "parameterTypes": []
      },
      {
        "name": "setOnlyCurrentUser",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getLimit",
        "parameterTypes": []
      },
      {
        "name": "setLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getSortModel",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getFilterModel",
        "parameterTypes": []
      },
      {
        "name": "setSortModel",
        "parameterTypes": [
          "org.nzbhydra.historystats.SortModel"
        ]
      },
      {
        "name": "setDistinct",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.stats.IndexerApiAccessStatsEntry",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setAverageAccessesPerDay",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setPercentConnectionError",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setIndexerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getIndexerName",
        "parameterTypes": []
      },
      {
        "name": "getPercentConnectionError",
        "parameterTypes": []
      },
      {
        "name": "getAverageAccessesPerDay",
        "parameterTypes": []
      },
      {
        "name": "setPercentSuccessful",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "getPercentSuccessful",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.stats.IndexerDownloadShare",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setIndexerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShare",
        "parameterTypes": [
          "float"
        ]
      },
      {
        "name": "setTotal",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getIndexerName",
        "parameterTypes": []
      },
      {
        "name": "getShare",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getTotal",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.stats.IndexerScore",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setIndexerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUniqueDownloads",
        "parameterTypes": []
      },
      {
        "name": "setUniqueDownloads",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAverageUniquenessScore",
        "parameterTypes": []
      },
      {
        "name": "setAverageUniquenessScore",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getIndexerName",
        "parameterTypes": []
      },
      {
        "name": "setInvolvedSearches",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getInvolvedSearches",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.stats.StatsRequest",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setSuccessfulDownloadsPerIndexer",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isDownloadsPerDayOfWeek",
        "parameterTypes": []
      },
      {
        "name": "isIndexerDownloadShares",
        "parameterTypes": []
      },
      {
        "name": "setUserAgentDownloadShares",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDownloadSharesPerUser",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIncludeDisabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDownloadsPerHourOfDay",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSearchSharesPerUser",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isUserAgentDownloadShares",
        "parameterTypes": []
      },
      {
        "name": "setSearchesPerDayOfWeek",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBefore",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "isDownloadSharesPerUser",
        "parameterTypes": []
      },
      {
        "name": "isAvgResponseTimes",
        "parameterTypes": []
      },
      {
        "name": "isSearchSharesPerIp",
        "parameterTypes": []
      },
      {
        "name": "setDownloadsPerAgeStats",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isDownloadsPerAgeStats",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setSearchesPerHourOfDay",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSearchSharesPerIp",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBefore",
        "parameterTypes": []
      },
      {
        "name": "isSearchSharesPerUser",
        "parameterTypes": []
      },
      {
        "name": "isSearchesPerHourOfDay",
        "parameterTypes": []
      },
      {
        "name": "isUserAgentSearchShares",
        "parameterTypes": []
      },
      {
        "name": "setIndexerApiAccessStats",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isIncludeDisabled",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setUserAgentSearchShares",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setAvgIndexerUniquenessScore",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isIndexerApiAccessStats",
        "parameterTypes": []
      },
      {
        "name": "setDownloadsPerDayOfWeek",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isDownloadsPerHourOfDay",
        "parameterTypes": []
      },
      {
        "name": "isAvgIndexerUniquenessScore",
        "parameterTypes": []
      },
      {
        "name": "setAvgResponseTimes",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isSuccessfulDownloadsPerIndexer",
        "parameterTypes": []
      },
      {
        "name": "setAfter",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setDownloadSharesPerIp",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAfter",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setIndexerDownloadShares",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isSearchesPerDayOfWeek",
        "parameterTypes": []
      },
      {
        "name": "isDownloadSharesPerIp",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.stats.SuccessfulDownloadsPerIndexer",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setCountAll",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setCountSuccessful",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getCountAll",
        "parameterTypes": []
      },
      {
        "name": "getCountSuccessful",
        "parameterTypes": []
      },
      {
        "name": "setCountError",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getIndexerName",
        "parameterTypes": []
      },
      {
        "name": "getPercentSuccessful",
        "parameterTypes": []
      },
      {
        "name": "setIndexerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCountError",
        "parameterTypes": []
      },
      {
        "name": "setPercentSuccessful",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.stats.UserAgentShare",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setPercentage",
        "parameterTypes": [
          "float"
        ]
      },
      {
        "name": "getPercentage",
        "parameterTypes": []
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "setCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getCount",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.DevIndexer$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.DogNzb$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerApiAccessEntity",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getResponseTime",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setResponseTime",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "getResult",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setIndexer",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "setAccessType",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerApiAccessType"
        ]
      },
      {
        "name": "getError",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getTime",
        "parameterTypes": []
      },
      {
        "name": "setResult",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerAccessResult"
        ]
      },
      {
        "name": "getIndexer",
        "parameterTypes": []
      },
      {
        "name": "getAccessType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.IndexerApiAccessEntityShort",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getTime",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setSuccessful",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isSuccessful",
        "parameterTypes": []
      },
      {
        "name": "setIndexerId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getIndexerId",
        "parameterTypes": []
      },
      {
        "name": "setApiAccessType",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerApiAccessType"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "getApiAccessType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.IndexerEntity",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.IndexerEntityTO",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.IndexerSearchEntity",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setSuccessful",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setIndexerEntity",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "getResultsCount",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSearchEntity",
        "parameterTypes": [
          "org.nzbhydra.searching.db.SearchEntity"
        ]
      },
      {
        "name": "getSearchEntity",
        "parameterTypes": []
      },
      {
        "name": "setResultsCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getSuccessful",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getIndexerEntity",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.NfoResult",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setSuccessful",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "unsuccessful",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "withoutNfo",
        "parameterTypes": []
      },
      {
        "name": "isHasNfo",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setHasNfo",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "withNfo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getContent",
        "parameterTypes": []
      },
      {
        "name": "isSuccessful",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.capscheck.IndexerWeb$JacketConfigReadRequest",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getJackettConfig",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setExistingIndexers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getExistingIndexers",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setJackettConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.capscheck.IndexerWeb$JacketConfigReadResponse",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setAddedTrackers",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setUpdatedTrackers",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setNewIndexersConfig",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getNewIndexersConfig",
        "parameterTypes": []
      },
      {
        "name": "getAddedTrackers",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedTrackers",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.status.IndexerLimit",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setApiHitLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getApiHits",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getIndexer",
        "parameterTypes": []
      },
      {
        "name": "getApiHitLimit",
        "parameterTypes": []
      },
      {
        "name": "getOldestApiHit",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getDownloadLimit",
        "parameterTypes": []
      },
      {
        "name": "setOldestDownload",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setApiHits",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setOldestApiHit",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setDownloads",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDownloadLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getOldestDownload",
        "parameterTypes": []
      },
      {
        "name": "getDownloads",
        "parameterTypes": []
      },
      {
        "name": "setIndexer",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.status.IndexerStatusesAndLimits$IndexerStatus",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setApiHits",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDownloadHits",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDownloadResetTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "getLevel",
        "parameterTypes": []
      },
      {
        "name": "getDisabledUntil",
        "parameterTypes": []
      },
      {
        "name": "setDownloadHitLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getApiResetTime",
        "parameterTypes": []
      },
      {
        "name": "getDownloadHitLimit",
        "parameterTypes": []
      },
      {
        "name": "getDownloadResetTime",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setApiHitLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setApiResetTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setLastError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIndexer",
        "parameterTypes": []
      },
      {
        "name": "setLevel",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getVipExpirationDate",
        "parameterTypes": []
      },
      {
        "name": "getState",
        "parameterTypes": []
      },
      {
        "name": "setVipExpirationDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setState",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getApiHitLimit",
        "parameterTypes": []
      },
      {
        "name": "setIndexer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisabledUntil",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "getLastError",
        "parameterTypes": []
      },
      {
        "name": "getApiHits",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getDownloadHits",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.logging.LogContentProvider$JsonLogResponse",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setHasMore",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getLineCount",
        "parameterTypes": []
      },
      {
        "name": "isHasMore",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setLineCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLines",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getLines",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.SemanticVersion",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAsString",
        "parameterTypes": []
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "stateMinor",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "stateMeta",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "org.nzbhydra.mapping.SemanticVersion"
        ]
      },
      {
        "name": "isUpdateFor",
        "parameterTypes": [
          "org.nzbhydra.mapping.SemanticVersion"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setAsString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "stateMajor",
        "parameterTypes": []
      },
      {
        "name": "isCompatibleUpdateFor",
        "parameterTypes": [
          "org.nzbhydra.mapping.SemanticVersion"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "isSame",
        "parameterTypes": [
          "org.nzbhydra.mapping.SemanticVersion"
        ]
      },
      {
        "name": "stateRelease",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isSameOrNewer",
        "parameterTypes": [
          "org.nzbhydra.mapping.SemanticVersion"
        ]
      },
      {
        "name": "statePatch",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.changelog.ChangelogChangeEntry",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getText",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.changelog.ChangelogVersionEntry",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFinal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getChanges",
        "parameterTypes": []
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getDate",
        "parameterTypes": []
      },
      {
        "name": "isFinal",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setChanges",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getSemanticVersion",
        "parameterTypes": []
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "org.nzbhydra.mapping.changelog.ChangelogVersionEntry"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlError",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mediainfo.InfoProvider$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.mediainfo.MediaInfoTO",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setPosterUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setTvmazeId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getYear",
        "parameterTypes": []
      },
      {
        "name": "setYear",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getPosterUrl",
        "parameterTypes": []
      },
      {
        "name": "setImdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTvmazeId",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getTvdbId",
        "parameterTypes": []
      },
      {
        "name": "getTvrageId",
        "parameterTypes": []
      },
      {
        "name": "getImdbId",
        "parameterTypes": []
      },
      {
        "name": "setTvrageId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTvdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTmdbId",
        "parameterTypes": []
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setTmdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mediainfo.MovieInfo",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getImdbId",
        "parameterTypes": []
      },
      {
        "name": "getTmdbId",
        "parameterTypes": []
      },
      {
        "name": "setTmdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPosterUrl",
        "parameterTypes": []
      },
      {
        "name": "setPosterUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "org.nzbhydra.mediainfo.MovieInfo"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setYear",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getYear",
        "parameterTypes": []
      },
      {
        "name": "setImdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getNumberOfContainedIds",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mediainfo.TvInfo",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getImdbId",
        "parameterTypes": []
      },
      {
        "name": "getPosterUrl",
        "parameterTypes": []
      },
      {
        "name": "setTvdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setPosterUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setYear",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getYear",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfContainedIds",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "org.nzbhydra.mediainfo.TvInfo"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTvmazeId",
        "parameterTypes": []
      },
      {
        "name": "setImdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTvrageId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTvdbId",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setTvmazeId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTvrageId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.misc.WebHooks$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.news.NewsEntryForWeb",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getNews",
        "parameterTypes": []
      },
      {
        "name": "setForCurrentVersion",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isForNewerVersion",
        "parameterTypes": []
      },
      {
        "name": "setNews",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setForNewerVersion",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isForCurrentVersion",
        "parameterTypes": []
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.news.ShownNews",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.notifications.NotificationEntity",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "getMessageType",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "isDisplayed",
        "parameterTypes": []
      },
      {
        "name": "setNotificationEventType",
        "parameterTypes": [
          "org.nzbhydra.config.notification.NotificationEventType"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setUrls",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getNotificationEventType",
        "parameterTypes": []
      },
      {
        "name": "getUrls",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getTime",
        "parameterTypes": []
      },
      {
        "name": "setDisplayed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "setMessageType",
        "parameterTypes": [
          "org.nzbhydra.notifications.NotificationMessageType"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.notifications.NotificationEntityTO",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getTime",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDisplayed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isDisplayed",
        "parameterTypes": []
      },
      {
        "name": "getNotificationEventType",
        "parameterTypes": []
      },
      {
        "name": "setNotificationEventType",
        "parameterTypes": [
          "org.nzbhydra.config.notification.NotificationEventType"
        ]
      },
      {
        "name": "setMessageType",
        "parameterTypes": [
          "org.nzbhydra.notifications.NotificationMessageType"
        ]
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getMessageType",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "setUrls",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getUrls",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.CustomQueryAndTitleMappingHandler$TestRequest",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setExampleInput",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCustomQueryAndTitleMapping",
        "parameterTypes": [
          "org.nzbhydra.config.searching.CustomQueryAndTitleMapping"
        ]
      },
      {
        "name": "getCustomQueryAndTitleMapping",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getExampleInput",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.CustomQueryAndTitleMappingHandler$TestResponse",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getError",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "isMatch",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOutput",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.IndexerForSearchSelector$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.SearchModuleProvider$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.SearchResponse",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getNumberOfProcessedResults",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setNumberOfAcceptedResults",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getNumberOfAvailableResults",
        "parameterTypes": []
      },
      {
        "name": "getNotPickedIndexersWithReason",
        "parameterTypes": []
      },
      {
        "name": "getLimit",
        "parameterTypes": []
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getRejectedReasonsMap",
        "parameterTypes": []
      },
      {
        "name": "setNotPickedIndexersWithReason",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setNumberOfProcessedResults",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfRejectedResults",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfAcceptedResults",
        "parameterTypes": []
      },
      {
        "name": "getIndexerSearchMetaDatas",
        "parameterTypes": []
      },
      {
        "name": "setRejectedReasonsMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getNumberOfDuplicateResults",
        "parameterTypes": []
      },
      {
        "name": "setNumberOfDuplicateResults",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setNumberOfAvailableResults",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSearchResults",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIndexerSearchMetaDatas",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getSearchResults",
        "parameterTypes": []
      },
      {
        "name": "setNumberOfRejectedResults",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.Searcher$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.cleanup.OldResultsCleanupTask$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.cleanup.ShortIndexerApiAccessCleanup$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.db.IdentifierKeyValuePair",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "id"
      }
    ],
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getIdentifierKey",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setIdentifierValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIdentifierKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIdentifierValue",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.db.IdentifierKeyValuePairTO",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setIdentifierKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getIdentifierKey",
        "parameterTypes": []
      },
      {
        "name": "getIdentifierValue",
        "parameterTypes": []
      },
      {
        "name": "setIdentifierValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.db.SearchEntity",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equalsSearchEntity",
        "parameterTypes": [
          "org.nzbhydra.searching.db.SearchEntity"
        ]
      },
      {
        "name": "setCategoryName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIdentifiers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getEpisode",
        "parameterTypes": []
      },
      {
        "name": "setEpisode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAuthor",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getSeason",
        "parameterTypes": []
      },
      {
        "name": "setQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "setAuthor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIdentifiers",
        "parameterTypes": []
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSource"
        ]
      },
      {
        "name": "getSearchType",
        "parameterTypes": []
      },
      {
        "name": "setSeason",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getTime",
        "parameterTypes": []
      },
      {
        "name": "getQuery",
        "parameterTypes": []
      },
      {
        "name": "setSearchType",
        "parameterTypes": [
          "org.nzbhydra.config.searching.SearchType"
        ]
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComparingHash",
        "parameterTypes": []
      },
      {
        "name": "getCategoryName",
        "parameterTypes": []
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "getIp",
        "parameterTypes": []
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.db.SearchEntityTO",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCategoryName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSeason",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "setSearchType",
        "parameterTypes": [
          "org.nzbhydra.config.searching.SearchType"
        ]
      },
      {
        "name": "setAuthor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEpisode",
        "parameterTypes": []
      },
      {
        "name": "getQuery",
        "parameterTypes": []
      },
      {
        "name": "getIdentifiers",
        "parameterTypes": []
      },
      {
        "name": "getSeason",
        "parameterTypes": []
      },
      {
        "name": "setIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getTime",
        "parameterTypes": []
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSource"
        ]
      },
      {
        "name": "getSearchType",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setIdentifiers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setEpisode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIp",
        "parameterTypes": []
      },
      {
        "name": "getAuthor",
        "parameterTypes": []
      },
      {
        "name": "getCategoryName",
        "parameterTypes": []
      },
      {
        "name": "setQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.db.SearchResultEntityTO",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setFirstFound",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setDownloadType",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.DownloadType"
        ]
      },
      {
        "name": "getDetails",
        "parameterTypes": []
      },
      {
        "name": "setIndexerSearchEntityId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDetails",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIndexerSearchEntityId",
        "parameterTypes": []
      },
      {
        "name": "setIndexerGuid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIndexer",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntityTO"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getLink",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setPubDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "getFirstFound",
        "parameterTypes": []
      },
      {
        "name": "getIndexer",
        "parameterTypes": []
      },
      {
        "name": "getDownloadType",
        "parameterTypes": []
      },
      {
        "name": "getIndexerGuid",
        "parameterTypes": []
      },
      {
        "name": "getPubDate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.dtoseventsenums.IndexerSearchMetaData",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setResponseTime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isDidSearch",
        "parameterTypes": []
      },
      {
        "name": "isHasMoreResults",
        "parameterTypes": []
      },
      {
        "name": "setDidSearch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setWasSuccessful",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isWasSuccessful",
        "parameterTypes": []
      },
      {
        "name": "setNumberOfFoundResults",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getResponseTime",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getErrorMessage",
        "parameterTypes": []
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getNumberOfFoundResults",
        "parameterTypes": []
      },
      {
        "name": "setIndexerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTotalResultsKnown",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isTotalResultsKnown",
        "parameterTypes": []
      },
      {
        "name": "setHasMoreResults",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getIndexerName",
        "parameterTypes": []
      },
      {
        "name": "setNotPickedReason",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNotPickedReason",
        "parameterTypes": []
      },
      {
        "name": "setNumberOfAvailableResults",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getNumberOfAvailableResults",
        "parameterTypes": []
      },
      {
        "name": "setErrorMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.dtoseventsenums.SearchRequestParameters",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getIndexers",
        "parameterTypes": []
      },
      {
        "name": "getTmdbId",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTmdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMinsize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setMaxage",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getTvmazeId",
        "parameterTypes": []
      },
      {
        "name": "getImdbId",
        "parameterTypes": []
      },
      {
        "name": "setCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIndexers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "builder",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "setTvdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLimit",
        "parameterTypes": []
      },
      {
        "name": "getMode",
        "parameterTypes": []
      },
      {
        "name": "isLoadAll",
        "parameterTypes": []
      },
      {
        "name": "setMinage",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getTvdbId",
        "parameterTypes": []
      },
      {
        "name": "setMaxsize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getCategory",
        "parameterTypes": []
      },
      {
        "name": "getMaxsize",
        "parameterTypes": []
      },
      {
        "name": "getMinsize",
        "parameterTypes": []
      },
      {
        "name": "setSeason",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSearchRequestId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getEpisode",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "setLoadAll",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getSearchRequestId",
        "parameterTypes": []
      },
      {
        "name": "setTvrageId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEpisode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMaxage",
        "parameterTypes": []
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMinage",
        "parameterTypes": []
      },
      {
        "name": "getQuery",
        "parameterTypes": []
      },
      {
        "name": "getSeason",
        "parameterTypes": []
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setImdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTvrageId",
        "parameterTypes": []
      },
      {
        "name": "setTvmazeId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.uniqueness.IndexerUniquenessScoreEntity",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setHasResult",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setInvolved",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isHasResult",
        "parameterTypes": []
      },
      {
        "name": "setHave",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setIndexer",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "getHave",
        "parameterTypes": []
      },
      {
        "name": "getIndexer",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getInvolved",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.springconfig.AppConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.tasks.HydraTaskConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.tasks.HydraTaskScheduler$TaskInformation",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNextExecutionTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "getLastExecutionTime",
        "parameterTypes": []
      },
      {
        "name": "setLastExecutionTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "getNextExecutionTime",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.update.AutomaticUpdater$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.update.UpdateManager$PackageInfo",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAuthor",
        "parameterTypes": []
      },
      {
        "name": "getReleaseType",
        "parameterTypes": []
      },
      {
        "name": "setAuthor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setReleaseType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.update.UpdatesWeb$VersionsInfo",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getBetaVersion",
        "parameterTypes": []
      },
      {
        "name": "isBetaUpdateAvailable",
        "parameterTypes": []
      },
      {
        "name": "setBetaVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWrapperOutdated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAutomaticUpdateToNotice",
        "parameterTypes": []
      },
      {
        "name": "setLatestVersionIsBeta",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isLatestVersionIgnored",
        "parameterTypes": []
      },
      {
        "name": "isLatestVersionIsBeta",
        "parameterTypes": []
      },
      {
        "name": "isShowWhatsNewBanner",
        "parameterTypes": []
      },
      {
        "name": "isBetaVersionsEnabled",
        "parameterTypes": []
      },
      {
        "name": "getPackageInfo",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setCurrentVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBetaVersionsEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLatestVersionIgnored",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUpdateAvailable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isUpdatedExternally",
        "parameterTypes": []
      },
      {
        "name": "setAutomaticUpdateToNotice",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setBetaUpdateAvailable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getLatestVersion",
        "parameterTypes": []
      },
      {
        "name": "setPackageInfo",
        "parameterTypes": [
          "org.nzbhydra.update.UpdateManager$PackageInfo"
        ]
      },
      {
        "name": "isUpdateAvailable",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLatestVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCurrentVersion",
        "parameterTypes": []
      },
      {
        "name": "setShowUpdateBannerOnUpdatedExternally",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isWrapperOutdated",
        "parameterTypes": []
      },
      {
        "name": "setUpdatedExternally",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setShowWhatsNewBanner",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isShowUpdateBannerOnUpdatedExternally",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.BootstrappedDataTO",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getMaySeeDetailsDl",
        "parameterTypes": []
      },
      {
        "name": "getMaySeeSearch",
        "parameterTypes": []
      },
      {
        "name": "setSearchRestricted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getStatsRestricted",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getShowIndexerSelection",
        "parameterTypes": []
      },
      {
        "name": "getMaySeeAdmin",
        "parameterTypes": []
      },
      {
        "name": "setMaySeeDetailsDl",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getSafeConfig",
        "parameterTypes": []
      },
      {
        "name": "setAdminRestricted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaySeeAdmin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaySeeSearch",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSafeConfig",
        "parameterTypes": [
          "org.nzbhydra.config.safeconfig.SafeConfig"
        ]
      },
      {
        "name": "getMaySeeStats",
        "parameterTypes": []
      },
      {
        "name": "getAuthType",
        "parameterTypes": []
      },
      {
        "name": "setAuthConfigured",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setAuthType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatsRestricted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAdminRestricted",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setMaySeeStats",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getBaseUrl",
        "parameterTypes": []
      },
      {
        "name": "getAuthConfigured",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getSearchRestricted",
        "parameterTypes": []
      },
      {
        "name": "setShowIndexerSelection",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setBaseUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.WebConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.WebSocketConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.projection.SpelEvaluatingMethodInterceptor$TargetWrapper",
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "ch.qos.logback.classic.filter.ThresholdFilter",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "ch.qos.logback.classic.pattern.ThrowableHandlingConverter",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.ConsoleAppender",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.FileAppender",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.Layout",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.encoder.Encoder",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.filter.Filter",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.rolling.RollingFileAppender",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.rolling.RollingPolicy",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicy",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.rolling.TimeBasedRollingPolicy",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.rolling.TriggeringPolicy",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.spi.ContextAware",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.util.FileSize",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.Statistic",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getTagValueRepresentation",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.io.OutputStream",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Object",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "java.lang.Object",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getClass",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "notify",
        "parameterTypes": []
      },
      {
        "name": "notifyAll",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "wait",
        "parameterTypes": []
      },
      {
        "name": "wait",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "wait",
        "parameterTypes": [
          "long",
          "int"
        ]
      }
    ]
  },
  {
    "name": "java.lang.String",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Throwable",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "java.nio.charset.Charset",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.List",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "net.logstash.logback.composite.JsonProvider",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "net.logstash.logback.composite.JsonProviders",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "net.logstash.logback.decorate.JsonFactoryDecorator",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "net.logstash.logback.decorate.JsonGeneratorDecorator",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "net.logstash.logback.encoder.LogstashEncoder",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "net.logstash.logback.fieldnames.LogstashFieldNames",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.flywaydb.core.api.MigrationState",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "isFailed",
        "parameterTypes": []
      },
      {
        "name": "isApplied",
        "parameterTypes": []
      },
      {
        "name": "isResolved",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.NzbHydra",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getCacheManager",
        "parameterTypes": []
      },
      {
        "name": "loadBaseConfig",
        "parameterTypes": []
      },
      {
        "name": "main",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "startupDone",
        "parameterTypes": [
          "org.springframework.boot.context.event.ApplicationReadyEvent"
        ]
      },
      {
        "name": "warnIfSettingsOverwritten",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.api.CategoryConverter",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setCategoryProvider",
        "parameterTypes": [
          "org.nzbhydra.searching.CategoryProvider"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.HistoryUserInfoType",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.config.NotificationConfig$AppriseType",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.config.NotificationConfigEntry$MessageType",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.config.ProxyType",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.config.SearchSource",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.config.SearchSourceRestriction",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "isEnabled",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.auth.AuthType",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.config.category.Category$Subtype",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.config.downloading.DownloadType",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.config.downloading.FileDownloadAccessType",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.config.downloading.NzbAddingType",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.config.indexer.BackendType",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.config.indexer.CapsCheckRequest$CheckType",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.config.indexer.IndexerCategoryConfig",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "idsToNames"
      }
    ],
    "methods": [
      {
        "name": "getAnime",
        "parameterTypes": []
      },
      {
        "name": "getMagazine",
        "parameterTypes": []
      },
      {
        "name": "getComic",
        "parameterTypes": []
      },
      {
        "name": "setEbook",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAnime",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getEbook",
        "parameterTypes": []
      },
      {
        "name": "setAudiobook",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMagazine",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getAudiobook",
        "parameterTypes": []
      },
      {
        "name": "setComic",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.indexer.IndexerConfig$State",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.config.indexer.QueryFormat",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.config.indexer.SearchModuleType",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.config.mediainfo.MediaIdType",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.notification.NotificationEventType",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.config.safeconfig.SafeCategoriesConfig",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "getDefaultCategory",
        "parameterTypes": []
      },
      {
        "name": "isEnableCategorySizes",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.safeconfig.SafeDownloadingConfig",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getPrimaryDownloader",
        "parameterTypes": []
      },
      {
        "name": "getFileDownloadAccessType",
        "parameterTypes": []
      },
      {
        "name": "getSaveNzbsTo",
        "parameterTypes": []
      },
      {
        "name": "isShowDownloaderStatus",
        "parameterTypes": []
      },
      {
        "name": "isSendMagnetLinks",
        "parameterTypes": []
      },
      {
        "name": "getSaveTorrentsTo",
        "parameterTypes": []
      },
      {
        "name": "getDownloaders",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.safeconfig.SafeLoggingConfig",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getHistoryUserInfoType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.safeconfig.SafeNotificationConfig",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getDisplayNotificationsMax",
        "parameterTypes": []
      },
      {
        "name": "isDisplayNotifications",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.safeconfig.SafeSearchingConfig",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getCoverSize",
        "parameterTypes": []
      },
      {
        "name": "isShowQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "getLoadLimitInternal",
        "parameterTypes": []
      },
      {
        "name": "getPreselectQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "getCustomQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "isAlwaysShowQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "getMaxAge",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreTemporarilyDisabled",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.searching.AffectedValue",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.config.searching.SearchType",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.database.DatabaseRecreationConfig",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getDatabaseRecreationBean",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.DownloaderType",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.downloading.FileDownloadStatus",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "isFinal",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderStatus$State",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.externaltools.AddRequest$AddType",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.externaltools.AddRequest$ExternalTool",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "isSonarr",
        "parameterTypes": []
      },
      {
        "name": "isRadarr",
        "parameterTypes": []
      },
      {
        "name": "isV2",
        "parameterTypes": []
      },
      {
        "name": "isV3",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.FilterModel",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerAccessResult",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerApiAccessType",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.logging.SensitiveDataRemovingPatternLayoutEncoder",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.ActionAttribute",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "isSearch",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.NewznabResponse$SearchType",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.notifications.NotificationMessageType",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.searching.CategoryProvider",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "baseConfig"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "getNotAvailable",
        "parameterTypes": []
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "handleNewConfigEvent",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.db.SearchResultEntity",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setDownloadType",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.DownloadType"
        ]
      },
      {
        "name": "getFirstFound",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "setIndexerGuid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIndexerSearchEntityId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getIndexerGuid",
        "parameterTypes": []
      },
      {
        "name": "getPubDate",
        "parameterTypes": []
      },
      {
        "name": "setDetails",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getDetails",
        "parameterTypes": []
      },
      {
        "name": "setPubDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getIndexerSearchEntityId",
        "parameterTypes": []
      },
      {
        "name": "getDownloadType",
        "parameterTypes": []
      },
      {
        "name": "setIndexer",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "setFirstFound",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "getIndexer",
        "parameterTypes": []
      },
      {
        "name": "getLink",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.dtoseventsenums.SearchResultWebTO",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getCategory",
        "parameterTypes": []
      },
      {
        "name": "getFiles",
        "parameterTypes": []
      },
      {
        "name": "setSearchResultId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLink",
        "parameterTypes": []
      },
      {
        "name": "getEpisode",
        "parameterTypes": []
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDownloadType",
        "parameterTypes": []
      },
      {
        "name": "setDownloadedAt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "setEpisode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEpoch",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setDetails_link",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSize",
        "parameterTypes": []
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getPeers",
        "parameterTypes": []
      },
      {
        "name": "setIndexer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIndexerscore",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getGrabs",
        "parameterTypes": []
      },
      {
        "name": "getIndexerguid",
        "parameterTypes": []
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTorrentDownloadFactor",
        "parameterTypes": []
      },
      {
        "name": "getHasNfo",
        "parameterTypes": []
      },
      {
        "name": "setSeeders",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setGrabs",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getSeeders",
        "parameterTypes": []
      },
      {
        "name": "setDownloadType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSeason",
        "parameterTypes": []
      },
      {
        "name": "getSearchResultId",
        "parameterTypes": []
      },
      {
        "name": "setCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPeers",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getPoster",
        "parameterTypes": []
      },
      {
        "name": "setTorrentDownloadFactor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHash",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getShowtitle",
        "parameterTypes": []
      },
      {
        "name": "getDetails_link",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDate",
        "parameterTypes": []
      },
      {
        "name": "setAge",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCover",
        "parameterTypes": []
      },
      {
        "name": "setCover",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setComments",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getComments",
        "parameterTypes": []
      },
      {
        "name": "setIndexerguid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSeason",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFiles",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getAge",
        "parameterTypes": []
      },
      {
        "name": "getAge_precise",
        "parameterTypes": []
      },
      {
        "name": "getEpoch",
        "parameterTypes": []
      },
      {
        "name": "getHash",
        "parameterTypes": []
      },
      {
        "name": "getIndexer",
        "parameterTypes": []
      },
      {
        "name": "setHasNfo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOriginalCategory",
        "parameterTypes": []
      },
      {
        "name": "setPoster",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOriginalCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIndexerscore",
        "parameterTypes": []
      },
      {
        "name": "setShowtitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDownloadedAt",
        "parameterTypes": []
      },
      {
        "name": "setAge_precise",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint$ConditionsDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getContexts",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint$ContextConditionsDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getNegativeMatches",
        "parameterTypes": []
      },
      {
        "name": "getPositiveMatches",
        "parameterTypes": []
      },
      {
        "name": "getParentId",
        "parameterTypes": []
      },
      {
        "name": "getExclusions",
        "parameterTypes": []
      },
      {
        "name": "getUnconditionalClasses",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint$MessageAndConditionDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getCondition",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint$MessageAndConditionsDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getMatched",
        "parameterTypes": []
      },
      {
        "name": "getNotMatched",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.beans.BeansEndpoint$BeanDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getAliases",
        "parameterTypes": []
      },
      {
        "name": "getResource",
        "parameterTypes": []
      },
      {
        "name": "getDependencies",
        "parameterTypes": []
      },
      {
        "name": "getScope",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.beans.BeansEndpoint$BeansDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getContexts",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.beans.BeansEndpoint$ContextBeansDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getBeans",
        "parameterTypes": []
      },
      {
        "name": "getParentId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpoint$CacheDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getTarget",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpoint$CacheEntryDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getCacheManager",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpoint$CacheManagerDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getCaches",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpoint$CachesDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getCacheManagers",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint$ConfigurationPropertiesBeanDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getPrefix",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getInputs",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint$ConfigurationPropertiesDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getContexts",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint$ContextConfigurationPropertiesDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getBeans",
        "parameterTypes": []
      },
      {
        "name": "getParentId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.Link",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getHref",
        "parameterTypes": []
      },
      {
        "name": "isTemplated",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$EnvironmentDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getActiveProfiles",
        "parameterTypes": []
      },
      {
        "name": "getPropertySources",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$EnvironmentEntryDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getProperty",
        "parameterTypes": []
      },
      {
        "name": "getPropertySources",
        "parameterTypes": []
      },
      {
        "name": "getActiveProfiles",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$PropertySourceDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$PropertySourceEntryDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getProperty",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$PropertySummaryDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$PropertyValueDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "getOrigin",
        "parameterTypes": []
      },
      {
        "name": "getOriginParents",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.flyway.FlywayEndpoint$ContextFlywayBeansDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getFlywayBeans",
        "parameterTypes": []
      },
      {
        "name": "getParentId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.flyway.FlywayEndpoint$FlywayBeansDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getContexts",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.flyway.FlywayEndpoint$FlywayDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getMigrations",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.flyway.FlywayEndpoint$FlywayMigrationDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getState",
        "parameterTypes": []
      },
      {
        "name": "getInstalledOn",
        "parameterTypes": []
      },
      {
        "name": "getScript",
        "parameterTypes": []
      },
      {
        "name": "getChecksum",
        "parameterTypes": []
      },
      {
        "name": "getExecutionTime",
        "parameterTypes": []
      },
      {
        "name": "getInstalledRank",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getInstalledBy",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.CompositeHealth",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getComponents",
        "parameterTypes": []
      },
      {
        "name": "getDetails",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.Health",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getDetails",
        "parameterTypes": []
      },
      {
        "name": "getException",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthComponent",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getStatus",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.Status",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.SystemHealth",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getGroups",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint$GroupLoggerLevelsDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getMembers",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint$LoggerLevelsDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getConfiguredLevel",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint$LoggersDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getGroups",
        "parameterTypes": []
      },
      {
        "name": "getLoggers",
        "parameterTypes": []
      },
      {
        "name": "getLevels",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint$SingleLoggerLevelsDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getEffectiveLevel",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.management.ThreadDumpEndpoint$ThreadDumpDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getThreads",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.MetricsEndpoint$AvailableTag",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getValues",
        "parameterTypes": []
      },
      {
        "name": "getTag",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.MetricsEndpoint$MetricDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getMeasurements",
        "parameterTypes": []
      },
      {
        "name": "getAvailableTags",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getBaseUnit",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.MetricsEndpoint$MetricNamesDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getNames",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.MetricsEndpoint$Sample",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getStatistic",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint$CronTaskDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getExpression",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint$CustomTriggerTaskDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getTrigger",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint$FixedDelayTaskDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint$FixedRateTaskDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint$RunnableDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getTarget",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint$ScheduledTasksDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getCustom",
        "parameterTypes": []
      },
      {
        "name": "getCron",
        "parameterTypes": []
      },
      {
        "name": "getFixedDelay",
        "parameterTypes": []
      },
      {
        "name": "getFixedRate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint$TaskDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getRunnable",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.HandlerMethodDescription",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getDescriptor",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint$ApplicationMappingsDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getContexts",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint$ContextMappingsDescriptor",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getParentId",
        "parameterTypes": []
      },
      {
        "name": "getMappings",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletMappingDescription",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getPredicate",
        "parameterTypes": []
      },
      {
        "name": "getHandler",
        "parameterTypes": []
      },
      {
        "name": "getDetails",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletMappingDetails",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getHandlerMethod",
        "parameterTypes": []
      },
      {
        "name": "getRequestMappingConditions",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.FilterRegistrationMappingDescription",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getUrlPatternMappings",
        "parameterTypes": []
      },
      {
        "name": "getServletNameMappings",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.RequestMappingConditionsDescription",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getMethods",
        "parameterTypes": []
      },
      {
        "name": "getConsumes",
        "parameterTypes": []
      },
      {
        "name": "getParams",
        "parameterTypes": []
      },
      {
        "name": "getPatterns",
        "parameterTypes": []
      },
      {
        "name": "getProduces",
        "parameterTypes": []
      },
      {
        "name": "getHeaders",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.RequestMappingConditionsDescription$MediaTypeExpressionDescription",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "isNegated",
        "parameterTypes": []
      },
      {
        "name": "getMediaType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.RequestMappingConditionsDescription$NameValueExpressionDescription",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "isNegated",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.ServletRegistrationMappingDescription",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getMappings",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.LogLevel",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.core.io.FileSystemResource",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getFile",
        "parameterTypes": []
      },
      {
        "name": "isWritable",
        "parameterTypes": []
      },
      {
        "name": "isFile",
        "parameterTypes": []
      },
      {
        "name": "isReadable",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getURL",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getFilename",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": []
      },
      {
        "name": "getURI",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.Page",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getTotalElements",
        "parameterTypes": []
      },
      {
        "name": "getTotalPages",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.Pageable",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getPageNumber",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "getPageSize",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "isPaged",
        "parameterTypes": []
      },
      {
        "name": "isUnpaged",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.Sort",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "isSorted",
        "parameterTypes": []
      },
      {
        "name": "isUnsorted",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.domain.support.AuditingEntityListener",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.http.CacheControl",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getHeaderValue",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.http.ContentDisposition",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getCreationDate",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isInline",
        "parameterTypes": []
      },
      {
        "name": "getCharset",
        "parameterTypes": []
      },
      {
        "name": "isAttachment",
        "parameterTypes": []
      },
      {
        "name": "isFormData",
        "parameterTypes": []
      },
      {
        "name": "getReadDate",
        "parameterTypes": []
      },
      {
        "name": "getFilename",
        "parameterTypes": []
      },
      {
        "name": "getSize",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getModificationDate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpHeaders",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getRange",
        "parameterTypes": []
      },
      {
        "name": "getIfNoneMatch",
        "parameterTypes": []
      },
      {
        "name": "setIfMatch",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAllow",
        "parameterTypes": []
      },
      {
        "name": "getAcceptCharset",
        "parameterTypes": []
      },
      {
        "name": "setAccessControlExposeHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getVary",
        "parameterTypes": []
      },
      {
        "name": "getContentType",
        "parameterTypes": []
      },
      {
        "name": "getAccessControlAllowMethods",
        "parameterTypes": []
      },
      {
        "name": "setAccessControlMaxAge",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getAccessControlRequestHeaders",
        "parameterTypes": []
      },
      {
        "name": "getDate",
        "parameterTypes": []
      },
      {
        "name": "setUpgrade",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setETag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getHost",
        "parameterTypes": []
      },
      {
        "name": "getAccessControlAllowOrigin",
        "parameterTypes": []
      },
      {
        "name": "getExpires",
        "parameterTypes": []
      },
      {
        "name": "getOrigin",
        "parameterTypes": []
      },
      {
        "name": "setAccessControlAllowHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBasicAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIfUnmodifiedSince",
        "parameterTypes": []
      },
      {
        "name": "getAccessControlAllowCredentials",
        "parameterTypes": []
      },
      {
        "name": "setIfUnmodifiedSince",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setAcceptLanguage",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getAcceptLanguage",
        "parameterTypes": []
      },
      {
        "name": "setContentLanguage",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "setIfUnmodifiedSince",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getAccept",
        "parameterTypes": []
      },
      {
        "name": "setAccessControlAllowCredentials",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExpires",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "getAccessControlRequestMethod",
        "parameterTypes": []
      },
      {
        "name": "setAccept",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIfNoneMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getETag",
        "parameterTypes": []
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "setAllow",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setVary",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAccessControlAllowOrigin",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAll",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getConnection",
        "parameterTypes": []
      },
      {
        "name": "setAccessControlRequestHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setCacheControl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCacheControl",
        "parameterTypes": [
          "org.springframework.http.CacheControl"
        ]
      },
      {
        "name": "setConnection",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIfModifiedSince",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setExpires",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setExpires",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIfModifiedSince",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setOrigin",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAcceptCharset",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.net.InetSocketAddress"
        ]
      },
      {
        "name": "getAcceptPatch",
        "parameterTypes": []
      },
      {
        "name": "setIfUnmodifiedSince",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "getAccessControlExposeHeaders",
        "parameterTypes": []
      },
      {
        "name": "setAcceptLanguageAsLocales",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getContentDisposition",
        "parameterTypes": []
      },
      {
        "name": "setAccessControlRequestMethod",
        "parameterTypes": [
          "org.springframework.http.HttpMethod"
        ]
      },
      {
        "name": "setRange",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getIfModifiedSince",
        "parameterTypes": []
      },
      {
        "name": "setIfMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getAcceptLanguageAsLocales",
        "parameterTypes": []
      },
      {
        "name": "getLastModified",
        "parameterTypes": []
      },
      {
        "name": "setAccessControlAllowMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getContentLength",
        "parameterTypes": []
      },
      {
        "name": "getAccessControlAllowHeaders",
        "parameterTypes": []
      },
      {
        "name": "setIfNoneMatch",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContentLength",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIfModifiedSince",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setPragma",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContentDisposition",
        "parameterTypes": [
          "org.springframework.http.ContentDisposition"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getAccessControlMaxAge",
        "parameterTypes": []
      },
      {
        "name": "getPragma",
        "parameterTypes": []
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getIfMatch",
        "parameterTypes": []
      },
      {
        "name": "setContentType",
        "parameterTypes": [
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "setAccessControlMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getContentLanguage",
        "parameterTypes": []
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "getUpgrade",
        "parameterTypes": []
      },
      {
        "name": "setBearerAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCacheControl",
        "parameterTypes": []
      },
      {
        "name": "setConnection",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "setAcceptPatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpMethod",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.http.HttpRange",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.http.HttpStatusCode",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "is3xxRedirection",
        "parameterTypes": []
      },
      {
        "name": "is1xxInformational",
        "parameterTypes": []
      },
      {
        "name": "is4xxClientError",
        "parameterTypes": []
      },
      {
        "name": "is2xxSuccessful",
        "parameterTypes": []
      },
      {
        "name": "isError",
        "parameterTypes": []
      },
      {
        "name": "is5xxServerError",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.http.MediaType",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getQualityValue",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.http.ResponseEntity",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getStatusCode",
        "parameterTypes": []
      },
      {
        "name": "getStatusCodeValue",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.annotation.SchedulingConfiguration",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "scheduledAnnotationProcessor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionOperations",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionRoot",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.security.web.access.expression.WebSecurityExpressionRoot",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.transaction.support.AbstractPlatformTransactionManager",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "commit",
        "parameterTypes": [
          "org.springframework.transaction.TransactionStatus"
        ]
      },
      {
        "name": "getDefaultTimeout",
        "parameterTypes": []
      },
      {
        "name": "getTransaction",
        "parameterTypes": [
          "org.springframework.transaction.TransactionDefinition"
        ]
      },
      {
        "name": "getTransactionSynchronization",
        "parameterTypes": []
      },
      {
        "name": "isFailEarlyOnGlobalRollbackOnly",
        "parameterTypes": []
      },
      {
        "name": "isGlobalRollbackOnParticipationFailure",
        "parameterTypes": []
      },
      {
        "name": "isNestedTransactionAllowed",
        "parameterTypes": []
      },
      {
        "name": "isRollbackOnCommitFailure",
        "parameterTypes": []
      },
      {
        "name": "isValidateExistingTransaction",
        "parameterTypes": []
      },
      {
        "name": "rollback",
        "parameterTypes": [
          "org.springframework.transaction.TransactionStatus"
        ]
      },
      {
        "name": "setDefaultTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setFailEarlyOnGlobalRollbackOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setGlobalRollbackOnParticipationFailure",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNestedTransactionAllowed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRollbackOnCommitFailure",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTransactionSynchronization",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTransactionSynchronizationName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidateExistingTransaction",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMethod",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "weblogic.websocket.tyrus.TyrusServletWriter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setLevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEncoder",
        "parameterTypes": [
          "ch.qos.logback.core.encoder.Encoder"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "ch.qos.logback.core.filter.Filter"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "ch.qos.logback.core.spi.ContextAware"
        ]
      },
      {
        "name": "decide",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isStarted",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRollingPolicy",
        "parameterTypes": [
          "ch.qos.logback.core.rolling.RollingPolicy"
        ]
      },
      {
        "name": "setFileNamePattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "ch.qos.logback.core.FileAppender"
        ]
      },
      {
        "name": "setMaxHistory",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "updateMarkersFilter",
        "parameterTypes": []
      },
      {
        "name": "addError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addError",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "addInfo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addInfo",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "addStatus",
        "parameterTypes": [
          "ch.qos.logback.core.status.Status"
        ]
      },
      {
        "name": "addWarn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addWarn",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "getContext",
        "parameterTypes": []
      },
      {
        "name": "getStatusManager",
        "parameterTypes": []
      },
      {
        "name": "setContext",
        "parameterTypes": [
          "ch.qos.logback.core.Context"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "value",
        "parameterTypes": []
      },
      {
        "name": "getJsonFactory",
        "parameterTypes": []
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "getDependencies",
        "parameterTypes": []
      },
      {
        "name": "createArrayNode",
        "parameterTypes": []
      },
      {
        "name": "createObjectNode",
        "parameterTypes": []
      },
      {
        "name": "getFactory",
        "parameterTypes": []
      },
      {
        "name": "missingNode",
        "parameterTypes": []
      },
      {
        "name": "nullNode",
        "parameterTypes": []
      },
      {
        "name": "readTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "treeAsTokens",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "treeToValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode",
          "java.lang.Class"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      },
      {
        "name": "writeTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "writeValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "java.lang.Object"
        ]
      },
      {
        "name": "addAbstractTypeMapping",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "addDeserializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonDeserializer"
        ]
      },
      {
        "name": "addKeyDeserializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.KeyDeserializer"
        ]
      },
      {
        "name": "addKeySerializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addSerializer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addSerializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addValueInstantiator",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.deser.ValueInstantiator"
        ]
      },
      {
        "name": "getModuleName",
        "parameterTypes": []
      },
      {
        "name": "getTypeId",
        "parameterTypes": []
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.jsontype.NamedType[]"
        ]
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "java.lang.Class[]"
        ]
      },
      {
        "name": "setAbstractTypes",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
        ]
      },
      {
        "name": "setDeserializerModifier",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
        ]
      },
      {
        "name": "setDeserializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleDeserializers"
        ]
      },
      {
        "name": "setKeyDeserializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
        ]
      },
      {
        "name": "setKeySerializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleSerializers"
        ]
      },
      {
        "name": "setMixInAnnotation",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "setSerializerModifier",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
        ]
      },
      {
        "name": "setSerializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleSerializers"
        ]
      },
      {
        "name": "setValueInstantiators",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
        ]
      },
      {
        "name": "setupModule",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.Module$SetupContext"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "premain",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.instrument.Instrumentation"
        ]
      },
      {
        "name": "getMemoryUsageBeforeGc",
        "parameterTypes": []
      },
      {
        "name": "getCpuLoad",
        "parameterTypes": []
      },
      {
        "name": "getProcessCpuLoad",
        "parameterTypes": []
      },
      {
        "name": "getProcessCpuTime",
        "parameterTypes": []
      },
      {
        "name": "addDataSourceProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "addHealthCheckProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "copyStateTo",
        "parameterTypes": [
          "com.zaxxer.hikari.HikariConfig"
        ]
      },
      {
        "name": "getCatalog",
        "parameterTypes": []
      },
      {
        "name": "getConnectionInitSql",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTestQuery",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceJNDI",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceProperties",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getExceptionOverrideClassName",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckProperties",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckRegistry",
        "parameterTypes": []
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "getInitializationFailTimeout",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getKeepaliveTime",
        "parameterTypes": []
      },
      {
        "name": "getLeakDetectionThreshold",
        "parameterTypes": []
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": []
      },
      {
        "name": "getMaximumPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getMetricRegistry",
        "parameterTypes": []
      },
      {
        "name": "getMetricsTrackerFactory",
        "parameterTypes": []
      },
      {
        "name": "getMinimumIdle",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getPoolName",
        "parameterTypes": []
      },
      {
        "name": "getScheduledExecutor",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getThreadFactory",
        "parameterTypes": []
      },
      {
        "name": "getTransactionIsolation",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getValidationTimeout",
        "parameterTypes": []
      },
      {
        "name": "isAllowPoolSuspension",
        "parameterTypes": []
      },
      {
        "name": "isAutoCommit",
        "parameterTypes": []
      },
      {
        "name": "isIsolateInternalQueries",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterMbeans",
        "parameterTypes": []
      },
      {
        "name": "setAllowPoolSuspension",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAutoCommit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionInitSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTestQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceJNDI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionOverrideClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHealthCheckProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setInitializationFailTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIsolateInternalQueries",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeepaliveTime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLeakDetectionThreshold",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMinimumIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPoolName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterMbeans",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setScheduledExecutor",
        "parameterTypes": [
          "java.util.concurrent.ScheduledExecutorService"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setTransactionIsolation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getConnection",
        "parameterTypes": []
      },
      {
        "name": "getConnection",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getLogWriter",
        "parameterTypes": []
      },
      {
        "name": "getLoginTimeout",
        "parameterTypes": []
      },
      {
        "name": "getParentLogger",
        "parameterTypes": []
      },
      {
        "name": "isWrapperFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setHealthCheckRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLogWriter",
        "parameterTypes": [
          "java.io.PrintWriter"
        ]
      },
      {
        "name": "setLoginTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMetricRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMetricsTrackerFactory",
        "parameterTypes": [
          "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "monotonicTime",
        "parameterTypes": []
      },
      {
        "name": "wallTime",
        "parameterTypes": []
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "config",
        "parameterTypes": []
      },
      {
        "name": "counter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "counter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "forEachMeter",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.lang.Number"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.lang.Object",
          "java.util.function.ToDoubleFunction"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Number"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.util.function.ToDoubleFunction"
        ]
      },
      {
        "name": "gaugeCollectionSize",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.util.Collection"
        ]
      },
      {
        "name": "gaugeMapSize",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.util.Map"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMeters",
        "parameterTypes": []
      },
      {
        "name": "isClosed",
        "parameterTypes": []
      },
      {
        "name": "more",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter"
        ]
      },
      {
        "name": "removeByPreFilterId",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "summary",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "summary",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "timer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "timer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "map",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "accept",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id",
          "io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
        ]
      },
      {
        "name": "requireValid",
        "parameterTypes": []
      },
      {
        "name": "onEvent",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Event",
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onStart",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onStop",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "supportsContext",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onError",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onScopeClosed",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onScopeOpened",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onScopeReset",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "getCurrentObservation",
        "parameterTypes": []
      },
      {
        "name": "getCurrentObservationScope",
        "parameterTypes": []
      },
      {
        "name": "isNoop",
        "parameterTypes": []
      },
      {
        "name": "observationConfig",
        "parameterTypes": []
      },
      {
        "name": "setCurrentObservationScope",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Scope"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy164"
        ]
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNamedStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaDelete"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaQuery"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaUpdate"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "detach",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object",
          "jakarta.persistence.LockModeType"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object",
          "jakarta.persistence.LockModeType",
          "java.util.Map"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy164"
        ]
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      },
      {
        "name": "getDelegate",
        "parameterTypes": []
      },
      {
        "name": "getEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityGraphs",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getEntityManagerFactory",
        "parameterTypes": []
      },
      {
        "name": "getFlushMode",
        "parameterTypes": []
      },
      {
        "name": "getLockMode",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getMetamodel",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getReference",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "getTransaction",
        "parameterTypes": []
      },
      {
        "name": "isJoinedToTransaction",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": []
      },
      {
        "name": "joinTransaction",
        "parameterTypes": []
      },
      {
        "name": "lock",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType"
        ]
      },
      {
        "name": "lock",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType",
          "java.util.Map"
        ]
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy164"
        ]
      },
      {
        "name": "persist",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType",
          "java.util.Map"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setFlushMode",
        "parameterTypes": [
          "jakarta.persistence.FlushModeType"
        ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy164"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy161"
        ]
      },
      {
        "name": "addNamedEntityGraph",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.persistence.EntityGraph"
        ]
      },
      {
        "name": "addNamedQuery",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.persistence.Query"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": []
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "jakarta.persistence.SynchronizationType"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "jakarta.persistence.SynchronizationType",
          "java.util.Map"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy161"
        ]
      },
      {
        "name": "getPersistenceUnitUtil",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy161"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy161"
        ]
      },
      {
        "name": "getPersistenceUtil",
        "parameterTypes": []
      },
      {
        "name": "getParameters",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x000001c54ddbb1f0"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x000001c54ddbb1f0"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x000001c54ddbb1f0"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x000001c54ddbb1f0"
        ]
      },
      {
        "name": "getInitParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInitParameterNames",
        "parameterTypes": []
      },
      {
        "name": "getServletConfig",
        "parameterTypes": []
      },
      {
        "name": "getServletContext",
        "parameterTypes": []
      },
      {
        "name": "getServletInfo",
        "parameterTypes": []
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "init",
        "parameterTypes": [
          "jakarta.servlet.ServletConfig"
        ]
      },
      {
        "name": "service",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse"
        ]
      },
      {
        "name": "groups",
        "parameterTypes": []
      },
      {
        "name": "message",
        "parameterTypes": []
      },
      {
        "name": "payload",
        "parameterTypes": []
      },
      {
        "name": "type",
        "parameterTypes": []
      },
      {
        "name": "factoryClass",
        "parameterTypes": []
      },
      {
        "name": "toboolean",
        "parameterTypes": []
      },
      {
        "name": "tochar",
        "parameterTypes": []
      },
      {
        "name": "getAnnotatedInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getAnnotatedSuperclass",
        "parameterTypes": []
      },
      {
        "name": "getModule",
        "parameterTypes": []
      },
      {
        "name": "getNestHost",
        "parameterTypes": []
      },
      {
        "name": "getNestMembers",
        "parameterTypes": []
      },
      {
        "name": "getPermittedSubclasses",
        "parameterTypes": []
      },
      {
        "name": "getRecordComponents",
        "parameterTypes": []
      },
      {
        "name": "isNestmateOf",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isRecord",
        "parameterTypes": []
      },
      {
        "name": "isSealed",
        "parameterTypes": []
      },
      {
        "name": "defineClass",
        "parameterTypes": [
          "java.lang.String",
          "byte[]",
          "int",
          "int",
          "java.security.ProtectionDomain"
        ]
      },
      {
        "name": "getUnnamedModule",
        "parameterTypes": []
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      },
      {
        "name": "addExports",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Module"
        ]
      },
      {
        "name": "isExported",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isNamed",
        "parameterTypes": []
      },
      {
        "name": "getApiLimits",
        "parameterTypes": []
      },
      {
        "name": "getApiOldestTime",
        "parameterTypes": []
      },
      {
        "name": "getAudioSearch",
        "parameterTypes": []
      },
      {
        "name": "getAvailable",
        "parameterTypes": []
      },
      {
        "name": "getBookSearch",
        "parameterTypes": []
      },
      {
        "name": "getCaps",
        "parameterTypes": []
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "getCategory",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getComments",
        "parameterTypes": []
      },
      {
        "name": "getDays",
        "parameterTypes": []
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getEmail",
        "parameterTypes": []
      },
      {
        "name": "getEnclosure",
        "parameterTypes": []
      },
      {
        "name": "getEnclosures",
        "parameterTypes": []
      },
      {
        "name": "getError",
        "parameterTypes": []
      },
      {
        "name": "getGenerator",
        "parameterTypes": []
      },
      {
        "name": "getGrabOldestTime",
        "parameterTypes": []
      },
      {
        "name": "getGrabs",
        "parameterTypes": []
      },
      {
        "name": "getGuid",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getImage",
        "parameterTypes": []
      },
      {
        "name": "getIndexers",
        "parameterTypes": []
      },
      {
        "name": "getItems",
        "parameterTypes": []
      },
      {
        "name": "getLanguage",
        "parameterTypes": []
      },
      {
        "name": "getLength",
        "parameterTypes": []
      },
      {
        "name": "getLimits",
        "parameterTypes": []
      },
      {
        "name": "getLink",
        "parameterTypes": []
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "getMovieSearch",
        "parameterTypes": []
      },
      {
        "name": "getNewznabAttributes",
        "parameterTypes": []
      },
      {
        "name": "getNewznabResponse",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "getPubDate",
        "parameterTypes": []
      },
      {
        "name": "getRetention",
        "parameterTypes": []
      },
      {
        "name": "getRssChannel",
        "parameterTypes": []
      },
      {
        "name": "getRssGuid",
        "parameterTypes": []
      },
      {
        "name": "getSearch",
        "parameterTypes": []
      },
      {
        "name": "getSearchType",
        "parameterTypes": []
      },
      {
        "name": "getSearching",
        "parameterTypes": []
      },
      {
        "name": "getServer",
        "parameterTypes": []
      },
      {
        "name": "getSize",
        "parameterTypes": []
      },
      {
        "name": "getStrapline",
        "parameterTypes": []
      },
      {
        "name": "getSubCategories",
        "parameterTypes": []
      },
      {
        "name": "getSupportedParams",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getTorznabAttributes",
        "parameterTypes": []
      },
      {
        "name": "getTotal",
        "parameterTypes": []
      },
      {
        "name": "getTvSearch",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getWebMaster",
        "parameterTypes": []
      },
      {
        "name": "isPermaLink",
        "parameterTypes": []
      },
      {
        "name": "major",
        "parameterTypes": []
      },
      {
        "name": "getSecurityManager",
        "parameterTypes": []
      },
      {
        "name": "ofVirtual",
        "parameterTypes": []
      },
      {
        "name": "name",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "start",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "annotationType",
        "parameterTypes": []
      },
      {
        "name": "privateLookupIn",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.invoke.MethodHandles$Lookup"
        ]
      },
      {
        "name": "defineClass",
        "parameterTypes": [
          "byte[]"
        ]
      },
      {
        "name": "lookupClass",
        "parameterTypes": []
      },
      {
        "name": "lookupModes",
        "parameterTypes": []
      },
      {
        "name": "getRuntimeMXBean",
        "parameterTypes": []
      },
      {
        "name": "getHeapMemoryUsage",
        "parameterTypes": []
      },
      {
        "name": "from",
        "parameterTypes": [
          "javax.management.openmbean.CompositeData"
        ]
      },
      {
        "name": "getCommitted",
        "parameterTypes": []
      },
      {
        "name": "getInit",
        "parameterTypes": []
      },
      {
        "name": "getUsed",
        "parameterTypes": []
      },
      {
        "name": "getLoggerLevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoggerNames",
        "parameterTypes": []
      },
      {
        "name": "getParentLoggerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoggerLevel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getInputArguments",
        "parameterTypes": []
      },
      {
        "name": "getAnnotatedParameterTypes",
        "parameterTypes": []
      },
      {
        "name": "getAnnotatedReceiverType",
        "parameterTypes": []
      },
      {
        "name": "getParameterCount",
        "parameterTypes": []
      },
      {
        "name": "getGenericComponentType",
        "parameterTypes": []
      },
      {
        "name": "getAnnotatedReturnType",
        "parameterTypes": []
      },
      {
        "name": "getModifiers",
        "parameterTypes": []
      },
      {
        "name": "isNamePresent",
        "parameterTypes": []
      },
      {
        "name": "getActualTypeArguments",
        "parameterTypes": []
      },
      {
        "name": "getOwnerType",
        "parameterTypes": []
      },
      {
        "name": "getRawType",
        "parameterTypes": []
      },
      {
        "name": "getAccessor",
        "parameterTypes": []
      },
      {
        "name": "getBounds",
        "parameterTypes": []
      },
      {
        "name": "getLowerBounds",
        "parameterTypes": []
      },
      {
        "name": "getUpperBounds",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "open",
        "parameterTypes": [
          "java.net.ProtocolFamily"
        ]
      },
      {
        "name": "getMetaData",
        "parameterTypes": []
      },
      {
        "name": "load",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "call",
        "parameterTypes": []
      },
      {
        "name": "and",
        "parameterTypes": [
          "java.util.function.BiPredicate"
        ]
      },
      {
        "name": "negate",
        "parameterTypes": []
      },
      {
        "name": "or",
        "parameterTypes": [
          "java.util.function.BiPredicate"
        ]
      },
      {
        "name": "getLoggingMXBean",
        "parameterTypes": []
      },
      {
        "name": "getSignature",
        "parameterTypes": []
      },
      {
        "name": "cacheMBeanInfo",
        "parameterTypes": [
          "javax.management.MBeanInfo"
        ]
      },
      {
        "name": "getCachedMBeanInfo",
        "parameterTypes": []
      },
      {
        "name": "getMBeanInfo",
        "parameterTypes": []
      },
      {
        "name": "addNotificationListener",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "java.rmi.MarshalledObject",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "addNotificationListeners",
        "parameterTypes": [
          "javax.management.ObjectName[]",
          "java.rmi.MarshalledObject[]",
          "javax.security.auth.Subject[]"
        ]
      },
      {
        "name": "createMBean",
        "parameterTypes": [
          "java.lang.String",
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "java.lang.String[]",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "createMBean",
        "parameterTypes": [
          "java.lang.String",
          "javax.management.ObjectName",
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "java.lang.String[]",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "createMBean",
        "parameterTypes": [
          "java.lang.String",
          "javax.management.ObjectName",
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "createMBean",
        "parameterTypes": [
          "java.lang.String",
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "fetchNotifications",
        "parameterTypes": [
          "long",
          "int",
          "long"
        ]
      },
      {
        "name": "getAttribute",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.lang.String",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "getAttributes",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.lang.String[]",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "getConnectionId",
        "parameterTypes": []
      },
      {
        "name": "getDefaultDomain",
        "parameterTypes": [
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "getDomains",
        "parameterTypes": [
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "getMBeanCount",
        "parameterTypes": [
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "getMBeanInfo",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "getObjectInstance",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.lang.String",
          "java.rmi.MarshalledObject",
          "java.lang.String[]",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "isInstanceOf",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.lang.String",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "isRegistered",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "queryMBeans",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "queryNames",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "removeNotificationListener",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "java.rmi.MarshalledObject",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "removeNotificationListener",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "removeNotificationListeners",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.lang.Integer[]",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "setAttribute",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "setAttributes",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "unregisterMBean",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.rmi.server.RemoteRef"
        ]
      },
      {
        "name": "newClient",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getReference",
        "parameterTypes": []
      },
      {
        "name": "callAs",
        "parameterTypes": [
          "javax.security.auth.Subject",
          "java.util.concurrent.Callable"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "sun.security.x509.X500Name"
        ]
      },
      {
        "name": "createShardingKeyBuilder",
        "parameterTypes": []
      },
      {
        "name": "createConnectionBuilder",
        "parameterTypes": []
      },
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "getNotificationInfo",
        "parameterTypes": []
      },
      {
        "name": "optional",
        "parameterTypes": []
      },
      {
        "name": "readOnly",
        "parameterTypes": []
      },
      {
        "name": "typing",
        "parameterTypes": []
      },
      {
        "name": "declaringType",
        "parameterTypes": []
      },
      {
        "name": "inline",
        "parameterTypes": []
      },
      {
        "name": "prependLineNumber",
        "parameterTypes": []
      },
      {
        "name": "skipOn",
        "parameterTypes": []
      },
      {
        "name": "suppress",
        "parameterTypes": []
      },
      {
        "name": "backupArguments",
        "parameterTypes": []
      },
      {
        "name": "onThrowable",
        "parameterTypes": []
      },
      {
        "name": "repeatOn",
        "parameterTypes": []
      },
      {
        "name": "setIncludeContext",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getExternalArrayLength",
        "parameterTypes": []
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.servlet.Filter"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addJspFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "java.util.EventListener"
        ]
      },
      {
        "name": "addServlet",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.servlet.Servlet"
        ]
      },
      {
        "name": "addServlet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "addServlet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createFilter",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createListener",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createServlet",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "declareRoles",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttributeNames",
        "parameterTypes": []
      },
      {
        "name": "getClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getContext",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getContextPath",
        "parameterTypes": []
      },
      {
        "name": "getDefaultSessionTrackingModes",
        "parameterTypes": []
      },
      {
        "name": "getEffectiveMajorVersion",
        "parameterTypes": []
      },
      {
        "name": "getEffectiveMinorVersion",
        "parameterTypes": []
      },
      {
        "name": "getEffectiveSessionTrackingModes",
        "parameterTypes": []
      },
      {
        "name": "getFilterRegistration",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFilterRegistrations",
        "parameterTypes": []
      },
      {
        "name": "getJspConfigDescriptor",
        "parameterTypes": []
      },
      {
        "name": "getMajorVersion",
        "parameterTypes": []
      },
      {
        "name": "getMimeType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMinorVersion",
        "parameterTypes": []
      },
      {
        "name": "getNamedDispatcher",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRealPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRequestCharacterEncoding",
        "parameterTypes": []
      },
      {
        "name": "getRequestDispatcher",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResourceAsStream",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResourcePaths",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResponseCharacterEncoding",
        "parameterTypes": []
      },
      {
        "name": "getServerInfo",
        "parameterTypes": []
      },
      {
        "name": "getServletContextName",
        "parameterTypes": []
      },
      {
        "name": "getServletRegistration",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getServletRegistrations",
        "parameterTypes": []
      },
      {
        "name": "getSessionCookieConfig",
        "parameterTypes": []
      },
      {
        "name": "getSessionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getVirtualServerName",
        "parameterTypes": []
      },
      {
        "name": "removeAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAttribute",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setInitParameter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "setRequestCharacterEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResponseCharacterEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSessionTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSessionTrackingModes",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "clearJdbcDriverRegistrations",
        "parameterTypes": []
      },
      {
        "name": "getAddress",
        "parameterTypes": []
      },
      {
        "name": "getLocalPort",
        "parameterTypes": []
      },
      {
        "name": "getProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "isSSLEnabled",
        "parameterTypes": []
      },
      {
        "name": "setBindOnInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBaselineMigrationPrefix",
        "parameterTypes": []
      },
      {
        "name": "setBaselineMigrationPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getClean",
        "parameterTypes": []
      },
      {
        "name": "setClean",
        "parameterTypes": [
          "org.flywaydb.core.internal.command.clean.CleanModel"
        ]
      },
      {
        "name": "getScriptFilename",
        "parameterTypes": []
      },
      {
        "name": "setScriptFilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isCheckDriftOnMigrate",
        "parameterTypes": []
      },
      {
        "name": "isPublishResult",
        "parameterTypes": []
      },
      {
        "name": "setCheckDriftOnMigrate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPublishResult",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getInstance",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.glassfish.jaxb.runtime.v2.runtime.JAXBContextImpl",
          "org.glassfish.jaxb.runtime.v2.model.runtime.RuntimeElementPropertyInfo"
        ]
      },
      {
        "name": "inImageCode",
        "parameterTypes": []
      },
      {
        "name": "disableFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "enableFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEnabledFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCache",
        "parameterTypes": []
      },
      {
        "name": "beginTransaction",
        "parameterTypes": []
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureCall",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureCall",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "createStoredProcedureCall",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "doReturningWork",
        "parameterTypes": [
          "org.hibernate.jdbc.ReturningWork"
        ]
      },
      {
        "name": "doWork",
        "parameterTypes": [
          "org.hibernate.jdbc.Work"
        ]
      },
      {
        "name": "getJdbcBatchSize",
        "parameterTypes": []
      },
      {
        "name": "getNamedProcedureCall",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTenantIdentifier",
        "parameterTypes": []
      },
      {
        "name": "getTenantIdentifierValue",
        "parameterTypes": []
      },
      {
        "name": "isConnected",
        "parameterTypes": []
      },
      {
        "name": "setJdbcBatchSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.boot.archive.spi.ArchiveDescriptorFactory"
        ]
      },
      {
        "name": "activate",
        "parameterTypes": [
          "org.hibernate.boot.beanvalidation.ActivationContext"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      },
      {
        "name": "setJndiService",
        "parameterTypes": [
          "org.hibernate.engine.jndi.spi.JndiService"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class",
          "int"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.mapping.Collection",
          "org.hibernate.cache.spi.access.CollectionDataAccess",
          "org.hibernate.metamodel.spi.RuntimeModelCreationContext"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.mapping.PersistentClass",
          "org.hibernate.cache.spi.access.EntityDataAccess",
          "org.hibernate.cache.spi.access.NaturalIdDataAccess",
          "org.hibernate.metamodel.spi.RuntimeModelCreationContext"
        ]
      },
      {
        "name": "getResultList",
        "parameterTypes": []
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaDelete"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaUpdate"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "org.hibernate.query.criteria.JpaCriteriaInsert"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "org.hibernate.query.criteria.JpaCriteriaInsertSelect"
        ]
      },
      {
        "name": "createNamedMutationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedSelectionQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedSelectionQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNativeMutationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createSelectionQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaQuery"
        ]
      },
      {
        "name": "createSelectionQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createSelectionQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getNamedNativeQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNamedNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getNamedQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxResults",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "externalClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "getException",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTimestamp",
        "parameterTypes": []
      },
      {
        "name": "isSuccessful",
        "parameterTypes": []
      },
      {
        "name": "downloadInstanceCounter",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "startupDone",
        "parameterTypes": [
          "org.springframework.boot.context.event.ApplicationReadyEvent"
        ]
      },
      {
        "name": "warnIfSettingsOverwritten",
        "parameterTypes": []
      },
      {
        "name": "convertToDatabaseColumn",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convertToEntityAttribute",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "org.springframework.security.access.AccessDeniedException"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigProvider"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      },
      {
        "name": "getAuthorities",
        "parameterTypes": []
      },
      {
        "name": "getPrincipal",
        "parameterTypes": []
      },
      {
        "name": "setAuthenticationDetailsSource",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationDetailsSource"
        ]
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "methodSecurityMetadataSource",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig"
        ]
      },
      {
        "name": "changePassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createUser",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetails"
        ]
      },
      {
        "name": "deleteUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadUserByUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "updateUser",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetails"
        ]
      },
      {
        "name": "userExists",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastUsed",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setSeries",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setLastBackup",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "createBackup",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.webaccess.HydraOkHttp3ClientHttpRequestFactory"
        ]
      },
      {
        "name": "getAuth",
        "parameterTypes": []
      },
      {
        "name": "getCategoriesConfig",
        "parameterTypes": []
      },
      {
        "name": "getDownloading",
        "parameterTypes": []
      },
      {
        "name": "getGenericStorage",
        "parameterTypes": []
      },
      {
        "name": "getMain",
        "parameterTypes": []
      },
      {
        "name": "getNotificationConfig",
        "parameterTypes": []
      },
      {
        "name": "setAuth",
        "parameterTypes": [
          "org.nzbhydra.config.auth.AuthConfig"
        ]
      },
      {
        "name": "setCategoriesConfig",
        "parameterTypes": [
          "org.nzbhydra.config.category.CategoriesConfig"
        ]
      },
      {
        "name": "setDownloading",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.DownloadingConfig"
        ]
      },
      {
        "name": "setGenericStorage",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setIndexers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMain",
        "parameterTypes": [
          "org.nzbhydra.config.MainConfig"
        ]
      },
      {
        "name": "setNotificationConfig",
        "parameterTypes": [
          "org.nzbhydra.config.NotificationConfig"
        ]
      },
      {
        "name": "setSearching",
        "parameterTypes": [
          "org.nzbhydra.config.SearchingConfig"
        ]
      },
      {
        "name": "onShutdown",
        "parameterTypes": []
      },
      {
        "name": "getConsolelevel",
        "parameterTypes": []
      },
      {
        "name": "getHistoryUserInfoType",
        "parameterTypes": []
      },
      {
        "name": "getLogMaxHistory",
        "parameterTypes": []
      },
      {
        "name": "getLogfilelevel",
        "parameterTypes": []
      },
      {
        "name": "getMarkersToLog",
        "parameterTypes": []
      },
      {
        "name": "isLogGc",
        "parameterTypes": []
      },
      {
        "name": "isLogIpAddresses",
        "parameterTypes": []
      },
      {
        "name": "isLogUsername",
        "parameterTypes": []
      },
      {
        "name": "isMapIpToHost",
        "parameterTypes": []
      },
      {
        "name": "setConsolelevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHistoryUserInfoType",
        "parameterTypes": [
          "org.nzbhydra.config.HistoryUserInfoType"
        ]
      },
      {
        "name": "setLogGc",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogIpAddresses",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogMaxHistory",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLogUsername",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogfilelevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMapIpToHost",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMarkersToLog",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getApiKey",
        "parameterTypes": []
      },
      {
        "name": "getBackupEveryXDays",
        "parameterTypes": []
      },
      {
        "name": "getBackupFolder",
        "parameterTypes": []
      },
      {
        "name": "getConfigVersion",
        "parameterTypes": []
      },
      {
        "name": "getDatabaseCompactTime",
        "parameterTypes": []
      },
      {
        "name": "getDatabaseRetentionTime",
        "parameterTypes": []
      },
      {
        "name": "getDatabaseWriteDelay",
        "parameterTypes": []
      },
      {
        "name": "getDeleteBackupsAfterWeeks",
        "parameterTypes": []
      },
      {
        "name": "getDereferer",
        "parameterTypes": []
      },
      {
        "name": "getHost",
        "parameterTypes": []
      },
      {
        "name": "getKeepHistoryForWeeks",
        "parameterTypes": []
      },
      {
        "name": "getKeepStatsForWeeks",
        "parameterTypes": []
      },
      {
        "name": "getLogging",
        "parameterTypes": []
      },
      {
        "name": "getPort",
        "parameterTypes": []
      },
      {
        "name": "getProxyHost",
        "parameterTypes": []
      },
      {
        "name": "getProxyIgnoreDomains",
        "parameterTypes": []
      },
      {
        "name": "getProxyPassword",
        "parameterTypes": []
      },
      {
        "name": "getProxyPort",
        "parameterTypes": []
      },
      {
        "name": "getProxyType",
        "parameterTypes": []
      },
      {
        "name": "getProxyUsername",
        "parameterTypes": []
      },
      {
        "name": "getRepositoryBase",
        "parameterTypes": []
      },
      {
        "name": "getSniDisabledFor",
        "parameterTypes": []
      },
      {
        "name": "getSslKeyStore",
        "parameterTypes": []
      },
      {
        "name": "getSslKeyStorePassword",
        "parameterTypes": []
      },
      {
        "name": "getTheme",
        "parameterTypes": []
      },
      {
        "name": "getUrlBase",
        "parameterTypes": []
      },
      {
        "name": "getVerifySslDisabledFor",
        "parameterTypes": []
      },
      {
        "name": "getXmx",
        "parameterTypes": []
      },
      {
        "name": "isBackupBeforeUpdate",
        "parameterTypes": []
      },
      {
        "name": "isCheckOpenPort",
        "parameterTypes": []
      },
      {
        "name": "isDisableSslLocally",
        "parameterTypes": []
      },
      {
        "name": "isInstanceCounterDownloaded",
        "parameterTypes": []
      },
      {
        "name": "isKeepHistory",
        "parameterTypes": []
      },
      {
        "name": "isProxyIgnoreLocal",
        "parameterTypes": []
      },
      {
        "name": "isProxyImages",
        "parameterTypes": []
      },
      {
        "name": "isShowNews",
        "parameterTypes": []
      },
      {
        "name": "isShowUpdateBannerOnUpdatedExternally",
        "parameterTypes": []
      },
      {
        "name": "isShowWhatsNewBanner",
        "parameterTypes": []
      },
      {
        "name": "isShutdownForRestart",
        "parameterTypes": []
      },
      {
        "name": "isSsl",
        "parameterTypes": []
      },
      {
        "name": "isStartupBrowser",
        "parameterTypes": []
      },
      {
        "name": "isUpdateAutomatically",
        "parameterTypes": []
      },
      {
        "name": "isUpdateCheckEnabled",
        "parameterTypes": []
      },
      {
        "name": "isUpdateToPrereleases",
        "parameterTypes": []
      },
      {
        "name": "isUseCsrf",
        "parameterTypes": []
      },
      {
        "name": "isVerifySsl",
        "parameterTypes": []
      },
      {
        "name": "isWelcomeShown",
        "parameterTypes": []
      },
      {
        "name": "setApiKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBackupBeforeUpdate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBackupEveryXDays",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setBackupFolder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCheckOpenPort",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setConfigVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDatabaseCompactTime",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDatabaseRetentionTime",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDatabaseWriteDelay",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDeleteBackupsAfterWeeks",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDereferer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisableSslLocally",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstanceCounterDownloaded",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeepHistory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeepHistoryForWeeks",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setKeepStatsForWeeks",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLogging",
        "parameterTypes": [
          "org.nzbhydra.config.LoggingConfig"
        ]
      },
      {
        "name": "setProxyHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProxyIgnoreDomains",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setProxyIgnoreLocal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setProxyImages",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setProxyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProxyPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setProxyType",
        "parameterTypes": [
          "org.nzbhydra.config.ProxyType"
        ]
      },
      {
        "name": "setProxyUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRepositoryBase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShowNews",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowUpdateBannerOnUpdatedExternally",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowWhatsNewBanner",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShutdownForRestart",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSniDisabledFor",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSslKeyStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSslKeyStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStartupBrowser",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTheme",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateAutomatically",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUpdateCheckEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUpdateToPrereleases",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlBase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseCsrf",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVerifySsl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVerifySslDisabledFor",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setWelcomeShown",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setXmx",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getAppriseApiUrl",
        "parameterTypes": []
      },
      {
        "name": "getAppriseCliPath",
        "parameterTypes": []
      },
      {
        "name": "getAppriseType",
        "parameterTypes": []
      },
      {
        "name": "getDisplayNotificationsMax",
        "parameterTypes": []
      },
      {
        "name": "getEntries",
        "parameterTypes": []
      },
      {
        "name": "getFilterOuts",
        "parameterTypes": []
      },
      {
        "name": "isDisplayNotifications",
        "parameterTypes": []
      },
      {
        "name": "setAppriseApiUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAppriseCliPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAppriseType",
        "parameterTypes": [
          "org.nzbhydra.config.NotificationConfig$AppriseType"
        ]
      },
      {
        "name": "setDisplayNotifications",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDisplayNotificationsMax",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setEntries",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFilterOuts",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getAppriseUrls",
        "parameterTypes": []
      },
      {
        "name": "getBodyTemplate",
        "parameterTypes": []
      },
      {
        "name": "getEventType",
        "parameterTypes": []
      },
      {
        "name": "getMessageType",
        "parameterTypes": []
      },
      {
        "name": "getTitleTemplate",
        "parameterTypes": []
      },
      {
        "name": "setAppriseUrls",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBodyTemplate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEventType",
        "parameterTypes": [
          "org.nzbhydra.config.notification.NotificationEventType"
        ]
      },
      {
        "name": "setMessageType",
        "parameterTypes": [
          "org.nzbhydra.config.NotificationConfigEntry$MessageType"
        ]
      },
      {
        "name": "setTitleTemplate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAlwaysConvertIds",
        "parameterTypes": []
      },
      {
        "name": "getApplyRestrictions",
        "parameterTypes": []
      },
      {
        "name": "getCoverSize",
        "parameterTypes": []
      },
      {
        "name": "getCustomMappings",
        "parameterTypes": []
      },
      {
        "name": "getCustomQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "getDuplicateAgeThreshold",
        "parameterTypes": []
      },
      {
        "name": "getDuplicateSizeThresholdInPercent",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenGroups",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenPosters",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenRegex",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenWords",
        "parameterTypes": []
      },
      {
        "name": "getGenerateQueries",
        "parameterTypes": []
      },
      {
        "name": "getGenerateQueriesFormat",
        "parameterTypes": []
      },
      {
        "name": "getGlobalCacheTimeMinutes",
        "parameterTypes": []
      },
      {
        "name": "getHistoryForSearching",
        "parameterTypes": []
      },
      {
        "name": "getIdFallbackToQueryGeneration",
        "parameterTypes": []
      },
      {
        "name": "getKeepSearchResultsForDays",
        "parameterTypes": []
      },
      {
        "name": "getLanguagesToKeep",
        "parameterTypes": []
      },
      {
        "name": "getLoadLimitInternal",
        "parameterTypes": []
      },
      {
        "name": "getMaxAge",
        "parameterTypes": []
      },
      {
        "name": "getMinSeeders",
        "parameterTypes": []
      },
      {
        "name": "getPreselectQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "getRemoveTrailing",
        "parameterTypes": []
      },
      {
        "name": "getRequiredRegex",
        "parameterTypes": []
      },
      {
        "name": "getRequiredWords",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "getUserAgents",
        "parameterTypes": []
      },
      {
        "name": "isAlwaysShowQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreLoadLimitingForInternalSearches",
        "parameterTypes": []
      },
      {
        "name": "isIgnorePassworded",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreTemporarilyDisabled",
        "parameterTypes": []
      },
      {
        "name": "isLoadAllCachedOnInternal",
        "parameterTypes": []
      },
      {
        "name": "isReplaceUmlauts",
        "parameterTypes": []
      },
      {
        "name": "isSendTorznabCategories",
        "parameterTypes": []
      },
      {
        "name": "isShowQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "isTransformNewznabCategories",
        "parameterTypes": []
      },
      {
        "name": "isUseOriginalCategories",
        "parameterTypes": []
      },
      {
        "name": "isWrapApiErrors",
        "parameterTypes": []
      },
      {
        "name": "setAlwaysConvertIds",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setAlwaysShowQuickFilterButtons",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApplyRestrictions",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setCoverSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setCustomMappings",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCustomQuickFilterButtons",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDuplicateAgeThreshold",
        "parameterTypes": [
          "float"
        ]
      },
      {
        "name": "setDuplicateSizeThresholdInPercent",
        "parameterTypes": [
          "float"
        ]
      },
      {
        "name": "setForbiddenGroups",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setForbiddenPosters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setForbiddenRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForbiddenWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setGenerateQueries",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setGenerateQueriesFormat",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.QueryFormat"
        ]
      },
      {
        "name": "setGlobalCacheTimeMinutes",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setHistoryForSearching",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIdFallbackToQueryGeneration",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setIgnoreLoadLimitingForInternalSearches",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIgnorePassworded",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIgnoreTemporarilyDisabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeepSearchResultsForDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLanguage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLanguagesToKeep",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLoadAllCachedOnInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLoadLimitInternal",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinSeeders",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPreselectQuickFilterButtons",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRemoveTrailing",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setReplaceUmlauts",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRequiredRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequiredWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSendTorznabCategories",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowQuickFilterButtons",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTransformNewznabCategories",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseOriginalCategories",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserAgents",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setWrapApiErrors",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAuthHeader",
        "parameterTypes": []
      },
      {
        "name": "getAuthHeaderIpRanges",
        "parameterTypes": []
      },
      {
        "name": "getAuthType",
        "parameterTypes": []
      },
      {
        "name": "getRememberMeValidityDays",
        "parameterTypes": []
      },
      {
        "name": "getUsers",
        "parameterTypes": []
      },
      {
        "name": "isAllowApiStats",
        "parameterTypes": []
      },
      {
        "name": "isRememberUsers",
        "parameterTypes": []
      },
      {
        "name": "isRestrictAdmin",
        "parameterTypes": []
      },
      {
        "name": "isRestrictDetailsDl",
        "parameterTypes": []
      },
      {
        "name": "isRestrictIndexerSelection",
        "parameterTypes": []
      },
      {
        "name": "isRestrictSearch",
        "parameterTypes": []
      },
      {
        "name": "isRestrictStats",
        "parameterTypes": []
      },
      {
        "name": "setAllowApiStats",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAuthHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAuthHeaderIpRanges",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAuthType",
        "parameterTypes": [
          "org.nzbhydra.config.auth.AuthType"
        ]
      },
      {
        "name": "setRememberMeValidityDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRememberUsers",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestrictAdmin",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestrictDetailsDl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestrictIndexerSelection",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestrictSearch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestrictStats",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUsers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isMaySeeAdmin",
        "parameterTypes": []
      },
      {
        "name": "isMaySeeDetailsDl",
        "parameterTypes": []
      },
      {
        "name": "isMaySeeStats",
        "parameterTypes": []
      },
      {
        "name": "isShowIndexerSelection",
        "parameterTypes": []
      },
      {
        "name": "setMaySeeAdmin",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaySeeDetailsDl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaySeeStats",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowIndexerSelection",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultCategory",
        "parameterTypes": []
      },
      {
        "name": "isEnableCategorySizes",
        "parameterTypes": []
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDefaultCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnableCategorySizes",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getApplyRestrictionsType",
        "parameterTypes": []
      },
      {
        "name": "getIgnoreResultsFrom",
        "parameterTypes": []
      },
      {
        "name": "getMaxSizePreset",
        "parameterTypes": []
      },
      {
        "name": "getMinSizePreset",
        "parameterTypes": []
      },
      {
        "name": "getNewznabCategories",
        "parameterTypes": []
      },
      {
        "name": "getSubtype",
        "parameterTypes": []
      },
      {
        "name": "isApplySizeLimitsToApi",
        "parameterTypes": []
      },
      {
        "name": "isMayBeSelected",
        "parameterTypes": []
      },
      {
        "name": "isPreselect",
        "parameterTypes": []
      },
      {
        "name": "setApplyRestrictionsType",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setApplySizeLimitsToApi",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreResultsFrom",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setMaxSizePreset",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMayBeSelected",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMinSizePreset",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNewznabCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPreselect",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSearchType",
        "parameterTypes": [
          "org.nzbhydra.config.searching.SearchType"
        ]
      },
      {
        "name": "setSubtype",
        "parameterTypes": [
          "org.nzbhydra.config.category.Category$Subtype"
        ]
      },
      {
        "name": "getDownloadType",
        "parameterTypes": []
      },
      {
        "name": "getDownloaderType",
        "parameterTypes": []
      },
      {
        "name": "getIconCssClass",
        "parameterTypes": []
      },
      {
        "name": "getNzbAddingType",
        "parameterTypes": []
      },
      {
        "name": "isAddPaused",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setAddPaused",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDownloadType",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.DownloadType"
        ]
      },
      {
        "name": "setDownloaderType",
        "parameterTypes": [
          "org.nzbhydra.downloading.DownloaderType"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIconCssClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNzbAddingType",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.NzbAddingType"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDownloaders",
        "parameterTypes": []
      },
      {
        "name": "getExternalUrl",
        "parameterTypes": []
      },
      {
        "name": "getFallbackForFailed",
        "parameterTypes": []
      },
      {
        "name": "getNzbAccessType",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryDownloader",
        "parameterTypes": []
      },
      {
        "name": "getSaveNzbsTo",
        "parameterTypes": []
      },
      {
        "name": "getSaveTorrentsTo",
        "parameterTypes": []
      },
      {
        "name": "isSendMagnetLinks",
        "parameterTypes": []
      },
      {
        "name": "isShowDownloaderStatus",
        "parameterTypes": []
      },
      {
        "name": "isUpdateStatuses",
        "parameterTypes": []
      },
      {
        "name": "setDownloaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setExternalUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFallbackForFailed",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setNzbAccessType",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.FileDownloadAccessType"
        ]
      },
      {
        "name": "setPrimaryDownloader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSaveNzbsTo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSaveTorrentsTo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSendMagnetLinks",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowDownloaderStatus",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUpdateStatuses",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAnime",
        "parameterTypes": []
      },
      {
        "name": "getAudiobook",
        "parameterTypes": []
      },
      {
        "name": "getComic",
        "parameterTypes": []
      },
      {
        "name": "getEbook",
        "parameterTypes": []
      },
      {
        "name": "getMagazine",
        "parameterTypes": []
      },
      {
        "name": "setAnime",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setAudiobook",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setComic",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setEbook",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMagazine",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSubCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getApiPath",
        "parameterTypes": []
      },
      {
        "name": "getBackend",
        "parameterTypes": []
      },
      {
        "name": "getCategoryMapping",
        "parameterTypes": []
      },
      {
        "name": "getColor",
        "parameterTypes": []
      },
      {
        "name": "getCustomParameters",
        "parameterTypes": []
      },
      {
        "name": "getDisabledAt",
        "parameterTypes": []
      },
      {
        "name": "getDisabledLevel",
        "parameterTypes": []
      },
      {
        "name": "getDisabledUntil",
        "parameterTypes": []
      },
      {
        "name": "getDownloadLimit",
        "parameterTypes": []
      },
      {
        "name": "getEnabledCategories",
        "parameterTypes": []
      },
      {
        "name": "getEnabledForSearchSource",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenWordPrefix",
        "parameterTypes": []
      },
      {
        "name": "getGeneralMinSize",
        "parameterTypes": []
      },
      {
        "name": "getHitLimit",
        "parameterTypes": []
      },
      {
        "name": "getHitLimitResetTime",
        "parameterTypes": []
      },
      {
        "name": "getLastError",
        "parameterTypes": []
      },
      {
        "name": "getLoadLimitOnRandom",
        "parameterTypes": []
      },
      {
        "name": "getSchedule",
        "parameterTypes": []
      },
      {
        "name": "getScore",
        "parameterTypes": []
      },
      {
        "name": "getSearchModuleType",
        "parameterTypes": []
      },
      {
        "name": "getState",
        "parameterTypes": []
      },
      {
        "name": "getSupportedSearchIds",
        "parameterTypes": []
      },
      {
        "name": "getSupportedSearchTypes",
        "parameterTypes": []
      },
      {
        "name": "getVipExpirationDate",
        "parameterTypes": []
      },
      {
        "name": "isAllCapsChecked",
        "parameterTypes": []
      },
      {
        "name": "isBinsearchOtherGroups",
        "parameterTypes": []
      },
      {
        "name": "isConfigComplete",
        "parameterTypes": []
      },
      {
        "name": "isShowOnSearch",
        "parameterTypes": []
      },
      {
        "name": "setAllCapsChecked",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApiPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBackend",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.BackendType"
        ]
      },
      {
        "name": "setBinsearchOtherGroups",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCategoryMapping",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerCategoryConfig"
        ]
      },
      {
        "name": "setColor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConfigComplete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCustomParameters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisabledAt",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setDisabledLevel",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDisabledUntil",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setDownloadLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setEnabledCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEnabledForSearchSource",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setForbiddenWordPrefix",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig$ForbiddenWordPrefix"
        ]
      },
      {
        "name": "setGeneralMinSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setHitLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setHitLimitResetTime",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLastError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoadLimitOnRandom",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSchedule",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setScore",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSearchModuleType",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.SearchModuleType"
        ]
      },
      {
        "name": "setShowOnSearch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setState",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig$State"
        ]
      },
      {
        "name": "setSupportedSearchIds",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSupportedSearchTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setVipExpirationDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFileDownloadAccessType",
        "parameterTypes": []
      },
      {
        "name": "getAffectedValue",
        "parameterTypes": []
      },
      {
        "name": "getFrom",
        "parameterTypes": []
      },
      {
        "name": "getTo",
        "parameterTypes": []
      },
      {
        "name": "isMatchAll",
        "parameterTypes": []
      },
      {
        "name": "setAffectedValue",
        "parameterTypes": [
          "org.nzbhydra.config.searching.AffectedValue"
        ]
      },
      {
        "name": "setFrom",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMatchAll",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "prepareForSaving",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      },
      {
        "name": "updateAfterLoading",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      },
      {
        "name": "initializeNewConfig",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo"
        ]
      },
      {
        "name": "getThreadCpuUsageChartData",
        "parameterTypes": []
      },
      {
        "name": "logMetrics",
        "parameterTypes": []
      },
      {
        "name": "checkHistoryStatus",
        "parameterTypes": []
      },
      {
        "name": "checkQueueStatus",
        "parameterTypes": []
      },
      {
        "name": "setAccessSource",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSource"
        ]
      },
      {
        "name": "setAge",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExternalId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSearchResult",
        "parameterTypes": [
          "org.nzbhydra.searching.db.SearchResultEntity"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "org.nzbhydra.downloading.FileDownloadStatus"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "getDownloadRateFormatted",
        "parameterTypes": []
      },
      {
        "name": "getDownloadRateInKilobytes",
        "parameterTypes": []
      },
      {
        "name": "getDownloaderName",
        "parameterTypes": []
      },
      {
        "name": "getDownloadingRatesInKilobytes",
        "parameterTypes": []
      },
      {
        "name": "getDownloadingTitle",
        "parameterTypes": []
      },
      {
        "name": "getDownloadingTitlePercentFinished",
        "parameterTypes": []
      },
      {
        "name": "getDownloadingTitleRemainingSizeFormatted",
        "parameterTypes": []
      },
      {
        "name": "getDownloadingTitleRemainingTimeFormatted",
        "parameterTypes": []
      },
      {
        "name": "getElementsInQueue",
        "parameterTypes": []
      },
      {
        "name": "getLastDownloadRate",
        "parameterTypes": []
      },
      {
        "name": "getRemainingSeconds",
        "parameterTypes": []
      },
      {
        "name": "getRemainingSizeFormatted",
        "parameterTypes": []
      },
      {
        "name": "getRemainingSizeInMegaBytes",
        "parameterTypes": []
      },
      {
        "name": "getRemainingTimeFormatted",
        "parameterTypes": []
      },
      {
        "name": "isLastUpdateForNow",
        "parameterTypes": []
      },
      {
        "name": "connect",
        "parameterTypes": []
      },
      {
        "name": "onClientDisconnect",
        "parameterTypes": [
          "org.springframework.web.socket.messaging.SessionDisconnectEvent"
        ]
      },
      {
        "name": "onClientSubscribe",
        "parameterTypes": [
          "org.springframework.web.socket.messaging.SessionSubscribeEvent"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "searchHistoryForSearchPage",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigProvider",
          "org.nzbhydra.indexers.IndexerRepository",
          "org.nzbhydra.searching.db.SearchResultRepository",
          "org.nzbhydra.indexers.IndexerApiAccessRepository",
          "org.nzbhydra.indexers.IndexerApiAccessEntityShortRepository",
          "org.nzbhydra.indexers.status.IndexerLimitRepository",
          "org.nzbhydra.indexers.IndexerWebAccess",
          "org.nzbhydra.searching.SearchResultAcceptor",
          "org.nzbhydra.searching.CategoryProvider",
          "org.nzbhydra.mediainfo.InfoProvider",
          "org.springframework.context.ApplicationEventPublisher",
          "org.nzbhydra.indexers.QueryGenerator",
          "org.nzbhydra.searching.CustomQueryAndTitleMappingHandler",
          "org.springframework.oxm.Unmarshaller",
          "org.nzbhydra.config.BaseConfigHandler"
        ]
      },
      {
        "name": "cleanUpTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "completeIndexerSearchResult",
        "parameterTypes": [
          "java.lang.Object",
          "org.nzbhydra.searching.dtoseventsenums.IndexerSearchResult",
          "org.nzbhydra.searching.SearchResultAcceptor$AcceptorResult",
          "org.nzbhydra.searching.searchrequests.SearchRequest",
          "int",
          "java.lang.Integer"
        ]
      },
      {
        "name": "getConfig",
        "parameterTypes": []
      },
      {
        "name": "getIndexerEntity",
        "parameterTypes": []
      },
      {
        "name": "getSearchResultItems",
        "parameterTypes": [
          "java.lang.Object",
          "org.nzbhydra.searching.searchrequests.SearchRequest"
        ]
      },
      {
        "name": "handleNewConfig",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      },
      {
        "name": "initialize",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig",
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "search",
        "parameterTypes": [
          "org.nzbhydra.searching.searchrequests.SearchRequest",
          "int",
          "java.lang.Integer"
        ]
      },
      {
        "name": "tryParseDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAccessType",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerApiAccessType"
        ]
      },
      {
        "name": "setIndexer",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "setResponseTime",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setResult",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerAccessResult"
        ]
      },
      {
        "name": "setApiAccessType",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerApiAccessType"
        ]
      },
      {
        "name": "setIndexerId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSuccessful",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setIndexerEntity",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "setResultsCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSearchEntity",
        "parameterTypes": [
          "org.nzbhydra.searching.db.SearchEntity"
        ]
      },
      {
        "name": "setSuccessful",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigProvider",
          "org.nzbhydra.config.BaseConfigHandler"
        ]
      },
      {
        "name": "cleanup",
        "parameterTypes": []
      },
      {
        "name": "getBaseConfigHandler",
        "parameterTypes": []
      },
      {
        "name": "getDetails",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "getIdToCategory",
        "parameterTypes": []
      },
      {
        "name": "getIndexerStatusRepository",
        "parameterTypes": []
      },
      {
        "name": "getNfo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUnmarshaller",
        "parameterTypes": []
      },
      {
        "name": "setBaseConfigHandler",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfigHandler"
        ]
      },
      {
        "name": "setIndexerStatusRepository",
        "parameterTypes": [
          "org.nzbhydra.indexers.status.IndexerLimitRepository"
        ]
      },
      {
        "name": "setUnmarshaller",
        "parameterTypes": [
          "org.springframework.oxm.Unmarshaller"
        ]
      },
      {
        "name": "setApiHitLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setApiHits",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDownloads",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setOldestApiHit",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setOldestDownload",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setSearchType",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.NewznabResponse$SearchType"
        ]
      },
      {
        "name": "setImdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPosterUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTmdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setYear",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTvdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTvmazeId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTvrageId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNewsForCurrentVersionAndAfter",
        "parameterTypes": [
          "java.security.Principal"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "getNotificationEventType",
        "parameterTypes": []
      },
      {
        "name": "getTime",
        "parameterTypes": []
      },
      {
        "name": "getUrls",
        "parameterTypes": []
      },
      {
        "name": "isDisplayed",
        "parameterTypes": []
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMessageType",
        "parameterTypes": [
          "org.nzbhydra.notifications.NotificationMessageType"
        ]
      },
      {
        "name": "setNotificationEventType",
        "parameterTypes": [
          "org.nzbhydra.config.notification.NotificationEventType"
        ]
      },
      {
        "name": "setUrls",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "markRead",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "executeCheck",
        "parameterTypes": []
      },
      {
        "name": "detectProblems",
        "parameterTypes": []
      },
      {
        "name": "setExpiryDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIndexerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.searching.db.SearchResultRepository",
          "org.nzbhydra.searching.SearchModuleProvider"
        ]
      },
      {
        "name": "loadIndexers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "deleteOldResults",
        "parameterTypes": []
      },
      {
        "name": "getIdentifierKey",
        "parameterTypes": []
      },
      {
        "name": "getIdentifierValue",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIdentifierKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIdentifierValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAuthor",
        "parameterTypes": []
      },
      {
        "name": "getCategoryName",
        "parameterTypes": []
      },
      {
        "name": "getEpisode",
        "parameterTypes": []
      },
      {
        "name": "getIdentifiers",
        "parameterTypes": []
      },
      {
        "name": "getIp",
        "parameterTypes": []
      },
      {
        "name": "getQuery",
        "parameterTypes": []
      },
      {
        "name": "getSeason",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "setAuthor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCategoryName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEpisode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIdentifiers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSeason",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSource"
        ]
      },
      {
        "name": "setDetails",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFirstFound",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIndexerGuid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIndexerSearchEntityId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPubDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setHasResult",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHave",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setInvolved",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "initBinder",
        "parameterTypes": [
          "org.springframework.web.bind.WebDataBinder"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": [
          "java.lang.Integer",
          "java.lang.Boolean"
        ]
      },
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "checkAndInstall",
        "parameterTypes": []
      },
      {
        "name": "getVersions",
        "parameterTypes": []
      },
      {
        "name": "handleUpdateException",
        "parameterTypes": [
          "org.nzbhydra.update.UpdateException"
        ]
      },
      {
        "name": "isWrapperOutdated",
        "parameterTypes": []
      },
      {
        "name": "getAdminRestricted",
        "parameterTypes": []
      },
      {
        "name": "getAuthConfigured",
        "parameterTypes": []
      },
      {
        "name": "getBaseUrl",
        "parameterTypes": []
      },
      {
        "name": "getMaySeeAdmin",
        "parameterTypes": []
      },
      {
        "name": "getMaySeeDetailsDl",
        "parameterTypes": []
      },
      {
        "name": "getMaySeeSearch",
        "parameterTypes": []
      },
      {
        "name": "getMaySeeStats",
        "parameterTypes": []
      },
      {
        "name": "getSafeConfig",
        "parameterTypes": []
      },
      {
        "name": "getSearchRestricted",
        "parameterTypes": []
      },
      {
        "name": "getShowIndexerSelection",
        "parameterTypes": []
      },
      {
        "name": "getStatsRestricted",
        "parameterTypes": []
      },
      {
        "name": "handleConflict",
        "parameterTypes": [
          "java.lang.Exception",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.error.ErrorAttributes"
        ]
      },
      {
        "name": "preHandle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      {
        "name": "index",
        "parameterTypes": [
          "jakarta.servlet.http.HttpSession",
          "java.security.Principal",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "configureClientInboundChannel",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.ChannelRegistration"
        ]
      },
      {
        "name": "configureClientOutboundChannel",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.ChannelRegistration"
        ]
      },
      {
        "name": "configureMessageBroker",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.MessageBrokerRegistry"
        ]
      },
      {
        "name": "registerStompEndpoints",
        "parameterTypes": [
          "org.springframework.web.socket.config.annotation.StompEndpointRegistry"
        ]
      },
      {
        "name": "logfileContent",
        "parameterTypes": []
      },
      {
        "name": "createRequest",
        "parameterTypes": [
          "java.net.URI",
          "org.springframework.http.HttpMethod"
        ]
      },
      {
        "name": "isPerInstance",
        "parameterTypes": []
      },
      {
        "name": "getTargetClass",
        "parameterTypes": []
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "getTargetSource",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getAdvice",
        "parameterTypes": []
      },
      {
        "name": "getAdviceBeanName",
        "parameterTypes": []
      },
      {
        "name": "setAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "setAdviceBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setSingleton",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "match",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.ExposableEndpoint"
        ]
      },
      {
        "name": "getRootPath",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.EndpointId"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      },
      {
        "name": "getExposure",
        "parameterTypes": []
      },
      {
        "name": "getInclude",
        "parameterTypes": []
      },
      {
        "name": "setInclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "configureMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "registerContributor",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "getNames",
        "parameterTypes": []
      },
      {
        "name": "getPrimary",
        "parameterTypes": []
      },
      {
        "name": "getShowDetails",
        "parameterTypes": []
      },
      {
        "name": "setShowDetails",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      },
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "getShowComponents",
        "parameterTypes": []
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setShowComponents",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry",
          "java.util.Collection",
          "java.util.Map"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      },
      {
        "name": "mode",
        "parameterTypes": []
      },
      {
        "name": "prefix",
        "parameterTypes": []
      },
      {
        "name": "step",
        "parameterTypes": []
      },
      {
        "name": "map",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "test",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.sbom.SbomProperties"
        ]
      },
      {
        "name": "configureTasks",
        "parameterTypes": [
          "org.springframework.scheduling.config.ScheduledTaskRegistrar"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "createOperationKey",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Operation"
        ]
      },
      {
        "name": "getEndpoints",
        "parameterTypes": []
      },
      {
        "name": "mapParameterValue",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.invoke.OperationParameter",
          "java.lang.Object"
        ]
      },
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.EndpointId",
          "org.springframework.boot.actuate.endpoint.OperationType",
          "org.springframework.boot.actuate.endpoint.invoke.OperationParameters",
          "org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"
        ]
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "onStartup",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      },
      {
        "name": "health",
        "parameterTypes": []
      },
      {
        "name": "getContributor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unregisterContributor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.AdditionalHealthEndpointPath"
        ]
      },
      {
        "name": "getAllWithAdditionalPath",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.WebServerNamespace"
        ]
      },
      {
        "name": "getHealth",
        "parameterTypes": [
          "java.lang.Object",
          "boolean"
        ]
      },
      {
        "name": "getHealth",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "stream",
        "parameterTypes": []
      },
      {
        "name": "getStatusCode",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.Status"
        ]
      },
      {
        "name": "getAggregateStatus",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getAggregateStatus",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.Status[]"
        ]
      },
      {
        "name": "getMeterBinder",
        "parameterTypes": [
          "org.springframework.cache.Cache",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "repositoryTags",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"
        ]
      },
      {
        "name": "afterInvocation",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"
        ]
      },
      {
        "name": "supportsEventType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.web.client.RestClient$Builder"
        ]
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.web.client.RestTemplate"
        ]
      },
      {
        "name": "describeMappings",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "getMappingName",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "getConvertibleTypes",
        "parameterTypes": []
      },
      {
        "name": "getLocations",
        "parameterTypes": []
      },
      {
        "name": "getSchemas",
        "parameterTypes": []
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSchemas",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getSchemaManagement",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "customize",
        "parameterTypes": [
          "com.google.gson.GsonBuilder"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
        ]
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      },
      {
        "name": "getDeserialization",
        "parameterTypes": []
      },
      {
        "name": "getSerialization",
        "parameterTypes": []
      },
      {
        "name": "getXaDataSourceClassName",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "entityManagerFactory",
        "parameterTypes": [
          "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
          "org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes"
        ]
      },
      {
        "name": "entityManagerFactoryBuilder",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "jpaVendorAdapter",
        "parameterTypes": []
      },
      {
        "name": "transactionManager",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "setDatabasePlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOpenInView",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getRequestMatcher",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader",
          "org.springframework.boot.autoconfigure.ssl.SslProperties"
        ]
      },
      {
        "name": "registerBundles",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundleRegistry"
        ]
      },
      {
        "name": "isExcluded",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.beans.factory.config.BeanDefinition",
          "java.lang.Class"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.transaction.TransactionManager"
        ]
      },
      {
        "name": "getCompression",
        "parameterTypes": []
      },
      {
        "name": "getServlet",
        "parameterTypes": []
      },
      {
        "name": "getSsl",
        "parameterTypes": []
      },
      {
        "name": "getTomcat",
        "parameterTypes": []
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "setForwardHeadersStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "getJsp",
        "parameterTypes": []
      },
      {
        "name": "getSession",
        "parameterTypes": []
      },
      {
        "name": "setContextPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getThreads",
        "parameterTypes": []
      },
      {
        "name": "setRedirectContextRoot",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getResources",
        "parameterTypes": []
      },
      {
        "name": "setStaticLocations",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "fromBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fromBundle",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundle"
        ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": []
      },
      {
        "name": "getRelativePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getServletUrlMapping",
        "parameterTypes": []
      },
      {
        "name": "addUrlMappings",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setUrlMappings",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
        ]
      },
      {
        "name": "setMaxFileSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxRequestSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "resolveErrorView",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "org.springframework.http.HttpStatus",
          "java.util.Map"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.web.WebProperties"
        ]
      },
      {
        "name": "registerErrorPages",
        "parameterTypes": [
          "org.springframework.boot.web.server.ErrorPageRegistry"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper",
          "java.util.Map"
        ]
      },
      {
        "name": "getLivenessState",
        "parameterTypes": []
      },
      {
        "name": "getReadinessState",
        "parameterTypes": []
      },
      {
        "name": "getLastChangeEvent",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.boot.availability.AvailabilityState"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory",
          "org.springframework.boot.ConfigurableBootstrapContext"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory",
          "org.springframework.boot.context.properties.bind.Binder",
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.SpringApplication",
          "java.lang.String[]"
        ]
      },
      {
        "name": "initializeDatabase",
        "parameterTypes": []
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "detect",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
        ]
      },
      {
        "name": "detectionComplete",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory",
          "java.util.Set"
        ]
      },
      {
        "name": "addBundleUpdateHandler",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "getBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "registerBundle",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.boot.ssl.SslBundle"
        ]
      },
      {
        "name": "updateBundle",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.boot.ssl.SslBundle"
        ]
      },
      {
        "name": "addConnectorCustomizers",
        "parameterTypes": [
          "org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer[]"
        ]
      },
      {
        "name": "addContextCustomizers",
        "parameterTypes": [
          "org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer[]"
        ]
      },
      {
        "name": "addEngineValves",
        "parameterTypes": [
          "org.apache.catalina.Valve[]"
        ]
      },
      {
        "name": "addProtocolHandlerCustomizers",
        "parameterTypes": [
          "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer[]"
        ]
      },
      {
        "name": "getWebServer",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.ServletContextInitializer[]"
        ]
      },
      {
        "name": "setBackgroundProcessorDelay",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setBaseDirectory",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setUriEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "addErrorPages",
        "parameterTypes": [
          "org.springframework.boot.web.server.ErrorPage[]"
        ]
      },
      {
        "name": "getErrorPages",
        "parameterTypes": []
      },
      {
        "name": "getHttp2",
        "parameterTypes": []
      },
      {
        "name": "getServerHeader",
        "parameterTypes": []
      },
      {
        "name": "getShutdown",
        "parameterTypes": []
      },
      {
        "name": "getSslBundles",
        "parameterTypes": []
      },
      {
        "name": "setCompression",
        "parameterTypes": [
          "org.springframework.boot.web.server.Compression"
        ]
      },
      {
        "name": "setErrorPages",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setHttp2",
        "parameterTypes": [
          "org.springframework.boot.web.server.Http2"
        ]
      },
      {
        "name": "setServerHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSslBundles",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundles"
        ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addServletNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "addServletRegistrationBeans",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.ServletRegistrationBean[]"
        ]
      },
      {
        "name": "addUrlPatterns",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "determineDispatcherTypes",
        "parameterTypes": []
      },
      {
        "name": "getFilterName",
        "parameterTypes": []
      },
      {
        "name": "getServletNames",
        "parameterTypes": []
      },
      {
        "name": "getServletRegistrationBeans",
        "parameterTypes": []
      },
      {
        "name": "getUrlPatterns",
        "parameterTypes": []
      },
      {
        "name": "isMatchAfter",
        "parameterTypes": []
      },
      {
        "name": "setDispatcherTypes",
        "parameterTypes": [
          "jakarta.servlet.DispatcherType",
          "jakarta.servlet.DispatcherType[]"
        ]
      },
      {
        "name": "setDispatcherTypes",
        "parameterTypes": [
          "java.util.EnumSet"
        ]
      },
      {
        "name": "setMatchAfter",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setServletNames",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setServletRegistrationBeans",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setUrlPatterns",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "addInitParameter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "jakarta.servlet.Registration$Dynamic"
        ]
      },
      {
        "name": "getInitParameters",
        "parameterTypes": []
      },
      {
        "name": "isAsyncSupported",
        "parameterTypes": []
      },
      {
        "name": "setAsyncSupported",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreRegistrationFailure",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getMultipartConfig",
        "parameterTypes": []
      },
      {
        "name": "getServletName",
        "parameterTypes": []
      },
      {
        "name": "getUrlMappings",
        "parameterTypes": []
      },
      {
        "name": "setLoadOnStartup",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMultipartConfig",
        "parameterTypes": [
          "jakarta.servlet.MultipartConfigElement"
        ]
      },
      {
        "name": "setServlet",
        "parameterTypes": [
          "jakarta.servlet.Servlet"
        ]
      },
      {
        "name": "getError",
        "parameterTypes": [
          "org.springframework.web.context.request.WebRequest"
        ]
      },
      {
        "name": "getErrorAttributes",
        "parameterTypes": [
          "org.springframework.web.context.request.WebRequest",
          "org.springframework.boot.web.error.ErrorAttributeOptions"
        ]
      },
      {
        "name": "resolveException",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "java.lang.Exception"
        ]
      },
      {
        "name": "addCookieSameSiteSuppliers",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier[]"
        ]
      },
      {
        "name": "addInitializers",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.ServletContextInitializer[]"
        ]
      },
      {
        "name": "addMimeMappings",
        "parameterTypes": [
          "org.springframework.boot.web.server.MimeMappings"
        ]
      },
      {
        "name": "addWebListeners",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getCookieSameSiteSuppliers",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDocumentRoot",
        "parameterTypes": []
      },
      {
        "name": "getLocaleCharsetMappings",
        "parameterTypes": []
      },
      {
        "name": "getMimeMappings",
        "parameterTypes": []
      },
      {
        "name": "isRegisterDefaultServlet",
        "parameterTypes": []
      },
      {
        "name": "setCookieSameSiteSuppliers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDocumentRoot",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setInitializers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setJsp",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.server.Jsp"
        ]
      },
      {
        "name": "setLocaleCharsetMappings",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setMimeMappings",
        "parameterTypes": [
          "org.springframework.boot.web.server.MimeMappings"
        ]
      },
      {
        "name": "setRegisterDefaultServlet",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSession",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.server.Session"
        ]
      },
      {
        "name": "setForce",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegistered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCookie",
        "parameterTypes": []
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      },
      {
        "name": "isCandidateClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCacheNames",
        "parameterTypes": []
      },
      {
        "name": "getErrorHandler",
        "parameterTypes": []
      },
      {
        "name": "setErrorHandler",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheErrorHandler"
        ]
      },
      {
        "name": "getCacheOperations",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Class"
        ]
      },
      {
        "name": "getPointcut",
        "parameterTypes": []
      },
      {
        "name": "configure",
        "parameterTypes": [
          "java.util.function.Supplier",
          "java.util.function.Supplier",
          "java.util.function.Supplier",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "getCacheOperationSource",
        "parameterTypes": []
      },
      {
        "name": "getCacheResolver",
        "parameterTypes": []
      },
      {
        "name": "getKeyGenerator",
        "parameterTypes": []
      },
      {
        "name": "setCacheManager",
        "parameterTypes": [
          "org.springframework.cache.CacheManager"
        ]
      },
      {
        "name": "setCacheOperationSource",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheOperationSource"
        ]
      },
      {
        "name": "setCacheOperationSources",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheOperationSource[]"
        ]
      },
      {
        "name": "setCacheResolver",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheResolver"
        ]
      },
      {
        "name": "setKeyGenerator",
        "parameterTypes": [
          "org.springframework.cache.interceptor.KeyGenerator"
        ]
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "org.aopalliance.intercept.MethodInvocation"
        ]
      },
      {
        "name": "initializeCaches",
        "parameterTypes": []
      },
      {
        "name": "supportsAsyncExecution",
        "parameterTypes": []
      },
      {
        "name": "isAutoStartup",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "getListenerId",
        "parameterTypes": []
      },
      {
        "name": "supportsSourceType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "onClose",
        "parameterTypes": []
      },
      {
        "name": "onRefresh",
        "parameterTypes": []
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class",
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.GenericConverter"
        ]
      },
      {
        "name": "addConverterFactory",
        "parameterTypes": [
          "org.springframework.core.convert.converter.ConverterFactory"
        ]
      },
      {
        "name": "canBypassConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "removeConvertible",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "setFileEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreResourceNotFound",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocalOverride",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "org.springframework.core.io.Resource[]"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setPropertiesArray",
        "parameterTypes": [
          "java.util.Properties[]"
        ]
      },
      {
        "name": "setPropertiesPersister",
        "parameterTypes": [
          "org.springframework.util.PropertiesPersister"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "submitCompletable",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submitCompletable",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      },
      {
        "name": "findPersistentPropertyPaths",
        "parameterTypes": [
          "java.lang.Class",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "hasPersistentEntityFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "toMappingContext",
        "parameterTypes": []
      },
      {
        "name": "deleteAllByIdInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "getById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getReferenceById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAllAndFlush",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getEntityGraph",
        "parameterTypes": []
      },
      {
        "name": "getLockModeType",
        "parameterTypes": []
      },
      {
        "name": "getQueryHints",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "getExtensionId",
        "parameterTypes": []
      },
      {
        "name": "getRootObject",
        "parameterTypes": []
      },
      {
        "name": "setEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "setEscapeCharacter",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "setMappingContext",
        "parameterTypes": [
          "org.springframework.data.mapping.context.MappingContext"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.support.JpaEntityInformation",
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteByTimeBefore",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllByDisplayedFalseOrderByTimeDesc",
        "parameterTypes": []
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findByIndexer",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "findByName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByStatusInAndTimeAfterOrderByTimeDesc",
        "parameterTypes": [
          "java.util.Collection",
          "java.time.Instant"
        ]
      },
      {
        "name": "findForUserSearchHistory",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "setEscapeCharacter",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.query.EscapeCharacter"
        ]
      },
      {
        "name": "setProjectionFactory",
        "parameterTypes": [
          "org.springframework.data.projection.ProjectionFactory"
        ]
      },
      {
        "name": "setRepositoryMethodMetadata",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.support.CrudMethodMetadata"
        ]
      },
      {
        "name": "createPersistentProperty",
        "parameterTypes": [
          "org.springframework.data.mapping.model.Property",
          "org.springframework.data.mapping.model.MutablePersistentEntity",
          "org.springframework.data.mapping.model.SimpleTypeHolder"
        ]
      },
      {
        "name": "getManagedTypes",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntities",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "org.springframework.data.mapping.PropertyPath"
        ]
      },
      {
        "name": "initialize",
        "parameterTypes": []
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "setInitialEntitySet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setManagedTypes",
        "parameterTypes": [
          "org.springframework.data.domain.ManagedTypes"
        ]
      },
      {
        "name": "setSimpleTypeHolder",
        "parameterTypes": [
          "org.springframework.data.mapping.model.SimpleTypeHolder"
        ]
      },
      {
        "name": "setStrict",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      },
      {
        "name": "getQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toNamedQueries",
        "parameterTypes": []
      },
      {
        "name": "addRepositoryFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"
        ]
      },
      {
        "name": "getEntityInformation",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": []
      },
      {
        "name": "getQueryMethods",
        "parameterTypes": []
      },
      {
        "name": "getRepositoryInformation",
        "parameterTypes": []
      },
      {
        "name": "setCustomImplementation",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setEvaluationContextProvider",
        "parameterTypes": [
          "org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"
        ]
      },
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamedQueries",
        "parameterTypes": [
          "org.springframework.data.repository.core.NamedQueries"
        ]
      },
      {
        "name": "setQueryLookupStrategyKey",
        "parameterTypes": [
          "org.springframework.data.repository.query.QueryLookupStrategy$Key"
        ]
      },
      {
        "name": "setRepositoryBaseClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setRepositoryFragments",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEnableDefaultTransactions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFunctions",
        "parameterTypes": []
      },
      {
        "name": "and",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "org.springframework.data.util.Streamable"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "filter",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "flatMap",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "get",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "map",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "toList",
        "parameterTypes": []
      },
      {
        "name": "toSet",
        "parameterTypes": []
      },
      {
        "name": "resolveArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "org.springframework.web.method.support.ModelAndViewContainer",
          "org.springframework.web.context.request.NativeWebRequest",
          "org.springframework.web.bind.support.WebDataBinderFactory"
        ]
      },
      {
        "name": "supportsParameter",
        "parameterTypes": [
          "org.springframework.core.MethodParameter"
        ]
      },
      {
        "name": "setOffsetParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isFallbackPageable",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "setFallbackPageable",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "setMaxPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setOneIndexedParameters",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPageParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSizeParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPropertyDelimiter",
        "parameterTypes": []
      },
      {
        "name": "setFallbackSort",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "setPropertyDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSortParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectFactory"
        ]
      },
      {
        "name": "addArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addFormatters",
        "parameterTypes": [
          "org.springframework.format.FormatterRegistry"
        ]
      },
      {
        "name": "extendMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addFormatter",
        "parameterTypes": [
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldAnnotation",
        "parameterTypes": [
          "org.springframework.format.AnnotationFormatterFactory"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Printer",
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addParser",
        "parameterTypes": [
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addPrinter",
        "parameterTypes": [
          "org.springframework.format.Printer"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      },
      {
        "name": "getClientHttpRequestInitializers",
        "parameterTypes": []
      },
      {
        "name": "setClientHttpRequestInitializers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getInterceptors",
        "parameterTypes": []
      },
      {
        "name": "getRequestFactory",
        "parameterTypes": []
      },
      {
        "name": "setInterceptors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRequestFactory",
        "parameterTypes": [
          "org.springframework.http.client.ClientHttpRequestFactory"
        ]
      },
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Type",
          "org.springframework.http.MediaType",
          "org.springframework.http.HttpOutputMessage"
        ]
      },
      {
        "name": "addDefaultHeaders",
        "parameterTypes": [
          "org.springframework.http.HttpHeaders",
          "java.lang.Object",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getContentLength",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getDefaultCharset",
        "parameterTypes": []
      },
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": []
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.HttpInputMessage"
        ]
      },
      {
        "name": "setDefaultCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setSupportedMediaTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "supportsRepeatableWrites",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.MediaType",
          "org.springframework.http.HttpOutputMessage"
        ]
      },
      {
        "name": "writeInternal",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.HttpOutputMessage"
        ]
      },
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getObjectMapper",
        "parameterTypes": []
      },
      {
        "name": "getObjectMappersForType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.HttpInputMessage"
        ]
      },
      {
        "name": "registerObjectMappersForType",
        "parameterTypes": [
          "java.lang.Class",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "setObjectMapper",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      },
      {
        "name": "setPrettyPrint",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection",
          "int",
          "org.springframework.jdbc.core.ParameterizedPreparedStatementSetter"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.List"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.List",
          "int[]"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.BatchPreparedStatementSetter"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.BatchPreparedStatementSetter",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "call",
        "parameterTypes": [
          "org.springframework.jdbc.core.CallableStatementCreator",
          "java.util.List"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.CallableStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.CallableStatementCreator",
          "org.springframework.jdbc.core.CallableStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.ConnectionCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.StatementCallback"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map[]"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource[]"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource[]",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource[]",
          "org.springframework.jdbc.support.KeyHolder",
          "java.lang.String[]"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "getJdbcOperations",
        "parameterTypes": []
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.support.KeyHolder",
          "java.lang.String[]"
        ]
      },
      {
        "name": "sql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "isLazyInit",
        "parameterTypes": []
      },
      {
        "name": "setDatabaseProductName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionTranslator",
        "parameterTypes": [
          "org.springframework.jdbc.support.SQLExceptionTranslator"
        ]
      },
      {
        "name": "fromMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message",
          "java.lang.Class"
        ]
      },
      {
        "name": "fromMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message",
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "toMessage",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.MessageHeaders"
        ]
      },
      {
        "name": "toMessage",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.MessageHeaders",
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.util.Map",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "doSend",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "getDefaultDestination",
        "parameterTypes": []
      },
      {
        "name": "getMessageConverter",
        "parameterTypes": []
      },
      {
        "name": "send",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "setDefaultDestination",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMessageConverter",
        "parameterTypes": [
          "org.springframework.messaging.converter.MessageConverter"
        ]
      },
      {
        "name": "noMatchingExceptionHandler",
        "parameterTypes": []
      },
      {
        "name": "getApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "getArgumentResolvers",
        "parameterTypes": []
      },
      {
        "name": "getCustomArgumentResolvers",
        "parameterTypes": []
      },
      {
        "name": "getCustomReturnValueHandlers",
        "parameterTypes": []
      },
      {
        "name": "getDestinationPrefixes",
        "parameterTypes": []
      },
      {
        "name": "getDirectLookupDestinations",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getHandlerMethods",
        "parameterTypes": []
      },
      {
        "name": "getMatchingMapping",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "getReturnValueHandlers",
        "parameterTypes": []
      },
      {
        "name": "handleMatch",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.handler.HandlerMethod",
          "java.lang.String",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "handleMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "setArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCustomArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCustomReturnValueHandlers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setReturnValueHandlers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "convertAndSendToUser",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSendToUser",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "convertAndSendToUser",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertAndSendToUser",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "getConversionService",
        "parameterTypes": []
      },
      {
        "name": "getHeaderInitializer",
        "parameterTypes": []
      },
      {
        "name": "getPathMatcher",
        "parameterTypes": []
      },
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "setConversionService",
        "parameterTypes": [
          "org.springframework.core.convert.ConversionService"
        ]
      },
      {
        "name": "setDestinationPrefixes",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setHeaderInitializer",
        "parameterTypes": [
          "org.springframework.messaging.support.MessageHeaderInitializer"
        ]
      },
      {
        "name": "setPathMatcher",
        "parameterTypes": [
          "org.springframework.util.PathMatcher"
        ]
      },
      {
        "name": "setPhase",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "getApplicationEventPublisher",
        "parameterTypes": []
      },
      {
        "name": "getBrokerChannel",
        "parameterTypes": []
      },
      {
        "name": "getClientInboundChannel",
        "parameterTypes": []
      },
      {
        "name": "getClientOutboundChannel",
        "parameterTypes": []
      },
      {
        "name": "isBrokerAvailable",
        "parameterTypes": []
      },
      {
        "name": "isPreservePublishOrder",
        "parameterTypes": []
      },
      {
        "name": "setAutoStartup",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPreservePublishOrder",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUserDestinationPredicate",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "brokerChannel",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.core.task.TaskExecutor"
        ]
      },
      {
        "name": "brokerChannelExecutor",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "brokerMessageConverter",
        "parameterTypes": []
      },
      {
        "name": "brokerMessagingTemplate",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.converter.CompositeMessageConverter"
        ]
      },
      {
        "name": "clientInboundChannel",
        "parameterTypes": [
          "org.springframework.core.task.TaskExecutor"
        ]
      },
      {
        "name": "clientInboundChannelExecutor",
        "parameterTypes": []
      },
      {
        "name": "clientOutboundChannel",
        "parameterTypes": [
          "org.springframework.core.task.TaskExecutor"
        ]
      },
      {
        "name": "clientOutboundChannelExecutor",
        "parameterTypes": []
      },
      {
        "name": "messageBrokerTaskScheduler",
        "parameterTypes": []
      },
      {
        "name": "simpAnnotationMethodMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.SimpMessagingTemplate",
          "org.springframework.messaging.converter.CompositeMessageConverter"
        ]
      },
      {
        "name": "simpleBrokerMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.user.UserDestinationResolver"
        ]
      },
      {
        "name": "stompBrokerRelayMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.user.UserDestinationMessageHandler",
          "org.springframework.messaging.MessageHandler",
          "org.springframework.messaging.simp.user.UserDestinationResolver"
        ]
      },
      {
        "name": "userDestinationMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.user.UserDestinationResolver"
        ]
      },
      {
        "name": "userDestinationResolver",
        "parameterTypes": [
          "org.springframework.messaging.simp.user.SimpUserRegistry",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "userRegistry",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "userRegistryMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.user.SimpUserRegistry",
          "org.springframework.messaging.simp.SimpMessagingTemplate",
          "org.springframework.scheduling.TaskScheduler"
        ]
      },
      {
        "name": "resolveDestination",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "getBeanName",
        "parameterTypes": []
      },
      {
        "name": "getLogger",
        "parameterTypes": []
      },
      {
        "name": "removeInterceptor",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeInterceptor",
        "parameterTypes": [
          "org.springframework.messaging.support.ChannelInterceptor"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "org.springframework.messaging.Message",
          "long"
        ]
      },
      {
        "name": "setLogger",
        "parameterTypes": [
          "org.apache.commons.logging.Log"
        ]
      },
      {
        "name": "getSubscribers",
        "parameterTypes": []
      },
      {
        "name": "hasSubscription",
        "parameterTypes": [
          "org.springframework.messaging.MessageHandler"
        ]
      },
      {
        "name": "subscribe",
        "parameterTypes": [
          "org.springframework.messaging.MessageHandler"
        ]
      },
      {
        "name": "unsubscribe",
        "parameterTypes": [
          "org.springframework.messaging.MessageHandler"
        ]
      },
      {
        "name": "addInterceptor",
        "parameterTypes": [
          "int",
          "org.springframework.messaging.support.ChannelInterceptor"
        ]
      },
      {
        "name": "addInterceptor",
        "parameterTypes": [
          "org.springframework.messaging.support.ChannelInterceptor"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.engine.spi.SessionFactoryImplementor"
        ]
      },
      {
        "name": "createNativeEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getBeanClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getBootstrapExecutor",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerInterface",
        "parameterTypes": []
      },
      {
        "name": "getJpaDialect",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": []
      },
      {
        "name": "getJpaVendorAdapter",
        "parameterTypes": []
      },
      {
        "name": "getNativeEntityManagerFactory",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceProvider",
        "parameterTypes": []
      },
      {
        "name": "setBootstrapExecutor",
        "parameterTypes": [
          "org.springframework.core.task.AsyncTaskExecutor"
        ]
      },
      {
        "name": "setEntityManagerFactoryInterface",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setEntityManagerInitializer",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "setEntityManagerInterface",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setJpaDialect",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaDialect"
        ]
      },
      {
        "name": "setJpaProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setJpaPropertyMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setJpaVendorAdapter",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter"
        ]
      },
      {
        "name": "setPersistenceProvider",
        "parameterTypes": [
          "jakarta.persistence.spi.PersistenceProvider"
        ]
      },
      {
        "name": "setPersistenceProviderClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "translateExceptionIfPossible",
        "parameterTypes": [
          "java.lang.RuntimeException"
        ]
      },
      {
        "name": "getResourceFactory",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitInfo",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitName",
        "parameterTypes": []
      },
      {
        "name": "setLoadTimeWeaver",
        "parameterTypes": [
          "org.springframework.instrument.classloading.LoadTimeWeaver"
        ]
      },
      {
        "name": "setPersistenceUnitName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getManagedClassNames",
        "parameterTypes": []
      },
      {
        "name": "getManagedPackages",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitRootUrl",
        "parameterTypes": []
      },
      {
        "name": "postProcessEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "postProcessEntityManagerFactory",
        "parameterTypes": [
          "jakarta.persistence.EntityManagerFactory"
        ]
      },
      {
        "name": "setDatabase",
        "parameterTypes": [
          "org.springframework.orm.jpa.vendor.Database"
        ]
      },
      {
        "name": "setGenerateDdl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowSql",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getEntityManagerFactoryInterface",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": [
          "jakarta.persistence.spi.PersistenceUnitInfo"
        ]
      },
      {
        "name": "getPersistenceProviderRootPackage",
        "parameterTypes": []
      },
      {
        "name": "marshal",
        "parameterTypes": [
          "java.lang.Object",
          "javax.xml.transform.Result"
        ]
      },
      {
        "name": "marshal",
        "parameterTypes": [
          "java.lang.Object",
          "javax.xml.transform.Result",
          "org.springframework.oxm.mime.MimeContainer"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.reflect.Type"
        ]
      },
      {
        "name": "unmarshal",
        "parameterTypes": [
          "javax.xml.transform.Source"
        ]
      },
      {
        "name": "unmarshal",
        "parameterTypes": [
          "javax.xml.transform.Source",
          "org.springframework.oxm.mime.MimeContainer"
        ]
      },
      {
        "name": "prefersShortLivedTasks",
        "parameterTypes": []
      },
      {
        "name": "schedule",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date",
          "long"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date",
          "long"
        ]
      },
      {
        "name": "newThread",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "initiateShutdown",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.event.ContextClosedEvent"
        ]
      },
      {
        "name": "setAcceptTasksAfterContextClose",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAwaitTerminationMillis",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setAwaitTerminationSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRejectedExecutionHandler",
        "parameterTypes": [
          "java.util.concurrent.RejectedExecutionHandler"
        ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWaitForTasksToCompleteOnShutdown",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      },
      {
        "name": "getClock",
        "parameterTypes": []
      },
      {
        "name": "schedule",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Instant"
        ]
      },
      {
        "name": "schedule",
        "parameterTypes": [
          "java.lang.Runnable",
          "org.springframework.scheduling.Trigger"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Duration"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Instant",
          "java.time.Duration"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Duration"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Instant",
          "java.time.Duration"
        ]
      },
      {
        "name": "getAccessDecisionManager",
        "parameterTypes": []
      },
      {
        "name": "getAfterInvocationManager",
        "parameterTypes": []
      },
      {
        "name": "getAuthenticationManager",
        "parameterTypes": []
      },
      {
        "name": "getRunAsManager",
        "parameterTypes": []
      },
      {
        "name": "isAlwaysReauthenticate",
        "parameterTypes": []
      },
      {
        "name": "isRejectPublicInvocations",
        "parameterTypes": []
      },
      {
        "name": "isValidateConfigAttributes",
        "parameterTypes": []
      },
      {
        "name": "setAccessDecisionManager",
        "parameterTypes": [
          "org.springframework.security.access.AccessDecisionManager"
        ]
      },
      {
        "name": "setAfterInvocationManager",
        "parameterTypes": [
          "org.springframework.security.access.intercept.AfterInvocationManager"
        ]
      },
      {
        "name": "setAlwaysReauthenticate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAuthenticationManager",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationManager"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "setPublishAuthorizationSuccess",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRejectPublicInvocations",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRunAsManager",
        "parameterTypes": [
          "org.springframework.security.access.intercept.RunAsManager"
        ]
      },
      {
        "name": "setSecurityContextHolderStrategy",
        "parameterTypes": [
          "org.springframework.security.core.context.SecurityContextHolderStrategy"
        ]
      },
      {
        "name": "setValidateConfigAttributes",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSecureObjectClass",
        "parameterTypes": []
      },
      {
        "name": "obtainSecurityMetadataSource",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.security.access.method.MethodSecurityMetadataSource",
          "java.lang.String"
        ]
      },
      {
        "name": "toMethodSecurityMetadataSource",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource"
        ]
      },
      {
        "name": "authenticate",
        "parameterTypes": [
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "publishAuthenticationFailure",
        "parameterTypes": [
          "org.springframework.security.core.AuthenticationException",
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "publishAuthenticationSuccess",
        "parameterTypes": [
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "getUserCache",
        "parameterTypes": []
      },
      {
        "name": "isForcePrincipalAsString",
        "parameterTypes": []
      },
      {
        "name": "isHideUserNotFoundExceptions",
        "parameterTypes": []
      },
      {
        "name": "setAuthoritiesMapper",
        "parameterTypes": [
          "org.springframework.security.core.authority.mapping.GrantedAuthoritiesMapper"
        ]
      },
      {
        "name": "setForcePrincipalAsString",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHideUserNotFoundExceptions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPostAuthenticationChecks",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetailsChecker"
        ]
      },
      {
        "name": "setPreAuthenticationChecks",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetailsChecker"
        ]
      },
      {
        "name": "setUserCache",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserCache"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      },
      {
        "name": "verify",
        "parameterTypes": [
          "java.util.function.Supplier",
          "java.lang.Object"
        ]
      },
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityConfigurer"
        ]
      },
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityConfigurerAdapter"
        ]
      },
      {
        "name": "getConfigurer",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getConfigurers",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getOrBuild",
        "parameterTypes": []
      },
      {
        "name": "getSharedObject",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getSharedObjects",
        "parameterTypes": []
      },
      {
        "name": "objectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor"
        ]
      },
      {
        "name": "removeConfigurer",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "removeConfigurers",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setSharedObject",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "with",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityConfigurerAdapter",
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "build",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      },
      {
        "name": "authenticationEventPublisher",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationEventPublisher"
        ]
      },
      {
        "name": "authenticationProvider",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationProvider"
        ]
      },
      {
        "name": "eraseCredentials",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultUserDetailsService",
        "parameterTypes": []
      },
      {
        "name": "isConfigured",
        "parameterTypes": []
      },
      {
        "name": "ldapAuthentication",
        "parameterTypes": []
      },
      {
        "name": "parentAuthenticationManager",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationManager"
        ]
      },
      {
        "name": "inMemoryAuthentication",
        "parameterTypes": []
      },
      {
        "name": "jdbcAuthentication",
        "parameterTypes": []
      },
      {
        "name": "userDetailsService",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetailsService"
        ]
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
        ]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
        ]
      },
      {
        "name": "postProcess",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "methodSecurityInterceptor",
        "parameterTypes": [
          "org.springframework.security.access.method.MethodSecurityMetadataSource"
        ]
      },
      {
        "name": "preInvocationAuthorizationAdvice",
        "parameterTypes": []
      },
      {
        "name": "setMethodSecurityExpressionHandler",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setObjectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "jakarta.servlet.Filter"
        ]
      },
      {
        "name": "addFilterAfter",
        "parameterTypes": [
          "jakarta.servlet.Filter",
          "java.lang.Class"
        ]
      },
      {
        "name": "addFilterBefore",
        "parameterTypes": [
          "jakarta.servlet.Filter",
          "java.lang.Class"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      },
      {
        "name": "getFilterChains",
        "parameterTypes": []
      },
      {
        "name": "getFilters",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilterChainDecorator",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy$FilterChainDecorator"
        ]
      },
      {
        "name": "setFilterChainValidator",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy$FilterChainValidator"
        ]
      },
      {
        "name": "setFirewall",
        "parameterTypes": [
          "org.springframework.security.web.firewall.HttpFirewall"
        ]
      },
      {
        "name": "setRequestRejectedHandler",
        "parameterTypes": [
          "org.springframework.security.web.firewall.RequestRejectedHandler"
        ]
      },
      {
        "name": "toFilter",
        "parameterTypes": []
      },
      {
        "name": "getFilters",
        "parameterTypes": []
      },
      {
        "name": "matches",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "setErrorPage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector"
        ]
      },
      {
        "name": "transform",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "isAllowed",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "isAllowed",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "check",
        "parameterTypes": [
          "java.util.function.Supplier",
          "java.lang.Object"
        ]
      },
      {
        "name": "logout",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "onAuthentication",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "setAlwaysCreateSession",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getFirewalledRequest",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "getFirewalledResponse",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "getExtraHiddenFields",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "processAction",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "processFormFieldValue",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "processUrl",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      },
      {
        "name": "extractUriTemplateVariables",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "matcher",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "org.springframework.transaction.TransactionExecutionListener"
        ]
      },
      {
        "name": "getTransactionAttribute",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Class"
        ]
      },
      {
        "name": "getTransactionAttributeSource",
        "parameterTypes": []
      },
      {
        "name": "getTransactionManager",
        "parameterTypes": []
      },
      {
        "name": "setTransactionAttributeSource",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      },
      {
        "name": "setTransactionAttributeSources",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource[]"
        ]
      },
      {
        "name": "setTransactionAttributes",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "org.springframework.transaction.TransactionManager"
        ]
      },
      {
        "name": "setTransactionManagerBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "commit",
        "parameterTypes": [
          "org.springframework.transaction.TransactionStatus"
        ]
      },
      {
        "name": "getTransaction",
        "parameterTypes": [
          "org.springframework.transaction.TransactionDefinition"
        ]
      },
      {
        "name": "getTransactionExecutionListeners",
        "parameterTypes": []
      },
      {
        "name": "rollback",
        "parameterTypes": [
          "org.springframework.transaction.TransactionStatus"
        ]
      },
      {
        "name": "setTransactionExecutionListeners",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "getIsolationLevel",
        "parameterTypes": []
      },
      {
        "name": "getPropagationBehavior",
        "parameterTypes": []
      },
      {
        "name": "executeWithoutResult",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.transaction.support.TransactionCallback"
        ]
      },
      {
        "name": "combine",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "extractPathWithinPattern",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "extractUriTemplateVariables",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getPatternComparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "match",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "matchStart",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createThread",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "getThreadGroup",
        "parameterTypes": []
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": []
      },
      {
        "name": "getThreadPriority",
        "parameterTypes": []
      },
      {
        "name": "isDaemon",
        "parameterTypes": []
      },
      {
        "name": "setDaemon",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setThreadGroup",
        "parameterTypes": [
          "java.lang.ThreadGroup"
        ]
      },
      {
        "name": "setThreadGroupName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadPriority",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "validateObject",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getClockProvider",
        "parameterTypes": []
      },
      {
        "name": "getConstraintValidatorFactory",
        "parameterTypes": []
      },
      {
        "name": "getMessageInterpolator",
        "parameterTypes": []
      },
      {
        "name": "getParameterNameProvider",
        "parameterTypes": []
      },
      {
        "name": "getTraversableResolver",
        "parameterTypes": []
      },
      {
        "name": "getValidationPropertyMap",
        "parameterTypes": []
      },
      {
        "name": "setConfigurationInitializer",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "setConstraintValidatorFactory",
        "parameterTypes": [
          "jakarta.validation.ConstraintValidatorFactory"
        ]
      },
      {
        "name": "setMappingLocations",
        "parameterTypes": [
          "org.springframework.core.io.Resource[]"
        ]
      },
      {
        "name": "setMessageInterpolator",
        "parameterTypes": [
          "jakarta.validation.MessageInterpolator"
        ]
      },
      {
        "name": "setParameterNameDiscoverer",
        "parameterTypes": [
          "org.springframework.core.ParameterNameDiscoverer"
        ]
      },
      {
        "name": "setProviderClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setTraversableResolver",
        "parameterTypes": [
          "jakarta.validation.TraversableResolver"
        ]
      },
      {
        "name": "setValidationMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "setValidationProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setValidationPropertyMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setValidationProviderResolver",
        "parameterTypes": [
          "jakarta.validation.ValidationProviderResolver"
        ]
      },
      {
        "name": "usingContext",
        "parameterTypes": []
      },
      {
        "name": "forExecutables",
        "parameterTypes": []
      },
      {
        "name": "getConstraintsForClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "validateProperty",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "getAllFileExtensions",
        "parameterTypes": []
      },
      {
        "name": "resolveFileExtensions",
        "parameterTypes": [
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "resolveMediaTypes",
        "parameterTypes": [
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "org.springframework.core.ParameterizedTypeReference",
          "java.util.Map"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "org.springframework.core.ParameterizedTypeReference",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.net.URI",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "java.lang.Class"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.net.URI",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "org.springframework.http.RequestEntity",
          "java.lang.Class"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "org.springframework.http.RequestEntity",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.web.client.RequestCallback",
          "org.springframework.web.client.ResponseExtractor",
          "java.util.Map"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.web.client.RequestCallback",
          "org.springframework.web.client.ResponseExtractor",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.net.URI",
          "org.springframework.http.HttpMethod",
          "org.springframework.web.client.RequestCallback",
          "org.springframework.web.client.ResponseExtractor"
        ]
      },
      {
        "name": "getForEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "getForEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "getForEntity",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Class"
        ]
      },
      {
        "name": "getForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "getForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "getForObject",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Class"
        ]
      },
      {
        "name": "headForHeaders",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "headForHeaders",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "headForHeaders",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "optionsForAllow",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "optionsForAllow",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "optionsForAllow",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "patchForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "patchForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "patchForObject",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "postForEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "postForEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "postForEntity",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "postForLocation",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "postForLocation",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "postForLocation",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object"
        ]
      },
      {
        "name": "postForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "postForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "postForObject",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object"
        ]
      },
      {
        "name": "isForceRequestEncoding",
        "parameterTypes": []
      },
      {
        "name": "isForceResponseEncoding",
        "parameterTypes": []
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForceEncoding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceRequestEncoding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceResponseEncoding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getEnvironment",
        "parameterTypes": []
      },
      {
        "name": "getFilterConfig",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": [
          "jakarta.servlet.FilterConfig"
        ]
      },
      {
        "name": "contributeMethodArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "java.lang.Object",
          "org.springframework.web.util.UriComponentsBuilder",
          "java.util.Map",
          "org.springframework.core.convert.ConversionService"
        ]
      },
      {
        "name": "cleanupMultipart",
        "parameterTypes": [
          "org.springframework.web.multipart.MultipartHttpServletRequest"
        ]
      },
      {
        "name": "isMultipart",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "resolveMultipart",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "getContextAttribute",
        "parameterTypes": []
      },
      {
        "name": "getContextClass",
        "parameterTypes": []
      },
      {
        "name": "getContextConfigLocation",
        "parameterTypes": []
      },
      {
        "name": "getContextId",
        "parameterTypes": []
      },
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "getServletContextAttributeName",
        "parameterTypes": []
      },
      {
        "name": "isEnableLoggingRequestDetails",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.event.ContextRefreshedEvent"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": []
      },
      {
        "name": "setContextAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setContextConfigLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextInitializerClasses",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextInitializers",
        "parameterTypes": [
          "org.springframework.context.ApplicationContextInitializer[]"
        ]
      },
      {
        "name": "setDispatchOptionsRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDispatchTraceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableLoggingRequestDetails",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublishContext",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPublishEvents",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setThreadContextInheritable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "afterCompletion",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "java.lang.Exception"
        ]
      },
      {
        "name": "postHandle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "org.springframework.web.servlet.ModelAndView"
        ]
      },
      {
        "name": "beanNameHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "defaultServletHandlerMapping",
        "parameterTypes": []
      },
      {
        "name": "flashMapManager",
        "parameterTypes": []
      },
      {
        "name": "handlerExceptionResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": []
      },
      {
        "name": "httpRequestHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "localeResolver",
        "parameterTypes": []
      },
      {
        "name": "mvcContentNegotiationManager",
        "parameterTypes": []
      },
      {
        "name": "mvcConversionService",
        "parameterTypes": []
      },
      {
        "name": "mvcHandlerMappingIntrospector",
        "parameterTypes": []
      },
      {
        "name": "mvcPathMatcher",
        "parameterTypes": []
      },
      {
        "name": "mvcPatternParser",
        "parameterTypes": []
      },
      {
        "name": "mvcResourceUrlProvider",
        "parameterTypes": []
      },
      {
        "name": "mvcUriComponentsContributor",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
        ]
      },
      {
        "name": "mvcUrlPathHelper",
        "parameterTypes": []
      },
      {
        "name": "mvcValidator",
        "parameterTypes": []
      },
      {
        "name": "mvcViewResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "simpleControllerHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "themeResolver",
        "parameterTypes": []
      },
      {
        "name": "viewControllerHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "viewNameTranslator",
        "parameterTypes": []
      },
      {
        "name": "addCorsMappings",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.CorsRegistry"
        ]
      },
      {
        "name": "addInterceptors",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.InterceptorRegistry"
        ]
      },
      {
        "name": "addResourceHandlers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
        ]
      },
      {
        "name": "addReturnValueHandlers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addViewControllers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ViewControllerRegistry"
        ]
      },
      {
        "name": "configureAsyncSupport",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"
        ]
      },
      {
        "name": "configureContentNegotiation",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"
        ]
      },
      {
        "name": "configureDefaultServletHandling",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"
        ]
      },
      {
        "name": "configureHandlerExceptionResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "configurePathMatch",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.PathMatchConfigurer"
        ]
      },
      {
        "name": "configureViewResolvers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ViewResolverRegistry"
        ]
      },
      {
        "name": "extendHandlerExceptionResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getMessageCodesResolver",
        "parameterTypes": []
      },
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "match",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      },
      {
        "name": "initApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "setDetectHandlersInAncestorContexts",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCorsConfigurationSource",
        "parameterTypes": []
      },
      {
        "name": "getCorsProcessor",
        "parameterTypes": []
      },
      {
        "name": "getDefaultHandler",
        "parameterTypes": []
      },
      {
        "name": "getHandler",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "getPatternParser",
        "parameterTypes": []
      },
      {
        "name": "getUrlPathHelper",
        "parameterTypes": []
      },
      {
        "name": "setAlwaysUseFullPath",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCorsConfigurationSource",
        "parameterTypes": [
          "org.springframework.web.cors.CorsConfigurationSource"
        ]
      },
      {
        "name": "setCorsConfigurations",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setCorsProcessor",
        "parameterTypes": [
          "org.springframework.web.cors.CorsProcessor"
        ]
      },
      {
        "name": "setDefaultHandler",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setInterceptors",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      {
        "name": "setRemoveSemicolonContent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlDecode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlPathHelper",
        "parameterTypes": [
          "org.springframework.web.util.UrlPathHelper"
        ]
      },
      {
        "name": "usesPathPatterns",
        "parameterTypes": []
      },
      {
        "name": "getDirectPaths",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getHandlerMethodsForMappingName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMappingPathPatterns",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getMatchingMapping",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "getNamingStrategy",
        "parameterTypes": []
      },
      {
        "name": "handleMatch",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "setDetectHandlerMethodsInAncestorContexts",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHandlerMethodMappingNamingStrategy",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"
        ]
      },
      {
        "name": "unregisterMapping",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "handle",
        "parameterTypes": []
      },
      {
        "name": "getRootHandler",
        "parameterTypes": []
      },
      {
        "name": "setLazyInitHandlers",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRootHandler",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setUseTrailingSlashMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "useTrailingSlashMatch",
        "parameterTypes": []
      },
      {
        "name": "getCorsConfiguration",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "getUrlMap",
        "parameterTypes": []
      },
      {
        "name": "setMappings",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setUrlMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDefaultLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "resolveLocale",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.util.Locale"
        ]
      },
      {
        "name": "getBuilderConfiguration",
        "parameterTypes": []
      },
      {
        "name": "getContentNegotiationManager",
        "parameterTypes": []
      },
      {
        "name": "getFileExtensions",
        "parameterTypes": []
      },
      {
        "name": "getPathPrefixes",
        "parameterTypes": []
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "org.springframework.web.servlet.mvc.method.RequestMappingInfo",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "setContentNegotiationManager",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "setPathPrefixes",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setUseRegisteredSuffixPatternMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseSuffixPatternMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "useRegisteredSuffixPatternMatch",
        "parameterTypes": []
      },
      {
        "name": "useSuffixPatternMatch",
        "parameterTypes": []
      },
      {
        "name": "getFlashMapTimeout",
        "parameterTypes": []
      },
      {
        "name": "retrieveAndUpdate",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "saveOutputFlashMap",
        "parameterTypes": [
          "org.springframework.web.servlet.FlashMap",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "setFlashMapTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getDefaultThemeName",
        "parameterTypes": []
      },
      {
        "name": "setDefaultThemeName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveThemeName",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "setThemeName",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.String"
        ]
      },
      {
        "name": "getCacheFilter",
        "parameterTypes": []
      },
      {
        "name": "getCacheLimit",
        "parameterTypes": []
      },
      {
        "name": "isCache",
        "parameterTypes": []
      },
      {
        "name": "isCacheUnresolved",
        "parameterTypes": []
      },
      {
        "name": "removeFromCache",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "resolveViewName",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "setCacheFilter",
        "parameterTypes": [
          "org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"
        ]
      },
      {
        "name": "setCacheLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setCacheUnresolved",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getViewName",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "stompWebSocketHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketHandler",
          "org.springframework.scheduling.TaskScheduler",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "subProtocolWebSocketHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "webSocketMessageBrokerStats",
        "parameterTypes": [
          "org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler",
          "org.springframework.web.socket.WebSocketHandler",
          "org.springframework.core.task.TaskExecutor",
          "org.springframework.core.task.TaskExecutor",
          "org.springframework.scheduling.TaskScheduler"
        ]
      },
      {
        "name": "configureWebSocketTransport",
        "parameterTypes": [
          "org.springframework.web.socket.config.annotation.WebSocketTransportRegistration"
        ]
      },
      {
        "name": "findSubscriptions",
        "parameterTypes": [
          "org.springframework.messaging.simp.user.SimpSubscriptionMatcher"
        ]
      },
      {
        "name": "getUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserCount",
        "parameterTypes": []
      },
      {
        "name": "afterConnectionClosed",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketSession",
          "org.springframework.web.socket.CloseStatus"
        ]
      },
      {
        "name": "afterConnectionEstablished",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketSession"
        ]
      },
      {
        "name": "getSubProtocols",
        "parameterTypes": []
      },
      {
        "name": "handleMessage",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketSession",
          "org.springframework.web.socket.WebSocketMessage"
        ]
      },
      {
        "name": "handleTransportError",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketSession",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "supportsPartialMessages",
        "parameterTypes": []
      },
      {
        "name": "addDialect",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.dialect.IDialect"
        ]
      },
      {
        "name": "addDialect",
        "parameterTypes": [
          "org.thymeleaf.dialect.IDialect"
        ]
      },
      {
        "name": "addLinkBuilder",
        "parameterTypes": [
          "org.thymeleaf.linkbuilder.ILinkBuilder"
        ]
      },
      {
        "name": "addMessageResolver",
        "parameterTypes": [
          "org.thymeleaf.messageresolver.IMessageResolver"
        ]
      },
      {
        "name": "addTemplateResolver",
        "parameterTypes": [
          "org.thymeleaf.templateresolver.ITemplateResolver"
        ]
      },
      {
        "name": "clearDialects",
        "parameterTypes": []
      },
      {
        "name": "clearTemplateCache",
        "parameterTypes": []
      },
      {
        "name": "clearTemplateCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConfiguration",
        "parameterTypes": []
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "org.thymeleaf.context.IContext",
          "java.io.Writer"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.context.IContext",
          "java.io.Writer"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "org.thymeleaf.TemplateSpec",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "org.thymeleaf.TemplateSpec",
          "org.thymeleaf.context.IContext",
          "java.io.Writer"
        ]
      },
      {
        "name": "processThrottled",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "processThrottled",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "processThrottled",
        "parameterTypes": [
          "org.thymeleaf.TemplateSpec",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "setAdditionalDialects",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCacheManager",
        "parameterTypes": [
          "org.thymeleaf.cache.ICacheManager"
        ]
      },
      {
        "name": "setDecoupledTemplateLogicResolver",
        "parameterTypes": [
          "org.thymeleaf.templateparser.markup.decoupled.IDecoupledTemplateLogicResolver"
        ]
      },
      {
        "name": "setDialect",
        "parameterTypes": [
          "org.thymeleaf.dialect.IDialect"
        ]
      },
      {
        "name": "setDialects",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDialectsByPrefix",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setEngineContextFactory",
        "parameterTypes": [
          "org.thymeleaf.context.IEngineContextFactory"
        ]
      },
      {
        "name": "setLinkBuilder",
        "parameterTypes": [
          "org.thymeleaf.linkbuilder.ILinkBuilder"
        ]
      },
      {
        "name": "setLinkBuilders",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setMessageResolver",
        "parameterTypes": [
          "org.thymeleaf.messageresolver.IMessageResolver"
        ]
      },
      {
        "name": "setMessageResolvers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTemplateResolver",
        "parameterTypes": [
          "org.thymeleaf.templateresolver.ITemplateResolver"
        ]
      },
      {
        "name": "setTemplateResolvers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTemplateEngineMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "addStaticVariable",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "getCharacterEncoding",
        "parameterTypes": []
      },
      {
        "name": "getContentType",
        "parameterTypes": []
      },
      {
        "name": "getForceContentType",
        "parameterTypes": []
      },
      {
        "name": "getProducePartialOutputWhileProcessing",
        "parameterTypes": []
      },
      {
        "name": "getStaticVariables",
        "parameterTypes": []
      },
      {
        "name": "getTemplateName",
        "parameterTypes": []
      },
      {
        "name": "setCharacterEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContentType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForceContentType",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setProducePartialOutputWhileProcessing",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStaticVariables",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setTemplateName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "render",
        "parameterTypes": [
          "java.util.Map",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "resolveTemplate",
        "parameterTypes": [
          "org.thymeleaf.IEngineConfiguration",
          "java.lang.String",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "setCheckExistence",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setResolvablePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUseDecoupledLogic",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getReflectionFactory",
        "parameterTypes": []
      },
      {
        "name": "newConstructorForSerialization",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.reflect.Constructor"
        ]
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Object",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.security.SecureRandomParameters"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ],
    "queryAllPublicMethods": true,
    "fields": [
      {
        "name": "ANCHOR_EMPTY_HREF_NO_FILENAME"
      },
      {
        "name": "ANCHOR_SEND_PING_REQUEST"
      },
      {
        "name": "CONTENT_SECURITY_POLICY_IGNORED"
      },
      {
        "name": "CSS_BACKGROUND_INITIAL"
      },
      {
        "name": "CSS_BACKGROUND_RGBA"
      },
      {
        "name": "CSS_CSSTEXT_IE_STYLE"
      },
      {
        "name": "CSS_DIALOG_NONE"
      },
      {
        "name": "CSS_DISPLAY_BLOCK"
      },
      {
        "name": "CSS_DISPLAY_BLOCK2"
      },
      {
        "name": "CSS_LENGTH_INITIAL"
      },
      {
        "name": "CSS_NOSCRIPT_DISPLAY_INLINE"
      },
      {
        "name": "CSS_OUTLINE_WIDTH_UNIT_NOT_REQUIRED"
      },
      {
        "name": "CSS_PROGRESS_DISPLAY_INLINE"
      },
      {
        "name": "CSS_PSEUDO_SELECTOR_MS_PLACEHHOLDER"
      },
      {
        "name": "CSS_PSEUDO_SELECTOR_PLACEHOLDER_SHOWN"
      },
      {
        "name": "CSS_RP_DISPLAY_NONE"
      },
      {
        "name": "CSS_RT_DISPLAY_RUBY_TEXT_ALWAYS"
      },
      {
        "name": "CSS_RUBY_DISPLAY_INLINE"
      },
      {
        "name": "CSS_SET_NULL_THROWS"
      },
      {
        "name": "CSS_STYLE_PROP_DISCONNECTED_IS_EMPTY"
      },
      {
        "name": "CSS_STYLE_PROP_FONT_DISCONNECTED_IS_EMPTY"
      },
      {
        "name": "CSS_VERTICAL_ALIGN_SUPPORTS_AUTO"
      },
      {
        "name": "CSS_ZINDEX_TYPE_INTEGER"
      },
      {
        "name": "DIALOGWINDOW_REFERER"
      },
      {
        "name": "DOM_NORMALIZE_REMOVE_CHILDREN"
      },
      {
        "name": "EVENT_BEFORE_UNLOAD_RETURN_VALUE_IS_HTML5_LIKE"
      },
      {
        "name": "EVENT_FOCUS_FOCUS_IN_BLUR_OUT"
      },
      {
        "name": "EVENT_FOCUS_IN_FOCUS_OUT_BLUR"
      },
      {
        "name": "EVENT_FOCUS_ON_LOAD"
      },
      {
        "name": "EVENT_HANDLER_NULL_RETURN_IS_MEANINGFUL"
      },
      {
        "name": "EVENT_MOUSE_ON_DISABLED"
      },
      {
        "name": "EVENT_ONANIMATION_DOCUMENT_CREATE_NOT_SUPPORTED"
      },
      {
        "name": "EVENT_ONCHANGE_AFTER_ONCLICK"
      },
      {
        "name": "EVENT_ONCLICK_FOR_SELECT_ONLY"
      },
      {
        "name": "EVENT_ONCLICK_POINTEREVENT_DETAIL_0"
      },
      {
        "name": "EVENT_ONCLICK_USES_POINTEREVENT"
      },
      {
        "name": "EVENT_ONCLOSE_DOCUMENT_CREATE_NOT_SUPPORTED"
      },
      {
        "name": "EVENT_ONDOUBLECLICK_USES_POINTEREVENT"
      },
      {
        "name": "EVENT_ONLOAD_INTERNAL_JAVASCRIPT"
      },
      {
        "name": "EVENT_ONMESSAGE_DEFAULT_DATA_NULL"
      },
      {
        "name": "EVENT_ONMOUSEDOWN_FOR_SELECT_OPTION_TRIGGERS_ADDITIONAL_DOWN_FOR_SELECT"
      },
      {
        "name": "EVENT_ONMOUSEDOWN_NOT_FOR_SELECT_OPTION"
      },
      {
        "name": "EVENT_ONMOUSEOVER_FOR_DISABLED_OPTION"
      },
      {
        "name": "EVENT_ONMOUSEOVER_NEVER_FOR_SELECT_OPTION"
      },
      {
        "name": "EVENT_ONMOUSEUP_FOR_SELECT_OPTION_TRIGGERS_ADDITIONAL_UP_FOR_SELECT"
      },
      {
        "name": "EVENT_ONMOUSEUP_NOT_FOR_SELECT_OPTION"
      },
      {
        "name": "EVENT_ONPOPSTATE_DOCUMENT_CREATE_NOT_SUPPORTED"
      },
      {
        "name": "EVENT_TYPE_BEFOREUNLOADEVENT"
      },
      {
        "name": "EVENT_TYPE_HASHCHANGEEVENT"
      },
      {
        "name": "EVENT_TYPE_MOUSEWHEELEVENT"
      },
      {
        "name": "EVENT_TYPE_POINTEREVENT"
      },
      {
        "name": "EVENT_TYPE_PROGRESSEVENT"
      },
      {
        "name": "EVENT_TYPE_WHEELEVENT"
      },
      {
        "name": "FOCUS_BODY_ELEMENT_AT_START"
      },
      {
        "name": "FORMFIELD_REACHABLE_BY_NEW_NAMES"
      },
      {
        "name": "FORMFIELD_REACHABLE_BY_ORIGINAL_NAME"
      },
      {
        "name": "FORM_FORM_ATTRIBUTE_SUPPORTED"
      },
      {
        "name": "FORM_PARAMETRS_NOT_SUPPORTED_FOR_IMAGE"
      },
      {
        "name": "FORM_SUBMISSION_DOWNLOWDS_ALSO_IF_ONLY_HASH_CHANGED"
      },
      {
        "name": "FORM_SUBMISSION_FORM_ATTRIBUTE"
      },
      {
        "name": "FORM_SUBMISSION_HEADER_CACHE_CONTROL_MAX_AGE"
      },
      {
        "name": "FORM_SUBMISSION_HEADER_CACHE_CONTROL_NO_CACHE"
      },
      {
        "name": "FORM_SUBMISSION_HEADER_ORIGIN"
      },
      {
        "name": "FORM_SUBMISSION_URL_WITHOUT_HASH"
      },
      {
        "name": "FRAME_LOCATION_ABOUT_BLANK_FOR_ABOUT_SCHEME"
      },
      {
        "name": "HTMLABBREVIATED"
      },
      {
        "name": "HTMLALLCOLLECTION_DO_NOT_CONVERT_STRINGS_TO_NUMBER"
      },
      {
        "name": "HTMLALLCOLLECTION_INTEGER_INDEX"
      },
      {
        "name": "HTMLALLCOLLECTION_NO_COLLECTION_FOR_MANY_HITS"
      },
      {
        "name": "HTMLALLCOLLECTION_NULL_IF_NAMED_ITEM_NOT_FOUND"
      },
      {
        "name": "HTMLBASEFONT_END_TAG_FORBIDDEN"
      },
      {
        "name": "HTMLBASE_HREF_DEFAULT_EMPTY"
      },
      {
        "name": "HTMLBUTTON_SUBMIT_IGNORES_DISABLED_STATE"
      },
      {
        "name": "HTMLBUTTON_WILL_VALIDATE_IGNORES_READONLY"
      },
      {
        "name": "HTMLCOLLECTION_ITEM_FUNCT_SUPPORTS_DOUBLE_INDEX_ALSO"
      },
      {
        "name": "HTMLCOLLECTION_ITEM_SUPPORTS_DOUBLE_INDEX_ALSO"
      },
      {
        "name": "HTMLCOLLECTION_ITEM_SUPPORTS_ID_SEARCH_ALSO"
      },
      {
        "name": "HTMLCOLLECTION_NAMED_ITEM_ID_FIRST"
      },
      {
        "name": "HTMLCOLLECTION_NULL_IF_NOT_FOUND"
      },
      {
        "name": "HTMLCOLLECTION_SUPPORTS_PARANTHESES"
      },
      {
        "name": "HTMLDOCUMENT_CHARSET_LOWERCASE"
      },
      {
        "name": "HTMLDOCUMENT_COLOR"
      },
      {
        "name": "HTMLDOCUMENT_COOKIES_IGNORE_BLANK"
      },
      {
        "name": "HTMLDOCUMENT_ELEMENTS_BY_NAME_EMPTY"
      },
      {
        "name": "HTMLDOCUMENT_FUNCTION_DETACHED"
      },
      {
        "name": "HTMLDOCUMENT_GET_ALSO_FRAMES"
      },
      {
        "name": "HTMLDOCUMENT_GET_FOR_ID_AND_OR_NAME"
      },
      {
        "name": "HTMLDOCUMENT_GET_PREFERS_STANDARD_FUNCTIONS"
      },
      {
        "name": "HTMLELEMENT_ALIGN_INVALID"
      },
      {
        "name": "HTMLELEMENT_DETACH_ACTIVE_TRIGGERS_NO_KEYUP_EVENT"
      },
      {
        "name": "HTMLELEMENT_REMOVE_ACTIVE_TRIGGERS_BLUR_EVENT"
      },
      {
        "name": "HTMLIMAGE_BLANK_SRC_AS_EMPTY"
      },
      {
        "name": "HTMLIMAGE_EMPTY_SRC_DISPLAY_FALSE"
      },
      {
        "name": "HTMLIMAGE_HTMLELEMENT"
      },
      {
        "name": "HTMLIMAGE_HTMLUNKNOWNELEMENT"
      },
      {
        "name": "HTMLIMAGE_INVISIBLE_NO_SRC"
      },
      {
        "name": "HTMLIMAGE_NAME_VALUE_PARAMS"
      },
      {
        "name": "HTMLINPUT_ATTRIBUTE_MIN_MAX_LENGTH_SUPPORTED"
      },
      {
        "name": "HTMLINPUT_CHECKBOX_DOES_NOT_CLICK_SURROUNDING_ANCHOR"
      },
      {
        "name": "HTMLINPUT_DOES_NOT_CLICK_SURROUNDING_ANCHOR"
      },
      {
        "name": "HTMLINPUT_FILES_UNDEFINED"
      },
      {
        "name": "HTMLINPUT_FILE_SELECTION_START_END_NULL"
      },
      {
        "name": "HTMLINPUT_TYPE_COLOR_NOT_SUPPORTED"
      },
      {
        "name": "HTMLINPUT_TYPE_DATETIME_LOCAL_SUPPORTED"
      },
      {
        "name": "HTMLINPUT_TYPE_DATETIME_SUPPORTED"
      },
      {
        "name": "HTMLINPUT_TYPE_IMAGE_IGNORES_CUSTOM_VALIDITY"
      },
      {
        "name": "HTMLINPUT_TYPE_MONTH_SUPPORTED"
      },
      {
        "name": "HTMLINPUT_TYPE_WEEK_SUPPORTED"
      },
      {
        "name": "HTMLKEYGEN_END_TAG_FORBIDDEN"
      },
      {
        "name": "HTMLLINK_CHECK_TYPE_FOR_STYLESHEET"
      },
      {
        "name": "HTMLOPTION_PREVENT_DISABLED"
      },
      {
        "name": "HTMLOPTION_REMOVE_SELECTED_ATTRIB_DESELECTS"
      },
      {
        "name": "HTMLSCRIPT_TRIM_TYPE"
      },
      {
        "name": "HTMLSELECT_WILL_VALIDATE_ALWAYS_TRUE"
      },
      {
        "name": "HTMLSELECT_WILL_VALIDATE_IGNORES_READONLY"
      },
      {
        "name": "HTMLTEXTAREA_SET_DEFAULT_VALUE_UPDATES_VALUE"
      },
      {
        "name": "HTMLTEXTAREA_USE_ALL_TEXT_CHILDREN"
      },
      {
        "name": "HTMLTEXTAREA_WILL_VALIDATE_IGNORES_READONLY"
      },
      {
        "name": "HTMLTRACK_END_TAG_FORBIDDEN"
      },
      {
        "name": "HTML_ATTRIBUTE_LOWER_CASE"
      },
      {
        "name": "HTML_COLOR_EXPAND_ZERO"
      },
      {
        "name": "HTML_COLOR_RESTRICT"
      },
      {
        "name": "HTML_COLOR_TO_LOWER"
      },
      {
        "name": "HTML_COMMAND_TAG"
      },
      {
        "name": "HTML_ISINDEX_TAG"
      },
      {
        "name": "HTML_MAIN_TAG"
      },
      {
        "name": "HTML_OBJECT_CLASSID"
      },
      {
        "name": "HTTP_COOKIE_EXTENDED_DATE_PATTERNS_1"
      },
      {
        "name": "HTTP_COOKIE_EXTENDED_DATE_PATTERNS_2"
      },
      {
        "name": "HTTP_COOKIE_EXTRACT_PATH_FROM_LOCATION"
      },
      {
        "name": "HTTP_COOKIE_REMOVE_DOT_FROM_ROOT_DOMAINS"
      },
      {
        "name": "HTTP_COOKIE_START_DATE_1970"
      },
      {
        "name": "HTTP_HEADER_CH_UA"
      },
      {
        "name": "HTTP_HEADER_SEC_FETCH"
      },
      {
        "name": "HTTP_HEADER_UPGRADE_INSECURE_REQUEST"
      },
      {
        "name": "HTTP_REDIRECT_WITHOUT_HASH"
      },
      {
        "name": "JS_ALIGN_ACCEPTS_ARBITRARY_VALUES"
      },
      {
        "name": "JS_ALIGN_FOR_INPUT_IGNORES_VALUES"
      },
      {
        "name": "JS_ANCHORS_REQUIRES_NAME_OR_ID"
      },
      {
        "name": "JS_ANCHOR_HOSTNAME_IGNORE_BLANK"
      },
      {
        "name": "JS_ANCHOR_PATHNAME_DETECT_WIN_DRIVES_URL"
      },
      {
        "name": "JS_ANCHOR_PATHNAME_NONE_FOR_BROKEN_URL"
      },
      {
        "name": "JS_ANCHOR_PATHNAME_NONE_FOR_NONE_HTTP_URL"
      },
      {
        "name": "JS_ANCHOR_PATHNAME_PREFIX_WIN_DRIVES_URL"
      },
      {
        "name": "JS_ANCHOR_PROTOCOL_COLON_FOR_BROKEN_URL"
      },
      {
        "name": "JS_ANCHOR_PROTOCOL_COLON_UPPER_CASE_DRIVE_LETTERS"
      },
      {
        "name": "JS_ANCHOR_PROTOCOL_HTTP_FOR_BROKEN_URL"
      },
      {
        "name": "JS_ANCHOR_PROTOCOL_INVALID_THROWS"
      },
      {
        "name": "JS_API_FETCH"
      },
      {
        "name": "JS_API_PROXY"
      },
      {
        "name": "JS_AREA_WITHOUT_HREF_FOCUSABLE"
      },
      {
        "name": "JS_ARGUMENTS_READ_ONLY_ACCESSED_FROM_FUNCTION"
      },
      {
        "name": "JS_ARRAY_FROM"
      },
      {
        "name": "JS_ATTR_FIRST_LAST_CHILD_RETURNS_NULL"
      },
      {
        "name": "JS_AUDIO_PROCESSING_EVENT_CTOR"
      },
      {
        "name": "JS_BGSOUND_AS_UNKNOWN"
      },
      {
        "name": "JS_BLOB_CONTENT_TYPE_CASE_SENSITIVE"
      },
      {
        "name": "JS_BLOB_EVENT_REQUIRES_DATA"
      },
      {
        "name": "JS_BODY_MARGINS_8"
      },
      {
        "name": "JS_BOUNDINGCLIENTRECT_THROWS_IF_DISCONNECTED"
      },
      {
        "name": "JS_CANVAS_DATA_URL_CHROME_PNG"
      },
      {
        "name": "JS_CANVAS_DATA_URL_IE_PNG"
      },
      {
        "name": "JS_CLEAR_RESTRICT"
      },
      {
        "name": "JS_CLIENTHEIGHT_INPUT_17"
      },
      {
        "name": "JS_CLIENTHEIGHT_INPUT_18"
      },
      {
        "name": "JS_CLIENTHEIGHT_RADIO_CHECKBOX_10"
      },
      {
        "name": "JS_CLIENTRECTLIST_THROWS_IF_ITEM_NOT_FOUND"
      },
      {
        "name": "JS_CLIENTWIDTH_INPUT_TEXT_143"
      },
      {
        "name": "JS_CLIENTWIDTH_INPUT_TEXT_173"
      },
      {
        "name": "JS_CLIENTWIDTH_RADIO_CHECKBOX_10"
      },
      {
        "name": "JS_CONSOLE_TIMESTAMP"
      },
      {
        "name": "JS_CSSRULELIST_ENUM_ITEM_LENGTH"
      },
      {
        "name": "JS_CSS_OBJECT"
      },
      {
        "name": "JS_DATE_LOCALE_DATE_SHORT"
      },
      {
        "name": "JS_DATE_WITH_LEFT_TO_RIGHT_MARK"
      },
      {
        "name": "JS_DOCTYPE_ENTITIES_NULL"
      },
      {
        "name": "JS_DOCTYPE_NOTATIONS_NULL"
      },
      {
        "name": "JS_DOCUMENT_CREATE_ATTRUBUTE_LOWER_CASE"
      },
      {
        "name": "JS_DOCUMENT_DESIGN_MODE_INHERIT"
      },
      {
        "name": "JS_DOCUMENT_FORMS_FUNCTION_SUPPORTED"
      },
      {
        "name": "JS_DOCUMENT_OPEN_OVERWRITES_ABOUT_BLANK_LOCATION"
      },
      {
        "name": "JS_DOCUMENT_SELECTION_RANGE_COUNT"
      },
      {
        "name": "JS_DOCUMENT_SETTING_DOMAIN_THROWS_FOR_ABOUT_BLANK"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_CREATE_HTMLDOCOMENT_REQUIRES_TITLE"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CORE_3"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS2_1"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS2_3"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS3_1"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS3_2"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS3_3"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS_1"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS_2"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS_3"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_EVENTS_1"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_KEYBOARDEVENTS"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_LS"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_MUTATIONNAMEEVENTS"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_RANGE_1"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_RANGE_3"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_STYLESHEETS"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_SVG_BASICSTRUCTURE_1_2"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_TEXTEVENTS"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_UIEVENTS_2"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_VALIDATION"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_VIEWS_1"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_VIEWS_3"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_XPATH"
      },
      {
        "name": "JS_DOMPARSER_EMPTY_STRING_IS_ERROR"
      },
      {
        "name": "JS_DOMPARSER_EXCEPTION_ON_ERROR"
      },
      {
        "name": "JS_DOMPARSER_PARSERERROR_ON_ERROR"
      },
      {
        "name": "JS_DOMTOKENLIST_CONTAINS_RETURNS_FALSE_FOR_BLANK"
      },
      {
        "name": "JS_DOMTOKENLIST_ENHANCED_WHITESPACE_CHARS"
      },
      {
        "name": "JS_DOMTOKENLIST_GET_NULL_IF_OUTSIDE"
      },
      {
        "name": "JS_DOMTOKENLIST_LENGTH_IGNORES_DUPLICATES"
      },
      {
        "name": "JS_DOMTOKENLIST_REMOVE_WHITESPACE_CHARS_ON_ADD"
      },
      {
        "name": "JS_DOMTOKENLIST_REMOVE_WHITESPACE_CHARS_ON_REMOVE"
      },
      {
        "name": "JS_DOM_CDATA_DELETE_THROWS_NEGATIVE_COUNT"
      },
      {
        "name": "JS_ELEMENT_GET_ATTRIBUTE_RETURNS_EMPTY"
      },
      {
        "name": "JS_ERROR_CAPTURE_STACK_TRACE"
      },
      {
        "name": "JS_ERROR_STACK_TRACE_LIMIT"
      },
      {
        "name": "JS_EVENT_INPUT_CTOR_INPUTTYPE"
      },
      {
        "name": "JS_EVENT_KEYBOARD_CTOR_WHICH"
      },
      {
        "name": "JS_EVENT_LOAD_SUPPRESSED_BY_CONTENT_SECURIRY_POLICY"
      },
      {
        "name": "JS_FILEREADER_CONTENT_TYPE"
      },
      {
        "name": "JS_FILEREADER_EMPTY_NULL"
      },
      {
        "name": "JS_FORM_ACTION_EXPANDURL_NOT_DEFINED"
      },
      {
        "name": "JS_FORM_DATA_CONTENT_TYPE_PLAIN_IF_FILE_TYPE_UNKNOWN"
      },
      {
        "name": "JS_FORM_DATA_ITERATOR_SIMPLE_NAME"
      },
      {
        "name": "JS_FORM_DISPATCHEVENT_SUBMITS"
      },
      {
        "name": "JS_FORM_REJECT_INVALID_ENCODING"
      },
      {
        "name": "JS_FORM_SUBMIT_FORCES_DOWNLOAD"
      },
      {
        "name": "JS_FORM_USABLE_AS_FUNCTION"
      },
      {
        "name": "JS_FRAME_CONTENT_DOCUMENT_ACCESS_DENIED_THROWS"
      },
      {
        "name": "JS_GLOBAL_THIS"
      },
      {
        "name": "JS_GROUPINGRULE_INSERTRULE_INDEX_OPTIONAL"
      },
      {
        "name": "JS_HTML_HYPHEN_ELEMENT_CLASS_NAME"
      },
      {
        "name": "JS_HTML_OBJECT_VALIDITYSTATE_ISVALID_IGNORES_CUSTOM_ERROR"
      },
      {
        "name": "JS_HTML_RUBY_ELEMENT_CLASS_NAME"
      },
      {
        "name": "JS_IFRAME_ALWAYS_EXECUTE_ONLOAD"
      },
      {
        "name": "JS_IGNORES_LAST_LINE_CONTAINING_UNCOMMENTED"
      },
      {
        "name": "JS_IGNORES_UTF8_BOM_SOMETIMES"
      },
      {
        "name": "JS_IMAGE_COMPLETE_RETURNS_TRUE_FOR_NO_REQUEST"
      },
      {
        "name": "JS_IMAGE_WIDTH_HEIGHT_EMPTY_SOURCE_RETURNS_0x0"
      },
      {
        "name": "JS_IMAGE_WIDTH_HEIGHT_RETURNS_16x16_0x0"
      },
      {
        "name": "JS_IMAGE_WIDTH_HEIGHT_RETURNS_24x24_0x0"
      },
      {
        "name": "JS_IMAGE_WIDTH_HEIGHT_RETURNS_28x30_28x30"
      },
      {
        "name": "JS_INNER_HTML_ADD_CHILD_FOR_NULL_VALUE"
      },
      {
        "name": "JS_INNER_HTML_LF"
      },
      {
        "name": "JS_INNER_TEXT_SCRIPT"
      },
      {
        "name": "JS_INNER_TEXT_SVG_NL"
      },
      {
        "name": "JS_INNER_TEXT_SVG_TITLE"
      },
      {
        "name": "JS_INNER_TEXT_VALUE_NULL"
      },
      {
        "name": "JS_INPUT_IGNORE_NEGATIVE_SELECTION_START"
      },
      {
        "name": "JS_INPUT_NUMBER_ACCEPT_ALL"
      },
      {
        "name": "JS_INPUT_NUMBER_DOT_AT_END_IS_DOUBLE"
      },
      {
        "name": "JS_INPUT_NUMBER_SELECTION_START_END_NULL"
      },
      {
        "name": "JS_INPUT_SET_TYPE_LOWERCASE"
      },
      {
        "name": "JS_INPUT_SET_UNSUPORTED_TYPE_EXCEPTION"
      },
      {
        "name": "JS_INPUT_SET_VALUE_DATE_SUPPORTED"
      },
      {
        "name": "JS_INPUT_SET_VALUE_EMAIL_TRIMMED"
      },
      {
        "name": "JS_INPUT_SET_VALUE_MOVE_SELECTION_TO_START"
      },
      {
        "name": "JS_INPUT_SET_VALUE_URL_TRIMMED"
      },
      {
        "name": "JS_INTL_NAMED_OBJECT"
      },
      {
        "name": "JS_INTL_V8_BREAK_ITERATOR"
      },
      {
        "name": "JS_IS_SEARCH_PROVIDER_INSTALLED_ZERO"
      },
      {
        "name": "JS_LABEL_FORM_OF_SELF"
      },
      {
        "name": "JS_LOCATION_HASH_HASH_IS_ENCODED"
      },
      {
        "name": "JS_LOCATION_HASH_IS_DECODED"
      },
      {
        "name": "JS_LOCATION_HASH_RETURNS_HASH_FOR_EMPTY_DEFINED"
      },
      {
        "name": "JS_LOCATION_HREF_HASH_IS_ENCODED"
      },
      {
        "name": "JS_LOCATION_RELOAD_REFERRER"
      },
      {
        "name": "JS_MEDIA_LIST_ALL"
      },
      {
        "name": "JS_MEDIA_LIST_EMPTY_STRING"
      },
      {
        "name": "JS_MENU_TYPE_EMPTY"
      },
      {
        "name": "JS_MENU_TYPE_PASS"
      },
      {
        "name": "JS_NATIVE_FUNCTION_TOSTRING_COMPACT"
      },
      {
        "name": "JS_NATIVE_FUNCTION_TOSTRING_NEW_LINE"
      },
      {
        "name": "JS_NATIVE_FUNCTION_TOSTRING_NL"
      },
      {
        "name": "JS_NAVIGATOR_DO_NOT_TRACK_UNSPECIFIED"
      },
      {
        "name": "JS_NODE_CONTAINS_RETURNS_FALSE_FOR_INVALID_ARG"
      },
      {
        "name": "JS_NODE_INSERT_BEFORE_REF_OPTIONAL"
      },
      {
        "name": "JS_OBJECT_GET_OWN_PROPERTY_SYMBOLS"
      },
      {
        "name": "JS_OFFSET_PARENT_NULL_IF_FIXED"
      },
      {
        "name": "JS_OUTER_HTML_NULL_AS_STRING"
      },
      {
        "name": "JS_OUTER_HTML_REMOVES_CHILDREN_FOR_DETACHED"
      },
      {
        "name": "JS_OUTER_HTML_THROWS_FOR_DETACHED"
      },
      {
        "name": "JS_PAGERULE_SELECTORTEXT_EMPTY"
      },
      {
        "name": "JS_PHRASE_COMMON_CLASS_NAME"
      },
      {
        "name": "JS_POP_STATE_EVENT_CLONE_STATE"
      },
      {
        "name": "JS_PRE_WIDTH_STRING"
      },
      {
        "name": "JS_PROMISE"
      },
      {
        "name": "JS_PROPERTY_DESCRIPTOR_NAME"
      },
      {
        "name": "JS_PROPERTY_DESCRIPTOR_NEW_LINE"
      },
      {
        "name": "JS_REFLECT"
      },
      {
        "name": "JS_REGEXP_EMPTY_LASTPAREN_IF_TOO_MANY_GROUPS"
      },
      {
        "name": "JS_REGEXP_GROUP0_RETURNS_WHOLE_MATCH"
      },
      {
        "name": "JS_SCRIPT_HANDLE_204_AS_ERROR"
      },
      {
        "name": "JS_SCRIPT_SUPPORTS_FOR_AND_EVENT_WINDOW"
      },
      {
        "name": "JS_SELECTOR_TEXT_LOWERCASE"
      },
      {
        "name": "JS_SELECT_FILE_THROWS"
      },
      {
        "name": "JS_SELECT_OPTIONS_HAS_SELECT_CLASS_NAME"
      },
      {
        "name": "JS_SELECT_OPTIONS_IGNORE_NEGATIVE_LENGTH"
      },
      {
        "name": "JS_SELECT_OPTIONS_IN_ALWAYS_TRUE"
      },
      {
        "name": "JS_SELECT_OPTIONS_NULL_FOR_OUTSIDE"
      },
      {
        "name": "JS_SELECT_OPTIONS_REMOVE_IGNORE_IF_INDEX_NEGATIVE"
      },
      {
        "name": "JS_SELECT_OPTIONS_REMOVE_THROWS_IF_NEGATIV"
      },
      {
        "name": "JS_SELECT_REMOVE_IGNORE_IF_INDEX_OUTSIDE"
      },
      {
        "name": "JS_SELECT_SET_VALUES_CHECKS_ONLY_VALUE_ATTRIBUTE"
      },
      {
        "name": "JS_STORAGE_GET_FROM_ITEMS"
      },
      {
        "name": "JS_STORAGE_PRESERVED_INCLUDED"
      },
      {
        "name": "JS_STYLESHEETLIST_ACTIVE_ONLY"
      },
      {
        "name": "JS_STYLE_UNSUPPORTED_PROPERTY_GETTER"
      },
      {
        "name": "JS_STYLE_WORD_SPACING_ACCEPTS_PERCENT"
      },
      {
        "name": "JS_STYLE_WRONG_INDEX_RETURNS_UNDEFINED"
      },
      {
        "name": "JS_SYMBOL"
      },
      {
        "name": "JS_TABLE_CELL_HEIGHT_DOES_NOT_RETURN_NEGATIVE_VALUES"
      },
      {
        "name": "JS_TABLE_CELL_OFFSET_INCLUDES_BORDER"
      },
      {
        "name": "JS_TABLE_CELL_WIDTH_DOES_NOT_RETURN_NEGATIVE_VALUES"
      },
      {
        "name": "JS_TABLE_COLUMN_WIDTH_NO_NEGATIVE_VALUES"
      },
      {
        "name": "JS_TABLE_COLUMN_WIDTH_NULL_STRING"
      },
      {
        "name": "JS_TABLE_ROW_DELETE_CELL_REQUIRES_INDEX"
      },
      {
        "name": "JS_TABLE_SPAN_SET_ZERO_IF_INVALID"
      },
      {
        "name": "JS_TABLE_SPAN_THROWS_EXCEPTION_IF_INVALID"
      },
      {
        "name": "JS_TABLE_VALIGN_SUPPORTS_IE_VALUES"
      },
      {
        "name": "JS_TEXT_AREA_GET_MAXLENGTH_MAX_INT"
      },
      {
        "name": "JS_TEXT_AREA_SET_COLS_NEGATIVE_THROWS_EXCEPTION"
      },
      {
        "name": "JS_TEXT_AREA_SET_COLS_THROWS_EXCEPTION"
      },
      {
        "name": "JS_TEXT_AREA_SET_MAXLENGTH_NEGATIVE_THROWS_EXCEPTION"
      },
      {
        "name": "JS_TEXT_AREA_SET_ROWS_NEGATIVE_THROWS_EXCEPTION"
      },
      {
        "name": "JS_TEXT_AREA_SET_ROWS_THROWS_EXCEPTION"
      },
      {
        "name": "JS_TEXT_AREA_SET_VALUE_NULL"
      },
      {
        "name": "JS_TREEWALKER_EXPAND_ENTITY_REFERENCES_FALSE"
      },
      {
        "name": "JS_TREEWALKER_FILTER_FUNCTION_ONLY"
      },
      {
        "name": "JS_TYPE_ACCEPTS_ARBITRARY_VALUES"
      },
      {
        "name": "JS_URL_SEARCH_PARMS_ITERATOR_SIMPLE_NAME"
      },
      {
        "name": "JS_VALIGN_CONVERTS_TO_LOWERCASE"
      },
      {
        "name": "JS_WEBGL_CONTEXT_EVENT_CONSTANTS"
      },
      {
        "name": "JS_WIDTH_HEIGHT_ACCEPTS_ARBITRARY_VALUES"
      },
      {
        "name": "JS_WINDOW_ACTIVEXOBJECT_HIDDEN"
      },
      {
        "name": "JS_WINDOW_CHANGE_OPENER_ONLY_WINDOW_OBJECT"
      },
      {
        "name": "JS_WINDOW_COMPUTED_STYLE_PSEUDO_ACCEPT_WITHOUT_COLON"
      },
      {
        "name": "JS_WINDOW_FORMFIELDS_ACCESSIBLE_BY_NAME"
      },
      {
        "name": "JS_WINDOW_FRAMES_ACCESSIBLE_BY_ID"
      },
      {
        "name": "JS_WINDOW_FRAME_BY_ID_RETURNS_WINDOW"
      },
      {
        "name": "JS_WINDOW_INSTALL_TRIGGER_NULL"
      },
      {
        "name": "JS_WINDOW_OUTER_INNER_HEIGHT_DIFF_131"
      },
      {
        "name": "JS_WINDOW_OUTER_INNER_HEIGHT_DIFF_133"
      },
      {
        "name": "JS_WINDOW_OUTER_INNER_HEIGHT_DIFF_86"
      },
      {
        "name": "JS_WINDOW_OUTER_INNER_HEIGHT_DIFF_91"
      },
      {
        "name": "JS_WINDOW_SELECTION_NULL_IF_INVISIBLE"
      },
      {
        "name": "JS_WINDOW_TOP_WRITABLE"
      },
      {
        "name": "JS_WORKER_IMPORT_SCRIPTS_ACCEPTS_ALL"
      },
      {
        "name": "JS_XML"
      },
      {
        "name": "JS_XML_GET_ELEMENTS_BY_TAG_NAME_LOCAL"
      },
      {
        "name": "JS_XML_GET_ELEMENT_BY_ID__ANY_ELEMENT"
      },
      {
        "name": "JS_XML_SERIALIZER_BLANK_BEFORE_SELF_CLOSING"
      },
      {
        "name": "JS_XML_SERIALIZER_HTML_DOCUMENT_FRAGMENT_ALWAYS_EMPTY"
      },
      {
        "name": "JS_XML_SERIALIZER_ROOT_CDATA_AS_ESCAPED_TEXT"
      },
      {
        "name": "JS_XML_SUPPORT_VIA_ACTIVEXOBJECT"
      },
      {
        "name": "JS_XSLT_TRANSFORM_INDENT"
      },
      {
        "name": "KEYBOARD_EVENT_SPECIAL_KEYPRESS"
      },
      {
        "name": "KEYGEN_AS_BLOCK"
      },
      {
        "name": "META_X_UA_COMPATIBLE"
      },
      {
        "name": "MULTICOL_BLOCK"
      },
      {
        "name": "PAGE_SELECTION_RANGE_FROM_SELECTABLE_TEXT_INPUT"
      },
      {
        "name": "QUERYSELECTORALL_NOT_IN_QUIRKS"
      },
      {
        "name": "QUERYSELECTOR_CSS3_PSEUDO_REQUIRE_ATTACHED_NODE"
      },
      {
        "name": "RESETINPUT_DEFAULT_VALUE_IF_VALUE_NOT_DEFINED"
      },
      {
        "name": "SLOT_CONTENTS"
      },
      {
        "name": "STRING_INCLUDES"
      },
      {
        "name": "STRING_REPEAT"
      },
      {
        "name": "STRING_STARTS_ENDS_WITH"
      },
      {
        "name": "STRING_TRIM_LEFT_RIGHT"
      },
      {
        "name": "STYLESHEET_ADD_RULE_RETURNS_POS"
      },
      {
        "name": "STYLESHEET_HREF_EMPTY_IS_NULL"
      },
      {
        "name": "SUBMITINPUT_DEFAULT_VALUE_IF_VALUE_NOT_DEFINED"
      },
      {
        "name": "SVG_UNKNOWN_ARE_DOM"
      },
      {
        "name": "URL_ABOUT_BLANK_HAS_BLANK_PATH"
      },
      {
        "name": "URL_AUTH_CREDENTIALS"
      },
      {
        "name": "URL_MINIMAL_QUERY_ENCODING"
      },
      {
        "name": "URL_MISSING_SLASHES"
      },
      {
        "name": "WEBSOCKET_ORIGIN_SET"
      },
      {
        "name": "WINDOW_EXECUTE_EVENTS"
      },
      {
        "name": "XHR_ALL_RESPONSE_HEADERS_APPEND_SEPARATOR"
      },
      {
        "name": "XHR_ALL_RESPONSE_HEADERS_SEPARATE_BY_LF"
      },
      {
        "name": "XHR_FIRE_STATE_OPENED_AGAIN_IN_ASYNC_MODE"
      },
      {
        "name": "XHR_HANDLE_SYNC_NETWORK_ERRORS"
      },
      {
        "name": "XHR_LENGTH_COMPUTABLE"
      },
      {
        "name": "XHR_LOAD_ALWAYS_AFTER_DONE"
      },
      {
        "name": "XHR_LOAD_START_ASYNC"
      },
      {
        "name": "XHR_NO_CROSS_ORIGIN_TO_ABOUT"
      },
      {
        "name": "XHR_OPEN_ALLOW_EMTPY_URL"
      },
      {
        "name": "XHR_PROGRESS_ON_NETWORK_ERROR_ASYNC"
      },
      {
        "name": "XHR_RESPONSE_TEXT_EMPTY_UNSENT"
      },
      {
        "name": "XHR_RESPONSE_TYPE_THROWS_UNSENT"
      },
      {
        "name": "XHR_SEND_IGNORES_BLOB_MIMETYPE_AS_CONTENTTYPE"
      },
      {
        "name": "XHR_SEND_NETWORK_ERROR_IF_ABORTED"
      },
      {
        "name": "XHR_USE_CONTENT_CHARSET"
      },
      {
        "name": "XPATH_SELECTION_NAMESPACES"
      },
      {
        "name": "TAG_NAME"
      },
      {
        "name": "refreshes"
      },
      {
        "name": "builder"
      },
      {
        "name": "extAttributes"
      },
      {
        "name": "catalog"
      },
      {
        "name": "state"
      },
      {
        "name": "rotating"
      },
      {
        "name": "TYPE"
      },
      {
        "name": "classLoaderValueMap"
      },
      {
        "name": "threadLocalRandomProbe"
      },
      {
        "name": "next"
      },
      {
        "name": "value"
      },
      {
        "name": "pair"
      },
      {
        "name": "base"
      },
      {
        "name": "cellsBusy"
      },
      {
        "name": "thisX500Name"
      },
      {
        "name": "connTimeToLive"
      },
      {
        "name": "connTimeToLiveTimeUnit"
      },
      {
        "name": "defaultConnectionConfig"
      },
      {
        "name": "defaultSocketConfig"
      },
      {
        "name": "dnsResolver"
      },
      {
        "name": "hostnameVerifier"
      },
      {
        "name": "maxConnPerRoute"
      },
      {
        "name": "maxConnTotal"
      },
      {
        "name": "publicSuffixMatcher"
      },
      {
        "name": "sslContext"
      },
      {
        "name": "sslSocketFactory"
      },
      {
        "name": "systemProperties"
      },
      {
        "name": "readState"
      },
      {
        "name": "counter"
      },
      {
        "name": "pos"
      },
      {
        "name": "INSTANCE"
      },
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      },
      {
        "name": "JSON"
      },
      {
        "name": "NEWZNAB"
      },
      {
        "name": "TORZNAB"
      },
      {
        "name": "toString"
      },
      {
        "name": "this$0"
      },
      {
        "name": "PATH_VARIABLES"
      }
    ],
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allPublicFields": true
  },
  {
    "name": "ch.qos.logback.classic.pattern.SyslogStartConverter",
    "allPublicConstructors": true
  },
  {
    "name": "ch.qos.logback.core.filter.Filter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "decide",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isStarted",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.IntegerTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "ch.qos.logback.core.spi.ContextAwareBase",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addError",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "addInfo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addInfo",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "addStatus",
        "parameterTypes": [
          "ch.qos.logback.core.status.Status"
        ]
      },
      {
        "name": "addWarn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addWarn",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "getContext",
        "parameterTypes": []
      },
      {
        "name": "getStatusManager",
        "parameterTypes": []
      },
      {
        "name": "setContext",
        "parameterTypes": [
          "ch.qos.logback.core.Context"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.core.ObjectCodec",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getJsonFactory",
        "parameterTypes": []
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.core.TreeCodec",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.JsonDeserializer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "deserialize",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.databind.DeserializationContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "deserializeWithType",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.databind.DeserializationContext",
          "com.fasterxml.jackson.databind.jsontype.TypeDeserializer"
        ]
      },
      {
        "name": "deserializeWithType",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.databind.DeserializationContext",
          "com.fasterxml.jackson.databind.jsontype.TypeDeserializer",
          "java.lang.Object"
        ]
      },
      {
        "name": "findBackReference",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAbsentValue",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.DeserializationContext"
        ]
      },
      {
        "name": "getDelegatee",
        "parameterTypes": []
      },
      {
        "name": "getEmptyAccessPattern",
        "parameterTypes": []
      },
      {
        "name": "getEmptyValue",
        "parameterTypes": []
      },
      {
        "name": "getEmptyValue",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.DeserializationContext"
        ]
      },
      {
        "name": "getKnownPropertyNames",
        "parameterTypes": []
      },
      {
        "name": "getNullAccessPattern",
        "parameterTypes": []
      },
      {
        "name": "getNullValue",
        "parameterTypes": []
      },
      {
        "name": "getNullValue",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.DeserializationContext"
        ]
      },
      {
        "name": "getObjectIdReader",
        "parameterTypes": []
      },
      {
        "name": "handledType",
        "parameterTypes": []
      },
      {
        "name": "isCachable",
        "parameterTypes": []
      },
      {
        "name": "logicalType",
        "parameterTypes": []
      },
      {
        "name": "replaceDelegatee",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.JsonDeserializer"
        ]
      },
      {
        "name": "supportsUpdate",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.DeserializationConfig"
        ]
      },
      {
        "name": "unwrappingDeserializer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.util.NameTransformer"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.JsonSerializer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "acceptJsonFormatVisitor",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper",
          "com.fasterxml.jackson.databind.JavaType"
        ]
      },
      {
        "name": "getDelegatee",
        "parameterTypes": []
      },
      {
        "name": "handledType",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.SerializerProvider",
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isUnwrappingSerializer",
        "parameterTypes": []
      },
      {
        "name": "properties",
        "parameterTypes": []
      },
      {
        "name": "replaceDelegatee",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "serialize",
        "parameterTypes": [
          "java.lang.Object",
          "com.fasterxml.jackson.core.JsonGenerator",
          "com.fasterxml.jackson.databind.SerializerProvider"
        ]
      },
      {
        "name": "serializeWithType",
        "parameterTypes": [
          "java.lang.Object",
          "com.fasterxml.jackson.core.JsonGenerator",
          "com.fasterxml.jackson.databind.SerializerProvider",
          "com.fasterxml.jackson.databind.jsontype.TypeSerializer"
        ]
      },
      {
        "name": "unwrappingSerializer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.util.NameTransformer"
        ]
      },
      {
        "name": "usesObjectId",
        "parameterTypes": []
      },
      {
        "name": "withFilterId",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.Module",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDependencies",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createArrayNode",
        "parameterTypes": []
      },
      {
        "name": "createObjectNode",
        "parameterTypes": []
      },
      {
        "name": "getFactory",
        "parameterTypes": []
      },
      {
        "name": "missingNode",
        "parameterTypes": []
      },
      {
        "name": "nullNode",
        "parameterTypes": []
      },
      {
        "name": "readTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "treeAsTokens",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "treeToValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode",
          "java.lang.Class"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      },
      {
        "name": "writeTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "writeValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.module.SimpleModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addAbstractTypeMapping",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "addDeserializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonDeserializer"
        ]
      },
      {
        "name": "addKeyDeserializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.KeyDeserializer"
        ]
      },
      {
        "name": "addKeySerializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addSerializer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addSerializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addValueInstantiator",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.deser.ValueInstantiator"
        ]
      },
      {
        "name": "getModuleName",
        "parameterTypes": []
      },
      {
        "name": "getTypeId",
        "parameterTypes": []
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.jsontype.NamedType[]"
        ]
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "java.lang.Class[]"
        ]
      },
      {
        "name": "setAbstractTypes",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
        ]
      },
      {
        "name": "setDeserializerModifier",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
        ]
      },
      {
        "name": "setDeserializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleDeserializers"
        ]
      },
      {
        "name": "setKeyDeserializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
        ]
      },
      {
        "name": "setKeySerializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleSerializers"
        ]
      },
      {
        "name": "setMixInAnnotation",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "setSerializerModifier",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
        ]
      },
      {
        "name": "setSerializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleSerializers"
        ]
      },
      {
        "name": "setValueInstantiators",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
        ]
      },
      {
        "name": "setupModule",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.Module$SetupContext"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.FileSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setupModule",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.Module$SetupContext"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.ApplicationCache",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.AudioScheduledSourceNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.BarProp",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.BatteryManager",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.BroadcastChannel",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.Cache",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.CacheStorage",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.ClientRect",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.ClientRectList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.Element",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.External",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.FontFace",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.FontFaceSet",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.Gamepad",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.GamepadButton",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.History",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.ImageBitmap",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.Location",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.MessageChannel",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.MessagePort",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.MimeType",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.MimeTypeArray",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.NamedNodeMap",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.Navigator",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.Notification",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.PerformanceObserver",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.PerformanceObserverEntryList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.PermissionStatus",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.Permissions",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.Plugin",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.PluginArray",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.PushManager",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.PushSubscription",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.PushSubscriptionOptions",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.ReadableStream",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.Screen",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.ScreenOrientation",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.SharedWorker",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.SimpleArray",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.Storage",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.StorageManager",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.TextDecoder",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.TextEncoder",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.Touch",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.TouchList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.URL",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.URLSearchParams",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.WebSocket",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.Window",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.XPathExpression",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.animations.Animation",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.animations.AnimationEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.animations.KeyframeEffect",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.arrays.Atomics",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.CanvasCaptureMediaStreamTrack",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.CanvasGradient",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.CanvasPattern",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.CanvasRenderingContext2D",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.ImageBitmapRenderingContext",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.ImageData",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.IntersectionObserver",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.IntersectionObserverEntry",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.Path2D",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.TextMetrics",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGL2RenderingContext",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLActiveInfo",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLBuffer",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLFramebuffer",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLProgram",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLQuery",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLRenderbuffer",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLRenderingContext",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLSampler",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLShader",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLShaderPrecisionFormat",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLSync",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLTexture",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLTransformFeedback",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLUniformLocation",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLVertexArrayObject",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.crypto.Crypto",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.crypto.CryptoKey",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.crypto.SubtleCrypto",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.CSS",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.CSSConditionRule",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.CSSCounterStyleRule",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.CSSFontFaceRule",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.CSSGroupingRule",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.CSSImportRule",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.CSSKeyframeRule",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.CSSKeyframesRule",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.CSSMediaRule",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.CSSNamespaceRule",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.CSSPageRule",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.CSSRule",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.CSSRuleList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.CSSStyleDeclaration",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.CSSStyleRule",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.CSSStyleSheet",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.CSSSupportsRule",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.MediaList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.MediaQueryList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.StyleMedia",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.StyleSheet",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.StyleSheetList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.css.WebKitCSSMatrix",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.AbstractList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.Attr",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.CDATASection",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.CharacterData",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.Comment",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.CustomElementRegistry",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.DOMError",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.DOMException",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.DOMImplementation",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.DOMMatrix",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.DOMMatrixReadOnly",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.DOMParser",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.DOMPoint",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.DOMPointReadOnly",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.DOMRectReadOnly",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.DOMStringList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.DOMStringMap",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.DOMTokenList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.Document",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.DocumentFragment",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.DocumentType",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.IdleDeadline",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.MutationObserver",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.MutationRecord",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.Node",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.NodeFilter",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.NodeIterator",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.NodeList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.ProcessingInstruction",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.RadioNodeList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.Range",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.Selection",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.ShadowRoot",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.Text",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.TreeWalker",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.WebKitMutationObserver",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.XPathEvaluator",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.XPathNSResolver",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.dom.XPathResult",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.AudioProcessingEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.BeforeInstallPromptEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.BeforeUnloadEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.BlobEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.ClipboardEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.CloseEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.CompositionEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.CustomEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.DeviceMotionEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.DeviceOrientationEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.DragEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.ErrorEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.Event",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.EventSource",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.EventTarget",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.FocusEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.GamepadEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.HashChangeEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.IDBVersionChangeEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.InputEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.KeyboardEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.MIDIConnectionEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.MIDIMessageEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.MediaEncryptedEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.MediaKeyMessageEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.MediaQueryListEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.MediaStreamEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.MediaStreamTrackEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.MessageEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.MouseEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.MutationEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.OfflineAudioCompletionEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.PageTransitionEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.PointerEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.PopStateEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.PresentationConnectionAvailableEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.PresentationConnectionCloseEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.ProgressEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.PromiseRejectionEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.RTCDataChannelEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.RTCPeerConnectionIceEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.SecurityPolicyViolationEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.SpeechSynthesisEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.StorageEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.TextEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.TouchEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.TrackEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.TransitionEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.UIEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.WebGLContextEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.WebkitSpeechRecognitionError",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.WebkitSpeechRecognitionEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.event.WheelEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.fetch.Headers",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.fetch.Request",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.fetch.Response",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.file.Blob",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.file.DataTransferItem",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.file.DataTransferItemList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.file.File",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.file.FileList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.file.FileReader",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.geo.Geolocation",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.Audio",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.DataTransfer",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLAllCollection",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLAnchorElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLAreaElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLAudioElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLBGSoundElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLBRElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLBaseElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLBlockElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLBodyElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLButtonElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLCanvasElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLCollection",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLDListElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLDataElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLDataListElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLDetailsElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLDialogElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLDirectoryElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLDivElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLDocument",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLEmbedElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLFieldSetElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLFontElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLFormControlsCollection",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLFormElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLFrameElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLFrameSetElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLHRElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLHeadElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLHeadingElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLHtmlElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLIFrameElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLImageElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLInputElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLLIElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLLabelElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLLegendElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLLinkElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLListElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLMapElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLMarqueeElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLMediaElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLMenuElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLMetaElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLMeterElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLModElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLOListElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLObjectElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLOptGroupElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLOptionElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLOptionsCollection",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLOutputElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLParagraphElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLParamElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLPhraseElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLPictureElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLPreElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLProgressElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLQuoteElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLScriptElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLSelectElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLSlotElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLSourceElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLSpanElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLStyleElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTableCaptionElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTableCellElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTableColElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTableComponent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTableElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTableRowElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTableSectionElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTemplateElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTextAreaElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTimeElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTitleElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTrackElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLUListElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLUnknownElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.HTMLVideoElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.Image",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.Option",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.RowContainer",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.html.ValidityState",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.idb.IDBCursor",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.idb.IDBCursorWithValue",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.idb.IDBDatabase",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.idb.IDBFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.idb.IDBIndex",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.idb.IDBKeyRange",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.idb.IDBObjectStore",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.idb.IDBOpenDBRequest",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.idb.IDBRequest",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.idb.IDBTransaction",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.AnalyserNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.AudioBuffer",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.AudioBufferSourceNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.AudioContext",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.AudioDestinationNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.AudioListener",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.AudioNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.AudioParam",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.BaseAudioContext",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.BiquadFilterNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.ChannelMergerNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.ChannelSplitterNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.ConstantSourceNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.ConvolverNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.DelayNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.DynamicsCompressorNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.GainNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.IIRFilterNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.InputDeviceCapabilities",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.MediaDeviceInfo",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.MediaDevices",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.MediaElementAudioSourceNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.MediaError",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.MediaKeySession",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.MediaKeyStatusMap",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.MediaKeySystemAccess",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.MediaKeys",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.MediaRecorder",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.MediaSource",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.MediaStream",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.MediaStreamAudioDestinationNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.MediaStreamAudioSourceNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.MediaStreamTrack",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.OfflineAudioContext",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.OscillatorNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.PannerNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.PeriodicSyncManager",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.PeriodicWave",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.RemotePlayback",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.ScriptProcessorNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.SourceBuffer",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.SourceBufferList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.StereoPannerNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.TextTrack",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.TextTrackCue",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.TextTrackCueList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.TextTrackList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.TimeRanges",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.VTTCue",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.VideoPlaybackQuality",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.WaveShaperNode",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.WebkitMediaStream",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.midi.MIDIAccess",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.midi.MIDIInput",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.midi.MIDIInputMap",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.midi.MIDIOutput",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.midi.MIDIOutputMap",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.midi.MIDIPort",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.presentation.Presentation",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.presentation.PresentationAvailability",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.presentation.PresentationConnection",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.presentation.PresentationRequest",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.rtc.RTCCertificate",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.rtc.RTCIceCandidate",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.rtc.RTCPeerConnection",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.rtc.RTCSessionDescription",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.rtc.RTCStatsReport",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.media.rtc.WebkitRTCPeerConnection",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.network.NetworkInformation",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.payment.PaymentAddress",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.payment.PaymentRequest",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.payment.PaymentResponse",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.performance.Performance",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.performance.PerformanceEntry",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.performance.PerformanceMark",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.performance.PerformanceMeasure",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.performance.PerformanceNavigation",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.performance.PerformanceNavigationTiming",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.performance.PerformanceResourceTiming",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.performance.PerformanceTiming",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.security.Credential",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.security.CredentialsContainer",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.security.FederatedCredential",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.security.PasswordCredential",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.speech.SpeechSynthesis",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.speech.SpeechSynthesisErrorEvent",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.speech.SpeechSynthesisUtterance",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.speech.WebkitSpeechGrammar",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.speech.WebkitSpeechGrammarList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.speech.WebkitSpeechRecognition",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAngle",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimateElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimateMotionElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimateTransformElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedAngle",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedBoolean",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedEnumeration",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedInteger",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedLength",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedLengthList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedNumber",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedNumberList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedPreserveAspectRatio",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedRect",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedString",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedTransformList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimationElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGCircleElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGClipPathElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGComponentTransferFunctionElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGDefsElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGDescElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGEllipseElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEBlendElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEColorMatrixElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEComponentTransferElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFECompositeElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEConvolveMatrixElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEDiffuseLightingElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEDisplacementMapElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEDistantLightElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEDropShadowElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEFloodElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEFuncAElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEFuncBElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEFuncGElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEFuncRElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEGaussianBlurElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEImageElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEMergeElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEMergeNodeElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEMorphologyElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEOffsetElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEPointLightElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFESpecularLightingElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFESpotLightElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFETileElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFETurbulenceElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFilterElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGForeignObjectElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGGElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGGeometryElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGGradientElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGGraphicsElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGImageElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGLength",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGLengthList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGLineElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGLinearGradientElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGMPathElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGMarkerElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGMaskElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGMatrix",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGMetadataElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGNumber",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGNumberList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGPathElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGPatternElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGPoint",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGPointList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGPolygonElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGPolylineElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGPreserveAspectRatio",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGRadialGradientElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGRect",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGRectElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGSVGElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGScriptElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGSetElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGStopElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGStringList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGStyleElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGSwitchElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGSymbolElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGTSpanElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGTextContentElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGTextElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGTextPathElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGTextPositioningElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGTitleElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGTransform",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGTransformList",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGUnitTypes",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGUseElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.svg.SVGViewElement",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.webkitURL",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.worker.ServiceWorker",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.worker.ServiceWorkerContainer",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.worker.ServiceWorkerRegistration",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.worker.SyncManager",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.worker.Worker",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.xml.FormData",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.xml.XMLDocument",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.xml.XMLHttpRequest",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.xml.XMLHttpRequestEventTarget",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.xml.XMLHttpRequestUpload",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.xml.XMLSerializer",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "com.gargoylesoftware.htmlunit.javascript.host.xml.XSLTProcessor",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.google.gson.Gson",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.google.gson.GsonBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.uwetrottmann.tmdb2.Tmdb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "apiKey",
        "parameterTypes": []
      },
      {
        "name": "apiKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "collectionService",
        "parameterTypes": []
      },
      {
        "name": "configurationService",
        "parameterTypes": []
      },
      {
        "name": "discoverMovie",
        "parameterTypes": []
      },
      {
        "name": "discoverService",
        "parameterTypes": []
      },
      {
        "name": "discoverTv",
        "parameterTypes": []
      },
      {
        "name": "findService",
        "parameterTypes": []
      },
      {
        "name": "genreService",
        "parameterTypes": []
      },
      {
        "name": "moviesService",
        "parameterTypes": []
      },
      {
        "name": "personService",
        "parameterTypes": []
      },
      {
        "name": "reviewsService",
        "parameterTypes": []
      },
      {
        "name": "searchService",
        "parameterTypes": []
      },
      {
        "name": "tvEpisodesService",
        "parameterTypes": []
      },
      {
        "name": "tvSeasonsService",
        "parameterTypes": []
      },
      {
        "name": "tvService",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addDataSourceProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "addHealthCheckProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "copyStateTo",
        "parameterTypes": [
          "com.zaxxer.hikari.HikariConfig"
        ]
      },
      {
        "name": "getCatalog",
        "parameterTypes": []
      },
      {
        "name": "getConnectionInitSql",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTestQuery",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceJNDI",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceProperties",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getExceptionOverrideClassName",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckProperties",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckRegistry",
        "parameterTypes": []
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "getInitializationFailTimeout",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getKeepaliveTime",
        "parameterTypes": []
      },
      {
        "name": "getLeakDetectionThreshold",
        "parameterTypes": []
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": []
      },
      {
        "name": "getMaximumPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getMetricRegistry",
        "parameterTypes": []
      },
      {
        "name": "getMetricsTrackerFactory",
        "parameterTypes": []
      },
      {
        "name": "getMinimumIdle",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getPoolName",
        "parameterTypes": []
      },
      {
        "name": "getScheduledExecutor",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getThreadFactory",
        "parameterTypes": []
      },
      {
        "name": "getTransactionIsolation",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getValidationTimeout",
        "parameterTypes": []
      },
      {
        "name": "isAllowPoolSuspension",
        "parameterTypes": []
      },
      {
        "name": "isAutoCommit",
        "parameterTypes": []
      },
      {
        "name": "isIsolateInternalQueries",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterMbeans",
        "parameterTypes": []
      },
      {
        "name": "setAllowPoolSuspension",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAutoCommit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionInitSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTestQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceJNDI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionOverrideClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHealthCheckProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setInitializationFailTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIsolateInternalQueries",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeepaliveTime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLeakDetectionThreshold",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMinimumIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPoolName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterMbeans",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setScheduledExecutor",
        "parameterTypes": [
          "java.util.concurrent.ScheduledExecutorService"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setTransactionIsolation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "addDataSourceProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "addHealthCheckProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "copyStateTo",
        "parameterTypes": [
          "com.zaxxer.hikari.HikariConfig"
        ]
      },
      {
        "name": "getCatalog",
        "parameterTypes": []
      },
      {
        "name": "getConnectionInitSql",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTestQuery",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceJNDI",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceProperties",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getExceptionOverrideClassName",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckProperties",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckRegistry",
        "parameterTypes": []
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "getInitializationFailTimeout",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getKeepaliveTime",
        "parameterTypes": []
      },
      {
        "name": "getLeakDetectionThreshold",
        "parameterTypes": []
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": []
      },
      {
        "name": "getMaximumPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getMetricRegistry",
        "parameterTypes": []
      },
      {
        "name": "getMetricsTrackerFactory",
        "parameterTypes": []
      },
      {
        "name": "getMinimumIdle",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getPoolName",
        "parameterTypes": []
      },
      {
        "name": "getScheduledExecutor",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getThreadFactory",
        "parameterTypes": []
      },
      {
        "name": "getTransactionIsolation",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getValidationTimeout",
        "parameterTypes": []
      },
      {
        "name": "isAllowPoolSuspension",
        "parameterTypes": []
      },
      {
        "name": "isAutoCommit",
        "parameterTypes": []
      },
      {
        "name": "isIsolateInternalQueries",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterMbeans",
        "parameterTypes": []
      },
      {
        "name": "setAllowPoolSuspension",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAutoCommit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionInitSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTestQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceJNDI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionOverrideClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHealthCheckProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setInitializationFailTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIsolateInternalQueries",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeepaliveTime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLeakDetectionThreshold",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMinimumIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPoolName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterMbeans",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setScheduledExecutor",
        "parameterTypes": [
          "java.util.concurrent.ScheduledExecutorService"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setTransactionIsolation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ],
    "name": "com.zaxxer.hikari.HikariConfig",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.zaxxer.hikari.HikariDataSource",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMetricRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMetricsTrackerFactory",
        "parameterTypes": [
          "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
        ]
      },
      {
        "name": "setLoginTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "setHealthCheckRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLogWriter",
        "parameterTypes": [
          "java.io.PrintWriter"
        ]
      },
      {
        "name": "getLoginTimeout",
        "parameterTypes": []
      },
      {
        "name": "getLogWriter",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getConnection",
        "parameterTypes": []
      },
      {
        "name": "getConnection",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getLogWriter",
        "parameterTypes": []
      },
      {
        "name": "getLoginTimeout",
        "parameterTypes": []
      },
      {
        "name": "getParentLogger",
        "parameterTypes": []
      },
      {
        "name": "isWrapperFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setHealthCheckRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLogWriter",
        "parameterTypes": [
          "java.io.PrintWriter"
        ]
      },
      {
        "name": "setLoginTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMetricRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMetricsTrackerFactory",
        "parameterTypes": [
          "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ],
    "name": "com.zaxxer.hikari.HikariDataSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.zaxxer.hikari.HikariDataSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getConnection",
        "parameterTypes": []
      },
      {
        "name": "getConnection",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getLogWriter",
        "parameterTypes": []
      },
      {
        "name": "getLoginTimeout",
        "parameterTypes": []
      },
      {
        "name": "getParentLogger",
        "parameterTypes": []
      },
      {
        "name": "isWrapperFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setHealthCheckRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLogWriter",
        "parameterTypes": [
          "java.io.PrintWriter"
        ]
      },
      {
        "name": "setLoginTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMetricRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMetricsTrackerFactory",
        "parameterTypes": [
          "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.Clock$1",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "monotonicTime",
        "parameterTypes": []
      },
      {
        "name": "wallTime",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.MeterRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "config",
        "parameterTypes": []
      },
      {
        "name": "counter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "counter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "forEachMeter",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.lang.Number"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.lang.Object",
          "java.util.function.ToDoubleFunction"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Number"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.util.function.ToDoubleFunction"
        ]
      },
      {
        "name": "gaugeCollectionSize",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.util.Collection"
        ]
      },
      {
        "name": "gaugeMapSize",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.util.Map"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMeters",
        "parameterTypes": []
      },
      {
        "name": "isClosed",
        "parameterTypes": []
      },
      {
        "name": "more",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter"
        ]
      },
      {
        "name": "removeByPreFilterId",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "summary",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "summary",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "timer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "timer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.logging.LogbackMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.ProcessorMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.UptimeMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterFilter$9",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "accept",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id",
          "io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.observation.DefaultMeterObservationHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "onEvent",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Event",
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onStart",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onStop",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.simple.SimpleMeterRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.SimpleObservationRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getCurrentObservation",
        "parameterTypes": []
      },
      {
        "name": "getCurrentObservationScope",
        "parameterTypes": []
      },
      {
        "name": "isNoop",
        "parameterTypes": []
      },
      {
        "name": "observationConfig",
        "parameterTypes": []
      },
      {
        "name": "setCurrentObservationScope",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Scope"
        ]
      }
    ]
  },
  {
    "name": "jakarta.persistence.NamedEntityGraph",
    "condition": {
      "typeReachable": "org.springframework.data.jpa.repository.EntityGraph"
    },
    "allPublicMethods": true
  },
  {
    "name": "jakarta.servlet.GenericServlet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getInitParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInitParameterNames",
        "parameterTypes": []
      },
      {
        "name": "getServletConfig",
        "parameterTypes": []
      },
      {
        "name": "getServletContext",
        "parameterTypes": []
      },
      {
        "name": "getServletInfo",
        "parameterTypes": []
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "jakarta.servlet.MultipartConfigElement",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.servlet.http.HttpServlet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": [
          "jakarta.servlet.ServletConfig"
        ]
      },
      {
        "name": "service",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "java.lang.Comparable",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "TYPE"
      }
    ],
    "name": "java.lang.Double",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "java.lang.Number",
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getApiLimits",
        "parameterTypes": []
      },
      {
        "name": "getApiOldestTime",
        "parameterTypes": []
      },
      {
        "name": "getAudioSearch",
        "parameterTypes": []
      },
      {
        "name": "getAvailable",
        "parameterTypes": []
      },
      {
        "name": "getBookSearch",
        "parameterTypes": []
      },
      {
        "name": "getCaps",
        "parameterTypes": []
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "getCategory",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getComments",
        "parameterTypes": []
      },
      {
        "name": "getDays",
        "parameterTypes": []
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getEmail",
        "parameterTypes": []
      },
      {
        "name": "getEnclosure",
        "parameterTypes": []
      },
      {
        "name": "getEnclosures",
        "parameterTypes": []
      },
      {
        "name": "getError",
        "parameterTypes": []
      },
      {
        "name": "getGenerator",
        "parameterTypes": []
      },
      {
        "name": "getGrabOldestTime",
        "parameterTypes": []
      },
      {
        "name": "getGrabs",
        "parameterTypes": []
      },
      {
        "name": "getGuid",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getImage",
        "parameterTypes": []
      },
      {
        "name": "getIndexers",
        "parameterTypes": []
      },
      {
        "name": "getItems",
        "parameterTypes": []
      },
      {
        "name": "getLanguage",
        "parameterTypes": []
      },
      {
        "name": "getLength",
        "parameterTypes": []
      },
      {
        "name": "getLimits",
        "parameterTypes": []
      },
      {
        "name": "getLink",
        "parameterTypes": []
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "getMovieSearch",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNewznabAttributes",
        "parameterTypes": []
      },
      {
        "name": "getNewznabResponse",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "getPubDate",
        "parameterTypes": []
      },
      {
        "name": "getRetention",
        "parameterTypes": []
      },
      {
        "name": "getRssChannel",
        "parameterTypes": []
      },
      {
        "name": "getRssGuid",
        "parameterTypes": []
      },
      {
        "name": "getSearch",
        "parameterTypes": []
      },
      {
        "name": "getSearchType",
        "parameterTypes": []
      },
      {
        "name": "getSearching",
        "parameterTypes": []
      },
      {
        "name": "getServer",
        "parameterTypes": []
      },
      {
        "name": "getSize",
        "parameterTypes": []
      },
      {
        "name": "getStrapline",
        "parameterTypes": []
      },
      {
        "name": "getSubCategories",
        "parameterTypes": []
      },
      {
        "name": "getSupportedParams",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getTorznabAttributes",
        "parameterTypes": []
      },
      {
        "name": "getTotal",
        "parameterTypes": []
      },
      {
        "name": "getTvSearch",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getWebMaster",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isPermaLink",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.Object",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "java.lang.Throwable"
  },
  {
    "name": "java.lang.reflect.Proxy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allPublicFields": true,
    "name": "java.sql.Types"
  },
  {
    "allDeclaredFields": true,
    "name": "java.util.AbstractCollection",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.ArrayList",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object[]",
          "int"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "nBits",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "rangeCheckForAdd",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "isClear",
        "parameterTypes": [
          "long[]",
          "int"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "grow",
        "parameterTypes": []
      },
      {
        "name": "ensureCapacity",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equalsArrayList",
        "parameterTypes": [
          "java.util.ArrayList"
        ]
      },
      {
        "name": "readObject",
        "parameterTypes": [
          "java.io.ObjectInputStream"
        ]
      },
      {
        "name": "removeRange",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCodeRange",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "subList",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "outOfBoundsMsg",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "lastIndexOfRange",
        "parameterTypes": [
          "java.lang.Object",
          "int",
          "int"
        ]
      },
      {
        "name": "outOfBoundsMsg",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "shiftTailOverGap",
        "parameterTypes": [
          "java.lang.Object[]",
          "int",
          "int"
        ]
      },
      {
        "name": "checkForComodification",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "replaceAll",
        "parameterTypes": [
          "java.util.function.UnaryOperator"
        ]
      },
      {
        "name": "removeIf",
        "parameterTypes": [
          "java.util.function.Predicate",
          "int",
          "int"
        ]
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "indexOfRange",
        "parameterTypes": [
          "java.lang.Object",
          "int",
          "int"
        ]
      },
      {
        "name": "elementData",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "listIterator",
        "parameterTypes": []
      },
      {
        "name": "batchRemove",
        "parameterTypes": [
          "java.util.Collection",
          "boolean",
          "int",
          "int"
        ]
      },
      {
        "name": "replaceAllRange",
        "parameterTypes": [
          "java.util.function.UnaryOperator",
          "int",
          "int"
        ]
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "writeObject",
        "parameterTypes": [
          "java.io.ObjectOutputStream"
        ]
      },
      {
        "name": "fastRemove",
        "parameterTypes": [
          "java.lang.Object[]",
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setBit",
        "parameterTypes": [
          "long[]",
          "int"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "sort",
        "parameterTypes": [
          "java.util.Comparator"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      },
      {
        "name": "equalsRange",
        "parameterTypes": [
          "java.util.List",
          "int",
          "int"
        ]
      },
      {
        "name": "trimToSize",
        "parameterTypes": []
      },
      {
        "name": "removeIf",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "checkInvariants",
        "parameterTypes": []
      },
      {
        "name": "elementAt",
        "parameterTypes": [
          "java.lang.Object[]",
          "int"
        ]
      },
      {
        "name": "grow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "listIterator",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "java.util.HashSet",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "toArray",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "writeObject",
        "parameterTypes": [
          "java.io.ObjectOutputStream"
        ]
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "readObject",
        "parameterTypes": [
          "java.io.ObjectInputStream"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "java.util.ImmutableCollections$AbstractImmutableCollection",
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "java.util.ImmutableCollections$AbstractImmutableList",
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "java.util.ImmutableCollections$ListN",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.Properties",
    "allPublicMethods": true
  },
  {
    "name": "org.commonmark.renderer.html.HtmlRenderer",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "access$1000",
        "parameterTypes": [
          "org.commonmark.renderer.html.HtmlRenderer"
        ]
      },
      {
        "name": "access$1200",
        "parameterTypes": [
          "org.commonmark.renderer.html.HtmlRenderer"
        ]
      },
      {
        "name": "access$1300",
        "parameterTypes": [
          "org.commonmark.renderer.html.HtmlRenderer"
        ]
      },
      {
        "name": "render",
        "parameterTypes": [
          "org.commonmark.node.Node",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "render",
        "parameterTypes": [
          "org.commonmark.node.Node"
        ]
      },
      {
        "name": "access$1400",
        "parameterTypes": [
          "org.commonmark.renderer.html.HtmlRenderer"
        ]
      },
      {
        "name": "access$1500",
        "parameterTypes": [
          "org.commonmark.renderer.html.HtmlRenderer"
        ]
      },
      {
        "name": "builder",
        "parameterTypes": []
      },
      {
        "name": "access$900",
        "parameterTypes": [
          "org.commonmark.renderer.html.HtmlRenderer"
        ]
      },
      {
        "name": "access$1100",
        "parameterTypes": [
          "org.commonmark.renderer.html.HtmlRenderer"
        ]
      }
    ]
  },
  {
    "name": "org.flywaydb.core.Flyway",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getBaselineMigrationPrefix",
        "parameterTypes": []
      },
      {
        "name": "setBaselineMigrationPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.flywaydb.core.api.migration.baseline.BaselineMigrationConfigurationExtension",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getClean",
        "parameterTypes": []
      },
      {
        "name": "setClean",
        "parameterTypes": [
          "org.flywaydb.core.internal.command.clean.CleanModel"
        ]
      }
    ],
    "name": "org.flywaydb.core.internal.command.clean.CleanModeConfigurationExtension",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.flywaydb.core.internal.command.clean.CleanModel",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.flywaydb.core.internal.command.clean.SchemaModel",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getScriptFilename",
        "parameterTypes": []
      },
      {
        "name": "setScriptFilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.flywaydb.core.internal.configuration.extensions.DeployScriptFilenameConfigurationExtension",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getScriptFilename",
        "parameterTypes": []
      },
      {
        "name": "setScriptFilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.flywaydb.core.internal.configuration.extensions.PrepareScriptFilenameConfigurationExtension",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.flywaydb.core.internal.proprietaryStubs.LicensingConfigurationExtensionStub"
  },
  {
    "allDeclaredFields": true,
    "name": "org.flywaydb.core.internal.proprietaryStubs.PATTokenConfigurationExtensionStub"
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isCheckDriftOnMigrate",
        "parameterTypes": []
      },
      {
        "name": "isPublishResult",
        "parameterTypes": []
      },
      {
        "name": "setCheckDriftOnMigrate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPublishResult",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "org.flywaydb.core.internal.publishing.PublishingConfigurationExtension",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.h2.jdbcx.JdbcDataSource",
    "allPublicConstructors": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.hibernate.collection.spi.AbstractPersistentCollection",
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.hibernate.collection.spi.PersistentSet",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.hibernate.event.spi.EventType"
  },
  {
    "allPublicFields": true,
    "name": "org.hibernate.type.SqlTypes"
  },
  {
    "name": "org.javers.core.diff.DiffFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.type.TypeMapper",
          "java.util.List",
          "java.util.List",
          "org.javers.core.graph.LiveGraphFactory",
          "org.javers.core.CoreConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.javers.repository.api.JaversExtendedRepository",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.repository.api.JaversRepository",
          "org.javers.core.snapshot.SnapshotDiffer"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.DevEndpoint",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "xdarr"
      },
      {
        "name": "applicationEventPublisher"
      },
      {
        "name": "entityManager"
      },
      {
        "name": "configProvider"
      }
    ],
    "methods": [
      {
        "name": "sendIndexerDisabledNotification",
        "parameterTypes": []
      },
      {
        "name": "throwAccessDeniedException",
        "parameterTypes": []
      },
      {
        "name": "deleteDanglingIndexersearches",
        "parameterTypes": []
      },
      {
        "name": "testAddToSonarr",
        "parameterTypes": []
      },
      {
        "name": "throwException",
        "parameterTypes": []
      },
      {
        "name": "countDanglingIndexersearches",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.DevEndpoint",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.DevEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getError",
        "parameterTypes": []
      },
      {
        "name": "getException",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTimestamp",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.ExceptionInfo",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.GenericResponse",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "isSuccessful",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "isSuccessful",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.GenericResponse",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "downloadInstanceCounter",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.InstanceCounter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.InstanceCounter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "downloadInstanceCounter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.NativeHints",
    "allDeclaredConstructors": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "startupDone",
        "parameterTypes": [
          "org.springframework.boot.context.event.ApplicationReadyEvent"
        ]
      },
      {
        "name": "warnIfSettingsOverwritten",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.NzbHydra",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.NzbHydraNativeEntrypoint",
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.NzbHydraNativeEntrypoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "main",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.NzbHydraNativeEntrypoint$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.api.CapsGenerator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.api.CapsGenerator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.api.CategoryConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "convertToDatabaseColumn",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convertToEntityAttribute",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setCategoryProvider",
        "parameterTypes": [
          "org.nzbhydra.searching.CategoryProvider"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.api.ExternalApi",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.api.ExternalApi",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "api",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.NewznabParameters",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "handler",
        "parameterTypes": [
          "org.nzbhydra.api.ExternalApiException"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.api.ExternalApi$CacheEntryValue",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getSearchResult",
        "parameterTypes": []
      },
      {
        "name": "getLastUpdate",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getParams",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.api.MockSearch",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.api.MockSearch",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.api.NewznabJsonTransformer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.api.NewznabJsonTransformer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.api.NewznabXmlTransformer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.api.NewznabXmlTransformer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.api.stats.ApiStatsRequest",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setRequest",
        "parameterTypes": [
          "org.nzbhydra.historystats.stats.StatsRequest"
        ]
      },
      {
        "name": "getRequest",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setApikey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getApikey",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.api.stats.ExternalApiStats",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.api.stats.ExternalApiStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.AsyncSupportFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "org.springframework.security.access.AccessDeniedException"
        ]
      }
    ],
    "name": "org.nzbhydra.auth.AuthAndAccessEventHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.auth.AuthAndAccessEventHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "org.springframework.security.access.AccessDeniedException"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.auth.AuthWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.auth.AuthWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.HydraAnonymousAuthenticationFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigProvider"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      },
      {
        "name": "getAuthorities",
        "parameterTypes": []
      },
      {
        "name": "getPrincipal",
        "parameterTypes": []
      },
      {
        "name": "handleConfigChangedEvent",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      },
      {
        "name": "setAuthenticationDetailsSource",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationDetailsSource"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.HydraEmbeddedServletContainer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.HydraGlobalMethodSecurityConfiguration",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.HydraGlobalMethodSecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "methodSecurityMetadataSource",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "methodSecurityMetadataSource",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.auth.HydraGlobalMethodSecurityConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.auth.HydraGlobalMethodSecurityConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "methodSecurityInterceptor",
        "parameterTypes": [
          "org.springframework.security.access.method.MethodSecurityMetadataSource"
        ]
      },
      {
        "name": "methodSecurityMetadataSource",
        "parameterTypes": []
      },
      {
        "name": "preInvocationAuthorizationAdvice",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.HydraGlobalMethodSecurityConfiguration$$SpringCGLIB$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.auth.HydraGlobalMethodSecurityConfiguration$$SpringCGLIB$$2",
    "allDeclaredConstructors": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig"
        ]
      },
      {
        "name": "changePassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createUser",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetails"
        ]
      },
      {
        "name": "deleteUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadUserByUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "updateUser",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetails"
        ]
      },
      {
        "name": "userExists",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.nzbhydra.auth.HydraUserDetailsManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.auth.HydraUserDetailsManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig"
        ]
      },
      {
        "name": "changePassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createUser",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetails"
        ]
      },
      {
        "name": "deleteUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "handleConfigChangedEvent",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      },
      {
        "name": "loadUserByUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "updateUser",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetails"
        ]
      },
      {
        "name": "userExists",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.LoginAndAccessAttemptService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.PersistentLoginsEntity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getSeries",
        "parameterTypes": []
      },
      {
        "name": "setSeries",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setLastUsed",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setSeries",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.nzbhydra.auth.PersistentLoginsEntity",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.auth.SecurityConfig",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "asyncSupportFilter"
      },
      {
        "name": "hydraUserDetailsManager"
      },
      {
        "name": "authAndAccessEventHandler"
      },
      {
        "name": "userDetailsService"
      },
      {
        "name": "hydraAnonymousAuthenticationFilter"
      },
      {
        "name": "configProvider"
      }
    ],
    "methods": [
      {
        "name": "handleNewConfig",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultHttpFirewall",
        "parameterTypes": []
      },
      {
        "name": "authManager",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.builders.HttpSecurity"
        ]
      },
      {
        "name": "filterChain",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.builders.HttpSecurity",
          "org.springframework.security.authentication.AuthenticationManager"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.SecurityConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "authManager",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.builders.HttpSecurity"
        ]
      },
      {
        "name": "defaultHttpFirewall",
        "parameterTypes": []
      },
      {
        "name": "filterChain",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.builders.HttpSecurity",
          "org.springframework.security.authentication.AuthenticationManager"
        ]
      },
      {
        "name": "handleNewConfig",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.auth.SecurityConfig",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.auth.SecurityConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "authManager",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.builders.HttpSecurity"
        ]
      },
      {
        "name": "defaultHttpFirewall",
        "parameterTypes": []
      },
      {
        "name": "filterChain",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.builders.HttpSecurity",
          "org.springframework.security.authentication.AuthenticationManager"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.SecurityConfig$$SpringCGLIB$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.auth.SecurityConfig$$SpringCGLIB$$2",
    "allDeclaredConstructors": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.auth.UserInfosProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.auth.UserInfosProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.backup.BackupAndRestore",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "entityManager"
      },
      {
        "name": "requestFactory"
      },
      {
        "name": "systemControl"
      },
      {
        "name": "configProvider"
      },
      {
        "name": "genericStorage"
      }
    ],
    "methods": [
      {
        "name": "backup",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "getBackupFolder",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.backup.BackupAndRestore",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.backup.BackupAndRestore",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.backup.BackupData",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getLastBackup",
        "parameterTypes": []
      },
      {
        "name": "setLastBackup",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setLastBackup",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ],
    "name": "org.nzbhydra.backup.BackupData",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "createBackup",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.backup.BackupTask",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.backup.BackupTask",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "createBackup",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.backup.BackupWeb",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "backup"
      }
    ],
    "methods": [
      {
        "name": "getFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "restore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "backupOnly",
        "parameterTypes": []
      },
      {
        "name": "backupAndDownload",
        "parameterTypes": []
      },
      {
        "name": "restoreFromUpload",
        "parameterTypes": [
          "org.springframework.web.multipart.MultipartFile"
        ]
      },
      {
        "name": "listBackups",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.backup.BackupWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.backup.BackupWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.backup.FailedBackupData",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isShown",
        "parameterTypes": []
      },
      {
        "name": "getTime",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "setShown",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.cache.ImageCacheConfig$$SpringCGLIB$$0",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.config.BaseConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAuth",
        "parameterTypes": []
      },
      {
        "name": "getCategoriesConfig",
        "parameterTypes": []
      },
      {
        "name": "getDownloading",
        "parameterTypes": []
      },
      {
        "name": "getGenericStorage",
        "parameterTypes": []
      },
      {
        "name": "getIndexers",
        "parameterTypes": []
      },
      {
        "name": "getMain",
        "parameterTypes": []
      },
      {
        "name": "getNotificationConfig",
        "parameterTypes": []
      },
      {
        "name": "getSearching",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setAuth",
        "parameterTypes": [
          "org.nzbhydra.config.auth.AuthConfig"
        ]
      },
      {
        "name": "setCategoriesConfig",
        "parameterTypes": [
          "org.nzbhydra.config.category.CategoriesConfig"
        ]
      },
      {
        "name": "setDownloading",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.DownloadingConfig"
        ]
      },
      {
        "name": "setGenericStorage",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setIndexers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMain",
        "parameterTypes": [
          "org.nzbhydra.config.MainConfig"
        ]
      },
      {
        "name": "setNotificationConfig",
        "parameterTypes": [
          "org.nzbhydra.config.NotificationConfig"
        ]
      },
      {
        "name": "setSearching",
        "parameterTypes": [
          "org.nzbhydra.config.SearchingConfig"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAuth",
        "parameterTypes": []
      },
      {
        "name": "getCategoriesConfig",
        "parameterTypes": []
      },
      {
        "name": "getDownloading",
        "parameterTypes": []
      },
      {
        "name": "getGenericStorage",
        "parameterTypes": []
      },
      {
        "name": "getIndexers",
        "parameterTypes": []
      },
      {
        "name": "getMain",
        "parameterTypes": []
      },
      {
        "name": "getNotificationConfig",
        "parameterTypes": []
      },
      {
        "name": "getSearching",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setAuth",
        "parameterTypes": [
          "org.nzbhydra.config.auth.AuthConfig"
        ]
      },
      {
        "name": "setCategoriesConfig",
        "parameterTypes": [
          "org.nzbhydra.config.category.CategoriesConfig"
        ]
      },
      {
        "name": "setDownloading",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.DownloadingConfig"
        ]
      },
      {
        "name": "setGenericStorage",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setIndexers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMain",
        "parameterTypes": [
          "org.nzbhydra.config.MainConfig"
        ]
      },
      {
        "name": "setNotificationConfig",
        "parameterTypes": [
          "org.nzbhydra.config.NotificationConfig"
        ]
      },
      {
        "name": "setSearching",
        "parameterTypes": [
          "org.nzbhydra.config.SearchingConfig"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.BaseConfig",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.BaseConfigHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "onShutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "onShutdown",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.BaseConfigHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.ConfigProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.ConfigProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "handleNewConfig",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.ConfigSpringConfiguration",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "mainConfig",
        "parameterTypes": []
      },
      {
        "name": "downloaderConfig",
        "parameterTypes": []
      },
      {
        "name": "categoriesConfig",
        "parameterTypes": []
      },
      {
        "name": "searchingConfig",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.ConfigSpringConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "categoriesConfig",
        "parameterTypes": []
      },
      {
        "name": "downloaderConfig",
        "parameterTypes": []
      },
      {
        "name": "mainConfig",
        "parameterTypes": []
      },
      {
        "name": "searchingConfig",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.ConfigSpringConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.config.ConfigSpringConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.ConfigSpringConfiguration$$SpringCGLIB$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.ConfigSpringConfiguration$$SpringCGLIB$$2",
    "allDeclaredConstructors": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.ConfigWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.config.ConfigWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getConfig",
        "parameterTypes": [
          "jakarta.servlet.http.HttpSession"
        ]
      },
      {
        "name": "setConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.FileSystemBrowser",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.HistoryUserInfoType",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.LoggingConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getConsolelevel",
        "parameterTypes": []
      },
      {
        "name": "getHistoryUserInfoType",
        "parameterTypes": []
      },
      {
        "name": "getLogMaxHistory",
        "parameterTypes": []
      },
      {
        "name": "getLogfilelevel",
        "parameterTypes": []
      },
      {
        "name": "getMarkersToLog",
        "parameterTypes": []
      },
      {
        "name": "isLogGc",
        "parameterTypes": []
      },
      {
        "name": "isLogIpAddresses",
        "parameterTypes": []
      },
      {
        "name": "isLogUsername",
        "parameterTypes": []
      },
      {
        "name": "isMapIpToHost",
        "parameterTypes": []
      },
      {
        "name": "setConsolelevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHistoryUserInfoType",
        "parameterTypes": [
          "org.nzbhydra.config.HistoryUserInfoType"
        ]
      },
      {
        "name": "setLogGc",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogIpAddresses",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogMaxHistory",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLogUsername",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogfilelevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMapIpToHost",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMarkersToLog",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getConsolelevel",
        "parameterTypes": []
      },
      {
        "name": "getHistoryUserInfoType",
        "parameterTypes": []
      },
      {
        "name": "getLogMaxHistory",
        "parameterTypes": []
      },
      {
        "name": "getLogfilelevel",
        "parameterTypes": []
      },
      {
        "name": "getMarkersToLog",
        "parameterTypes": []
      },
      {
        "name": "isLogGc",
        "parameterTypes": []
      },
      {
        "name": "isLogIpAddresses",
        "parameterTypes": []
      },
      {
        "name": "isLogUsername",
        "parameterTypes": []
      },
      {
        "name": "isMapIpToHost",
        "parameterTypes": []
      },
      {
        "name": "setConsolelevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHistoryUserInfoType",
        "parameterTypes": [
          "org.nzbhydra.config.HistoryUserInfoType"
        ]
      },
      {
        "name": "setLogGc",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogIpAddresses",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogMaxHistory",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLogUsername",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogfilelevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMapIpToHost",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMarkersToLog",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "org.nzbhydra.config.LoggingConfig",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.MainConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getApiKey",
        "parameterTypes": []
      },
      {
        "name": "getBackupEveryXDays",
        "parameterTypes": []
      },
      {
        "name": "getBackupFolder",
        "parameterTypes": []
      },
      {
        "name": "getConfigVersion",
        "parameterTypes": []
      },
      {
        "name": "getDatabaseCompactTime",
        "parameterTypes": []
      },
      {
        "name": "getDatabaseRetentionTime",
        "parameterTypes": []
      },
      {
        "name": "getDatabaseWriteDelay",
        "parameterTypes": []
      },
      {
        "name": "getDeleteBackupsAfterWeeks",
        "parameterTypes": []
      },
      {
        "name": "getDereferer",
        "parameterTypes": []
      },
      {
        "name": "getHost",
        "parameterTypes": []
      },
      {
        "name": "getKeepHistoryForWeeks",
        "parameterTypes": []
      },
      {
        "name": "getKeepStatsForWeeks",
        "parameterTypes": []
      },
      {
        "name": "getLogging",
        "parameterTypes": []
      },
      {
        "name": "getPort",
        "parameterTypes": []
      },
      {
        "name": "getProxyHost",
        "parameterTypes": []
      },
      {
        "name": "getProxyIgnoreDomains",
        "parameterTypes": []
      },
      {
        "name": "getProxyPassword",
        "parameterTypes": []
      },
      {
        "name": "getProxyPort",
        "parameterTypes": []
      },
      {
        "name": "getProxyType",
        "parameterTypes": []
      },
      {
        "name": "getProxyUsername",
        "parameterTypes": []
      },
      {
        "name": "getRepositoryBase",
        "parameterTypes": []
      },
      {
        "name": "getSniDisabledFor",
        "parameterTypes": []
      },
      {
        "name": "getSslKeyStore",
        "parameterTypes": []
      },
      {
        "name": "getSslKeyStorePassword",
        "parameterTypes": []
      },
      {
        "name": "getTheme",
        "parameterTypes": []
      },
      {
        "name": "getUrlBase",
        "parameterTypes": []
      },
      {
        "name": "getVerifySslDisabledFor",
        "parameterTypes": []
      },
      {
        "name": "getXmx",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isBackupBeforeUpdate",
        "parameterTypes": []
      },
      {
        "name": "isDisableSslLocally",
        "parameterTypes": []
      },
      {
        "name": "isInstanceCounterDownloaded",
        "parameterTypes": []
      },
      {
        "name": "isKeepHistory",
        "parameterTypes": []
      },
      {
        "name": "isProxyIgnoreLocal",
        "parameterTypes": []
      },
      {
        "name": "isShowNews",
        "parameterTypes": []
      },
      {
        "name": "isShowUpdateBannerOnUpdatedExternally",
        "parameterTypes": []
      },
      {
        "name": "isShowWhatsNewBanner",
        "parameterTypes": []
      },
      {
        "name": "isShutdownForRestart",
        "parameterTypes": []
      },
      {
        "name": "isSsl",
        "parameterTypes": []
      },
      {
        "name": "isStartupBrowser",
        "parameterTypes": []
      },
      {
        "name": "isUpdateAutomatically",
        "parameterTypes": []
      },
      {
        "name": "isUpdateCheckEnabled",
        "parameterTypes": []
      },
      {
        "name": "isUpdateToPrereleases",
        "parameterTypes": []
      },
      {
        "name": "isUseCsrf",
        "parameterTypes": []
      },
      {
        "name": "isVerifySsl",
        "parameterTypes": []
      },
      {
        "name": "isWelcomeShown",
        "parameterTypes": []
      },
      {
        "name": "setApiKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBackupBeforeUpdate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBackupEveryXDays",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setBackupFolder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConfigVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDatabaseCompactTime",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDatabaseRetentionTime",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDatabaseWriteDelay",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDeleteBackupsAfterWeeks",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDereferer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisableSslLocally",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstanceCounterDownloaded",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeepHistory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeepHistoryForWeeks",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setKeepStatsForWeeks",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLogging",
        "parameterTypes": [
          "org.nzbhydra.config.LoggingConfig"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setProxyHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProxyIgnoreDomains",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setProxyIgnoreLocal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setProxyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProxyPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setProxyType",
        "parameterTypes": [
          "org.nzbhydra.config.ProxyType"
        ]
      },
      {
        "name": "setProxyUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRepositoryBase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShowNews",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowUpdateBannerOnUpdatedExternally",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowWhatsNewBanner",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShutdownForRestart",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSniDisabledFor",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSslKeyStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSslKeyStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStartupBrowser",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTheme",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateAutomatically",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUpdateCheckEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUpdateToPrereleases",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlBase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseCsrf",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVerifySsl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVerifySslDisabledFor",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setWelcomeShown",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setXmx",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getApiKey",
        "parameterTypes": []
      },
      {
        "name": "getBackupEveryXDays",
        "parameterTypes": []
      },
      {
        "name": "getBackupFolder",
        "parameterTypes": []
      },
      {
        "name": "getConfigVersion",
        "parameterTypes": []
      },
      {
        "name": "getDatabaseCompactTime",
        "parameterTypes": []
      },
      {
        "name": "getDatabaseRetentionTime",
        "parameterTypes": []
      },
      {
        "name": "getDatabaseWriteDelay",
        "parameterTypes": []
      },
      {
        "name": "getDeleteBackupsAfterWeeks",
        "parameterTypes": []
      },
      {
        "name": "getDereferer",
        "parameterTypes": []
      },
      {
        "name": "getHost",
        "parameterTypes": []
      },
      {
        "name": "getKeepHistoryForWeeks",
        "parameterTypes": []
      },
      {
        "name": "getKeepStatsForWeeks",
        "parameterTypes": []
      },
      {
        "name": "getLogging",
        "parameterTypes": []
      },
      {
        "name": "getPort",
        "parameterTypes": []
      },
      {
        "name": "getProxyHost",
        "parameterTypes": []
      },
      {
        "name": "getProxyIgnoreDomains",
        "parameterTypes": []
      },
      {
        "name": "getProxyPassword",
        "parameterTypes": []
      },
      {
        "name": "getProxyPort",
        "parameterTypes": []
      },
      {
        "name": "getProxyType",
        "parameterTypes": []
      },
      {
        "name": "getProxyUsername",
        "parameterTypes": []
      },
      {
        "name": "getRepositoryBase",
        "parameterTypes": []
      },
      {
        "name": "getSniDisabledFor",
        "parameterTypes": []
      },
      {
        "name": "getSslKeyStore",
        "parameterTypes": []
      },
      {
        "name": "getSslKeyStorePassword",
        "parameterTypes": []
      },
      {
        "name": "getTheme",
        "parameterTypes": []
      },
      {
        "name": "getUrlBase",
        "parameterTypes": []
      },
      {
        "name": "getVerifySslDisabledFor",
        "parameterTypes": []
      },
      {
        "name": "getXmx",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isBackupBeforeUpdate",
        "parameterTypes": []
      },
      {
        "name": "isCheckOpenPort",
        "parameterTypes": []
      },
      {
        "name": "isDisableSslLocally",
        "parameterTypes": []
      },
      {
        "name": "isInstanceCounterDownloaded",
        "parameterTypes": []
      },
      {
        "name": "isKeepHistory",
        "parameterTypes": []
      },
      {
        "name": "isProxyIgnoreLocal",
        "parameterTypes": []
      },
      {
        "name": "isProxyImages",
        "parameterTypes": []
      },
      {
        "name": "isShowNews",
        "parameterTypes": []
      },
      {
        "name": "isShowUpdateBannerOnUpdatedExternally",
        "parameterTypes": []
      },
      {
        "name": "isShowWhatsNewBanner",
        "parameterTypes": []
      },
      {
        "name": "isShutdownForRestart",
        "parameterTypes": []
      },
      {
        "name": "isSsl",
        "parameterTypes": []
      },
      {
        "name": "isStartupBrowser",
        "parameterTypes": []
      },
      {
        "name": "isUpdateAutomatically",
        "parameterTypes": []
      },
      {
        "name": "isUpdateCheckEnabled",
        "parameterTypes": []
      },
      {
        "name": "isUpdateToPrereleases",
        "parameterTypes": []
      },
      {
        "name": "isUseCsrf",
        "parameterTypes": []
      },
      {
        "name": "isVerifySsl",
        "parameterTypes": []
      },
      {
        "name": "isWelcomeShown",
        "parameterTypes": []
      },
      {
        "name": "setApiKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBackupBeforeUpdate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBackupEveryXDays",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setBackupFolder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCheckOpenPort",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setConfigVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDatabaseCompactTime",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDatabaseRetentionTime",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDatabaseWriteDelay",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDeleteBackupsAfterWeeks",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDereferer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisableSslLocally",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstanceCounterDownloaded",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeepHistory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeepHistoryForWeeks",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setKeepStatsForWeeks",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLogging",
        "parameterTypes": [
          "org.nzbhydra.config.LoggingConfig"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setProxyHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProxyIgnoreDomains",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setProxyIgnoreLocal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setProxyImages",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setProxyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProxyPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setProxyType",
        "parameterTypes": [
          "org.nzbhydra.config.ProxyType"
        ]
      },
      {
        "name": "setProxyUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRepositoryBase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShowNews",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowUpdateBannerOnUpdatedExternally",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowWhatsNewBanner",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShutdownForRestart",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSniDisabledFor",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSslKeyStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSslKeyStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStartupBrowser",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTheme",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateAutomatically",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUpdateCheckEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUpdateToPrereleases",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlBase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseCsrf",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVerifySsl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVerifySslDisabledFor",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setWelcomeShown",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setXmx",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.MainConfig",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.config.NotificationConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAppriseApiUrl",
        "parameterTypes": []
      },
      {
        "name": "getAppriseCliPath",
        "parameterTypes": []
      },
      {
        "name": "getAppriseType",
        "parameterTypes": []
      },
      {
        "name": "getDisplayNotificationsMax",
        "parameterTypes": []
      },
      {
        "name": "getEntries",
        "parameterTypes": []
      },
      {
        "name": "getFilterOuts",
        "parameterTypes": []
      },
      {
        "name": "isDisplayNotifications",
        "parameterTypes": []
      },
      {
        "name": "setAppriseApiUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAppriseCliPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAppriseType",
        "parameterTypes": [
          "org.nzbhydra.config.NotificationConfig$AppriseType"
        ]
      },
      {
        "name": "setDisplayNotifications",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDisplayNotificationsMax",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setEntries",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFilterOuts",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAppriseApiUrl",
        "parameterTypes": []
      },
      {
        "name": "getAppriseCliPath",
        "parameterTypes": []
      },
      {
        "name": "getAppriseType",
        "parameterTypes": []
      },
      {
        "name": "getDisplayNotificationsMax",
        "parameterTypes": []
      },
      {
        "name": "getEntries",
        "parameterTypes": []
      },
      {
        "name": "getFilterOuts",
        "parameterTypes": []
      },
      {
        "name": "isDisplayNotifications",
        "parameterTypes": []
      },
      {
        "name": "setAppriseApiUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAppriseCliPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAppriseType",
        "parameterTypes": [
          "org.nzbhydra.config.NotificationConfig$AppriseType"
        ]
      },
      {
        "name": "setDisplayNotifications",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDisplayNotificationsMax",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setEntries",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFilterOuts",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "org.nzbhydra.config.NotificationConfig",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.NotificationConfig$AppriseType",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.NotificationConfigEntry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAppriseUrls",
        "parameterTypes": []
      },
      {
        "name": "getBodyTemplate",
        "parameterTypes": []
      },
      {
        "name": "getEventType",
        "parameterTypes": []
      },
      {
        "name": "getMessageType",
        "parameterTypes": []
      },
      {
        "name": "getTitleTemplate",
        "parameterTypes": []
      },
      {
        "name": "setAppriseUrls",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBodyTemplate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEventType",
        "parameterTypes": [
          "org.nzbhydra.config.notification.NotificationEventType"
        ]
      },
      {
        "name": "setMessageType",
        "parameterTypes": [
          "org.nzbhydra.config.NotificationConfigEntry$MessageType"
        ]
      },
      {
        "name": "setTitleTemplate",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.nzbhydra.config.NotificationConfigEntry",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.NotificationConfigEntry$MessageType",
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.ProxyType",
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.SearchSource",
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.SearchSourceRestriction",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.SearchingConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAlwaysConvertIds",
        "parameterTypes": []
      },
      {
        "name": "getApplyRestrictions",
        "parameterTypes": []
      },
      {
        "name": "getCoverSize",
        "parameterTypes": []
      },
      {
        "name": "getCustomMappings",
        "parameterTypes": []
      },
      {
        "name": "getCustomQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "getDuplicateAgeThreshold",
        "parameterTypes": []
      },
      {
        "name": "getDuplicateSizeThresholdInPercent",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenGroups",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenPosters",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenRegex",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenWords",
        "parameterTypes": []
      },
      {
        "name": "getGenerateQueries",
        "parameterTypes": []
      },
      {
        "name": "getGenerateQueriesFormat",
        "parameterTypes": []
      },
      {
        "name": "getGlobalCacheTimeMinutes",
        "parameterTypes": []
      },
      {
        "name": "getIdFallbackToQueryGeneration",
        "parameterTypes": []
      },
      {
        "name": "getKeepSearchResultsForDays",
        "parameterTypes": []
      },
      {
        "name": "getLanguage",
        "parameterTypes": []
      },
      {
        "name": "getLanguagesToKeep",
        "parameterTypes": []
      },
      {
        "name": "getLoadLimitInternal",
        "parameterTypes": []
      },
      {
        "name": "getMaxAge",
        "parameterTypes": []
      },
      {
        "name": "getMinSeeders",
        "parameterTypes": []
      },
      {
        "name": "getPreselectQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "getRemoveTrailing",
        "parameterTypes": []
      },
      {
        "name": "getRequiredRegex",
        "parameterTypes": []
      },
      {
        "name": "getRequiredWords",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "getUserAgents",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isAlwaysShowQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreLoadLimitingForInternalSearches",
        "parameterTypes": []
      },
      {
        "name": "isIgnorePassworded",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreTemporarilyDisabled",
        "parameterTypes": []
      },
      {
        "name": "isLoadAllCachedOnInternal",
        "parameterTypes": []
      },
      {
        "name": "isReplaceUmlauts",
        "parameterTypes": []
      },
      {
        "name": "isSendTorznabCategories",
        "parameterTypes": []
      },
      {
        "name": "isShowQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "isTransformNewznabCategories",
        "parameterTypes": []
      },
      {
        "name": "isUseOriginalCategories",
        "parameterTypes": []
      },
      {
        "name": "isWrapApiErrors",
        "parameterTypes": []
      },
      {
        "name": "setAlwaysConvertIds",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setAlwaysShowQuickFilterButtons",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApplyRestrictions",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setCoverSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setCustomMappings",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCustomQuickFilterButtons",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDuplicateAgeThreshold",
        "parameterTypes": [
          "float"
        ]
      },
      {
        "name": "setDuplicateSizeThresholdInPercent",
        "parameterTypes": [
          "float"
        ]
      },
      {
        "name": "setForbiddenGroups",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setForbiddenPosters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setForbiddenRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForbiddenWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setGenerateQueries",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setGenerateQueriesFormat",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.QueryFormat"
        ]
      },
      {
        "name": "setGlobalCacheTimeMinutes",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIdFallbackToQueryGeneration",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setIgnoreLoadLimitingForInternalSearches",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIgnorePassworded",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIgnoreTemporarilyDisabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeepSearchResultsForDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLanguage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLanguagesToKeep",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLoadAllCachedOnInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLoadLimitInternal",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinSeeders",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPreselectQuickFilterButtons",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRemoveTrailing",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setReplaceUmlauts",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRequiredRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequiredWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSendTorznabCategories",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowQuickFilterButtons",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTransformNewznabCategories",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseOriginalCategories",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserAgents",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setWrapApiErrors",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAlwaysConvertIds",
        "parameterTypes": []
      },
      {
        "name": "getApplyRestrictions",
        "parameterTypes": []
      },
      {
        "name": "getCoverSize",
        "parameterTypes": []
      },
      {
        "name": "getCustomMappings",
        "parameterTypes": []
      },
      {
        "name": "getCustomQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "getDuplicateAgeThreshold",
        "parameterTypes": []
      },
      {
        "name": "getDuplicateSizeThresholdInPercent",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenGroups",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenPosters",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenRegex",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenWords",
        "parameterTypes": []
      },
      {
        "name": "getGenerateQueries",
        "parameterTypes": []
      },
      {
        "name": "getGenerateQueriesFormat",
        "parameterTypes": []
      },
      {
        "name": "getGlobalCacheTimeMinutes",
        "parameterTypes": []
      },
      {
        "name": "getHistoryForSearching",
        "parameterTypes": []
      },
      {
        "name": "getIdFallbackToQueryGeneration",
        "parameterTypes": []
      },
      {
        "name": "getKeepSearchResultsForDays",
        "parameterTypes": []
      },
      {
        "name": "getLanguage",
        "parameterTypes": []
      },
      {
        "name": "getLanguagesToKeep",
        "parameterTypes": []
      },
      {
        "name": "getLoadLimitInternal",
        "parameterTypes": []
      },
      {
        "name": "getMaxAge",
        "parameterTypes": []
      },
      {
        "name": "getMinSeeders",
        "parameterTypes": []
      },
      {
        "name": "getPreselectQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "getRemoveTrailing",
        "parameterTypes": []
      },
      {
        "name": "getRequiredRegex",
        "parameterTypes": []
      },
      {
        "name": "getRequiredWords",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "getUserAgents",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isAlwaysShowQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreLoadLimitingForInternalSearches",
        "parameterTypes": []
      },
      {
        "name": "isIgnorePassworded",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreTemporarilyDisabled",
        "parameterTypes": []
      },
      {
        "name": "isLoadAllCachedOnInternal",
        "parameterTypes": []
      },
      {
        "name": "isReplaceUmlauts",
        "parameterTypes": []
      },
      {
        "name": "isSendTorznabCategories",
        "parameterTypes": []
      },
      {
        "name": "isShowQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "isTransformNewznabCategories",
        "parameterTypes": []
      },
      {
        "name": "isUseOriginalCategories",
        "parameterTypes": []
      },
      {
        "name": "isWrapApiErrors",
        "parameterTypes": []
      },
      {
        "name": "setAlwaysConvertIds",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setAlwaysShowQuickFilterButtons",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApplyRestrictions",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setCoverSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setCustomMappings",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCustomQuickFilterButtons",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDuplicateAgeThreshold",
        "parameterTypes": [
          "float"
        ]
      },
      {
        "name": "setDuplicateSizeThresholdInPercent",
        "parameterTypes": [
          "float"
        ]
      },
      {
        "name": "setForbiddenGroups",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setForbiddenPosters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setForbiddenRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForbiddenWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setGenerateQueries",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setGenerateQueriesFormat",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.QueryFormat"
        ]
      },
      {
        "name": "setGlobalCacheTimeMinutes",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setHistoryForSearching",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIdFallbackToQueryGeneration",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setIgnoreLoadLimitingForInternalSearches",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIgnorePassworded",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIgnoreTemporarilyDisabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeepSearchResultsForDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLanguage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLanguagesToKeep",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLoadAllCachedOnInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLoadLimitInternal",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinSeeders",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPreselectQuickFilterButtons",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRemoveTrailing",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setReplaceUmlauts",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRequiredRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequiredWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSendTorznabCategories",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowQuickFilterButtons",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTransformNewznabCategories",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseOriginalCategories",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserAgents",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setWrapApiErrors",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.SearchingConfig",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.config.auth.AuthConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAuthHeader",
        "parameterTypes": []
      },
      {
        "name": "getAuthHeaderIpRanges",
        "parameterTypes": []
      },
      {
        "name": "getAuthType",
        "parameterTypes": []
      },
      {
        "name": "getRememberMeValidityDays",
        "parameterTypes": []
      },
      {
        "name": "getUsers",
        "parameterTypes": []
      },
      {
        "name": "isAllowApiStats",
        "parameterTypes": []
      },
      {
        "name": "isRememberUsers",
        "parameterTypes": []
      },
      {
        "name": "isRestrictAdmin",
        "parameterTypes": []
      },
      {
        "name": "isRestrictDetailsDl",
        "parameterTypes": []
      },
      {
        "name": "isRestrictIndexerSelection",
        "parameterTypes": []
      },
      {
        "name": "isRestrictSearch",
        "parameterTypes": []
      },
      {
        "name": "isRestrictStats",
        "parameterTypes": []
      },
      {
        "name": "setAllowApiStats",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAuthHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAuthHeaderIpRanges",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAuthType",
        "parameterTypes": [
          "org.nzbhydra.config.auth.AuthType"
        ]
      },
      {
        "name": "setRememberMeValidityDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRememberUsers",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestrictAdmin",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestrictDetailsDl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestrictIndexerSelection",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestrictSearch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestrictStats",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUsers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAuthHeader",
        "parameterTypes": []
      },
      {
        "name": "getAuthHeaderIpRanges",
        "parameterTypes": []
      },
      {
        "name": "getAuthType",
        "parameterTypes": []
      },
      {
        "name": "getRememberMeValidityDays",
        "parameterTypes": []
      },
      {
        "name": "getUsers",
        "parameterTypes": []
      },
      {
        "name": "isAllowApiStats",
        "parameterTypes": []
      },
      {
        "name": "isRememberUsers",
        "parameterTypes": []
      },
      {
        "name": "isRestrictAdmin",
        "parameterTypes": []
      },
      {
        "name": "isRestrictDetailsDl",
        "parameterTypes": []
      },
      {
        "name": "isRestrictIndexerSelection",
        "parameterTypes": []
      },
      {
        "name": "isRestrictSearch",
        "parameterTypes": []
      },
      {
        "name": "isRestrictStats",
        "parameterTypes": []
      },
      {
        "name": "setAllowApiStats",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAuthHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAuthHeaderIpRanges",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAuthType",
        "parameterTypes": [
          "org.nzbhydra.config.auth.AuthType"
        ]
      },
      {
        "name": "setRememberMeValidityDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRememberUsers",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestrictAdmin",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestrictDetailsDl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestrictIndexerSelection",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestrictSearch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestrictStats",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUsers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "org.nzbhydra.config.auth.AuthConfig",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.auth.AuthType",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.auth.UserAuthConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "isMaySeeAdmin",
        "parameterTypes": []
      },
      {
        "name": "isMaySeeDetailsDl",
        "parameterTypes": []
      },
      {
        "name": "isMaySeeStats",
        "parameterTypes": []
      },
      {
        "name": "isShowIndexerSelection",
        "parameterTypes": []
      },
      {
        "name": "setMaySeeAdmin",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaySeeDetailsDl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaySeeStats",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShowIndexerSelection",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.nzbhydra.config.auth.UserAuthConfig",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.category.CategoriesConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "getDefaultCategory",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEnableCategorySizes",
        "parameterTypes": []
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDefaultCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnableCategorySizes",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "getDefaultCategory",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEnableCategorySizes",
        "parameterTypes": []
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDefaultCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnableCategorySizes",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.category.CategoriesConfig",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.config.category.Category",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getApplyRestrictionsType",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenRegex",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenWords",
        "parameterTypes": []
      },
      {
        "name": "getIgnoreResultsFrom",
        "parameterTypes": []
      },
      {
        "name": "getMaxSizePreset",
        "parameterTypes": []
      },
      {
        "name": "getMinSizePreset",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNewznabCategories",
        "parameterTypes": []
      },
      {
        "name": "getRequiredRegex",
        "parameterTypes": []
      },
      {
        "name": "getRequiredWords",
        "parameterTypes": []
      },
      {
        "name": "getSearchType",
        "parameterTypes": []
      },
      {
        "name": "getSubtype",
        "parameterTypes": []
      },
      {
        "name": "isApplySizeLimitsToApi",
        "parameterTypes": []
      },
      {
        "name": "isMayBeSelected",
        "parameterTypes": []
      },
      {
        "name": "isPreselect",
        "parameterTypes": []
      },
      {
        "name": "setApplyRestrictionsType",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setApplySizeLimitsToApi",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForbiddenRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForbiddenWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIgnoreResultsFrom",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setMaxSizePreset",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMayBeSelected",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMinSizePreset",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNewznabCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPreselect",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRequiredRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequiredWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSearchType",
        "parameterTypes": [
          "org.nzbhydra.config.searching.SearchType"
        ]
      },
      {
        "name": "setSubtype",
        "parameterTypes": [
          "org.nzbhydra.config.category.Category$Subtype"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getApplyRestrictionsType",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenRegex",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenWords",
        "parameterTypes": []
      },
      {
        "name": "getIgnoreResultsFrom",
        "parameterTypes": []
      },
      {
        "name": "getMaxSizePreset",
        "parameterTypes": []
      },
      {
        "name": "getMinSizePreset",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNewznabCategories",
        "parameterTypes": []
      },
      {
        "name": "getRequiredRegex",
        "parameterTypes": []
      },
      {
        "name": "getRequiredWords",
        "parameterTypes": []
      },
      {
        "name": "getSearchType",
        "parameterTypes": []
      },
      {
        "name": "getSubtype",
        "parameterTypes": []
      },
      {
        "name": "isApplySizeLimitsToApi",
        "parameterTypes": []
      },
      {
        "name": "isMayBeSelected",
        "parameterTypes": []
      },
      {
        "name": "isPreselect",
        "parameterTypes": []
      },
      {
        "name": "setApplyRestrictionsType",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setApplySizeLimitsToApi",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForbiddenRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForbiddenWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIgnoreResultsFrom",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setMaxSizePreset",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMayBeSelected",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMinSizePreset",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNewznabCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPreselect",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRequiredRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequiredWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSearchType",
        "parameterTypes": [
          "org.nzbhydra.config.searching.SearchType"
        ]
      },
      {
        "name": "setSubtype",
        "parameterTypes": [
          "org.nzbhydra.config.category.Category$Subtype"
        ]
      }
    ],
    "name": "org.nzbhydra.config.category.Category",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.category.Category$Subtype",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.category.NewznabCategoriesDeserializer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "deserialize",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.databind.DeserializationContext"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.category.NewznabCategoriesSerializer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "serialize",
        "parameterTypes": [
          "java.lang.Object",
          "com.fasterxml.jackson.core.JsonGenerator",
          "com.fasterxml.jackson.databind.SerializerProvider"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.downloading.DownloadType",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.downloading.DownloaderConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getApiKey",
        "parameterTypes": []
      },
      {
        "name": "getDefaultCategory",
        "parameterTypes": []
      },
      {
        "name": "getDownloadType",
        "parameterTypes": []
      },
      {
        "name": "getDownloaderType",
        "parameterTypes": []
      },
      {
        "name": "getIconCssClass",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNzbAddingType",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "isAddPaused",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setAddPaused",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApiKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDownloadType",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.DownloadType"
        ]
      },
      {
        "name": "setDownloaderType",
        "parameterTypes": [
          "org.nzbhydra.downloading.DownloaderType"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIconCssClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNzbAddingType",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.NzbAddingType"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getApiKey",
        "parameterTypes": []
      },
      {
        "name": "getDefaultCategory",
        "parameterTypes": []
      },
      {
        "name": "getDownloadType",
        "parameterTypes": []
      },
      {
        "name": "getDownloaderType",
        "parameterTypes": []
      },
      {
        "name": "getIconCssClass",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNzbAddingType",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "isAddPaused",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setAddPaused",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApiKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDownloadType",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.DownloadType"
        ]
      },
      {
        "name": "setDownloaderType",
        "parameterTypes": [
          "org.nzbhydra.downloading.DownloaderType"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIconCssClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNzbAddingType",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.NzbAddingType"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.nzbhydra.config.downloading.DownloaderConfig",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.downloading.DownloadingConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDownloaders",
        "parameterTypes": []
      },
      {
        "name": "getExternalUrl",
        "parameterTypes": []
      },
      {
        "name": "getFallbackForFailed",
        "parameterTypes": []
      },
      {
        "name": "getNzbAccessType",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryDownloader",
        "parameterTypes": []
      },
      {
        "name": "getSaveNzbsTo",
        "parameterTypes": []
      },
      {
        "name": "getSaveTorrentsTo",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isSendMagnetLinks",
        "parameterTypes": []
      },
      {
        "name": "isShowDownloaderStatus",
        "parameterTypes": []
      },
      {
        "name": "isUpdateStatuses",
        "parameterTypes": []
      },
      {
        "name": "setDownloaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setExternalUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFallbackForFailed",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setNzbAccessType",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.FileDownloadAccessType"
        ]
      },
      {
        "name": "setPrimaryDownloader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSaveNzbsTo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSaveTorrentsTo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSendMagnetLinks",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowDownloaderStatus",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUpdateStatuses",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDownloaders",
        "parameterTypes": []
      },
      {
        "name": "getExternalUrl",
        "parameterTypes": []
      },
      {
        "name": "getFallbackForFailed",
        "parameterTypes": []
      },
      {
        "name": "getNzbAccessType",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryDownloader",
        "parameterTypes": []
      },
      {
        "name": "getSaveNzbsTo",
        "parameterTypes": []
      },
      {
        "name": "getSaveTorrentsTo",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isSendMagnetLinks",
        "parameterTypes": []
      },
      {
        "name": "isShowDownloaderStatus",
        "parameterTypes": []
      },
      {
        "name": "isUpdateStatuses",
        "parameterTypes": []
      },
      {
        "name": "setDownloaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setExternalUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFallbackForFailed",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setNzbAccessType",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.FileDownloadAccessType"
        ]
      },
      {
        "name": "setPrimaryDownloader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSaveNzbsTo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSaveTorrentsTo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSendMagnetLinks",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowDownloaderStatus",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUpdateStatuses",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.downloading.DownloadingConfig",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.downloading.FileDownloadAccessType",
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.downloading.NzbAddingType",
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.indexer.BackendType",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.indexer.IndexerCategoryConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAnime",
        "parameterTypes": []
      },
      {
        "name": "getAudiobook",
        "parameterTypes": []
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "getComic",
        "parameterTypes": []
      },
      {
        "name": "getEbook",
        "parameterTypes": []
      },
      {
        "name": "getMagazine",
        "parameterTypes": []
      },
      {
        "name": "setAnime",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setAudiobook",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setComic",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setEbook",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMagazine",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAnime",
        "parameterTypes": []
      },
      {
        "name": "getAudiobook",
        "parameterTypes": []
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "getComic",
        "parameterTypes": []
      },
      {
        "name": "getEbook",
        "parameterTypes": []
      },
      {
        "name": "getMagazine",
        "parameterTypes": []
      },
      {
        "name": "setAnime",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setAudiobook",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setComic",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setEbook",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMagazine",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "org.nzbhydra.config.indexer.IndexerCategoryConfig",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.indexer.IndexerCategoryConfig$MainCategory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getSubCategories",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSubCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getSubCategories",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSubCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "org.nzbhydra.config.indexer.IndexerCategoryConfig$MainCategory",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.indexer.IndexerCategoryConfig$SubCategory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.nzbhydra.config.indexer.IndexerCategoryConfig$SubCategory",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.indexer.IndexerConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getApiKey",
        "parameterTypes": []
      },
      {
        "name": "getApiPath",
        "parameterTypes": []
      },
      {
        "name": "getBackend",
        "parameterTypes": []
      },
      {
        "name": "getCategoryMapping",
        "parameterTypes": []
      },
      {
        "name": "getColor",
        "parameterTypes": []
      },
      {
        "name": "getCustomParameters",
        "parameterTypes": []
      },
      {
        "name": "getDisabledAt",
        "parameterTypes": []
      },
      {
        "name": "getDisabledLevel",
        "parameterTypes": []
      },
      {
        "name": "getDisabledUntil",
        "parameterTypes": []
      },
      {
        "name": "getDownloadLimit",
        "parameterTypes": []
      },
      {
        "name": "getEnabledCategories",
        "parameterTypes": []
      },
      {
        "name": "getEnabledForSearchSource",
        "parameterTypes": []
      },
      {
        "name": "getGeneralMinSize",
        "parameterTypes": []
      },
      {
        "name": "getHitLimit",
        "parameterTypes": []
      },
      {
        "name": "getHitLimitResetTime",
        "parameterTypes": []
      },
      {
        "name": "getHost",
        "parameterTypes": []
      },
      {
        "name": "getLastError",
        "parameterTypes": []
      },
      {
        "name": "getLoadLimitOnRandom",
        "parameterTypes": []
      },
      {
        "name": "getMinSeeders",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getSchedule",
        "parameterTypes": []
      },
      {
        "name": "getScore",
        "parameterTypes": []
      },
      {
        "name": "getSearchModuleType",
        "parameterTypes": []
      },
      {
        "name": "getState",
        "parameterTypes": []
      },
      {
        "name": "getSupportedSearchIds",
        "parameterTypes": []
      },
      {
        "name": "getSupportedSearchTypes",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getVipExpirationDate",
        "parameterTypes": []
      },
      {
        "name": "isAllCapsChecked",
        "parameterTypes": []
      },
      {
        "name": "isConfigComplete",
        "parameterTypes": []
      },
      {
        "name": "isPreselect",
        "parameterTypes": []
      },
      {
        "name": "isShowOnSearch",
        "parameterTypes": []
      },
      {
        "name": "setAllCapsChecked",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApiKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setApiPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBackend",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.BackendType"
        ]
      },
      {
        "name": "setCategoryMapping",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerCategoryConfig"
        ]
      },
      {
        "name": "setColor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConfigComplete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCustomParameters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisabledAt",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setDisabledLevel",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDisabledUntil",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setDownloadLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setEnabledCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEnabledForSearchSource",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setGeneralMinSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setHitLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setHitLimitResetTime",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoadLimitOnRandom",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinSeeders",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPreselect",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSchedule",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setScore",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSearchModuleType",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.SearchModuleType"
        ]
      },
      {
        "name": "setShowOnSearch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setState",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig$State"
        ]
      },
      {
        "name": "setSupportedSearchIds",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSupportedSearchTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVipExpirationDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getApiKey",
        "parameterTypes": []
      },
      {
        "name": "getApiPath",
        "parameterTypes": []
      },
      {
        "name": "getBackend",
        "parameterTypes": []
      },
      {
        "name": "getCategoryMapping",
        "parameterTypes": []
      },
      {
        "name": "getColor",
        "parameterTypes": []
      },
      {
        "name": "getCustomParameters",
        "parameterTypes": []
      },
      {
        "name": "getDisabledAt",
        "parameterTypes": []
      },
      {
        "name": "getDisabledLevel",
        "parameterTypes": []
      },
      {
        "name": "getDisabledUntil",
        "parameterTypes": []
      },
      {
        "name": "getDownloadLimit",
        "parameterTypes": []
      },
      {
        "name": "getEnabledCategories",
        "parameterTypes": []
      },
      {
        "name": "getEnabledForSearchSource",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenWordPrefix",
        "parameterTypes": []
      },
      {
        "name": "getGeneralMinSize",
        "parameterTypes": []
      },
      {
        "name": "getHitLimit",
        "parameterTypes": []
      },
      {
        "name": "getHitLimitResetTime",
        "parameterTypes": []
      },
      {
        "name": "getHost",
        "parameterTypes": []
      },
      {
        "name": "getLastError",
        "parameterTypes": []
      },
      {
        "name": "getLoadLimitOnRandom",
        "parameterTypes": []
      },
      {
        "name": "getMinSeeders",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getSchedule",
        "parameterTypes": []
      },
      {
        "name": "getScore",
        "parameterTypes": []
      },
      {
        "name": "getSearchModuleType",
        "parameterTypes": []
      },
      {
        "name": "getState",
        "parameterTypes": []
      },
      {
        "name": "getSupportedSearchIds",
        "parameterTypes": []
      },
      {
        "name": "getSupportedSearchTypes",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getVipExpirationDate",
        "parameterTypes": []
      },
      {
        "name": "isAllCapsChecked",
        "parameterTypes": []
      },
      {
        "name": "isBinsearchOtherGroups",
        "parameterTypes": []
      },
      {
        "name": "isConfigComplete",
        "parameterTypes": []
      },
      {
        "name": "isPreselect",
        "parameterTypes": []
      },
      {
        "name": "isShowOnSearch",
        "parameterTypes": []
      },
      {
        "name": "setAllCapsChecked",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApiKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setApiPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBackend",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.BackendType"
        ]
      },
      {
        "name": "setBinsearchOtherGroups",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCategoryMapping",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerCategoryConfig"
        ]
      },
      {
        "name": "setColor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConfigComplete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCustomParameters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisabledAt",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setDisabledLevel",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDisabledUntil",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setDownloadLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setEnabledCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEnabledForSearchSource",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setForbiddenWordPrefix",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig$ForbiddenWordPrefix"
        ]
      },
      {
        "name": "setGeneralMinSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setHitLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setHitLimitResetTime",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoadLimitOnRandom",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinSeeders",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPreselect",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSchedule",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setScore",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSearchModuleType",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.SearchModuleType"
        ]
      },
      {
        "name": "setShowOnSearch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setState",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig$State"
        ]
      },
      {
        "name": "setSupportedSearchIds",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSupportedSearchTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVipExpirationDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.nzbhydra.config.indexer.IndexerConfig",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.indexer.IndexerConfig$ForbiddenWordPrefix",
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.indexer.IndexerConfig$State",
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.indexer.QueryFormat",
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.indexer.SearchModuleType",
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.mediainfo.MediaIdType",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep003to004",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "migrate",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "forVersion",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep004to005",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "migrate",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "forVersion",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep005to006",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "migrate",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "forVersion",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep006to007",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "forVersion",
        "parameterTypes": []
      },
      {
        "name": "migrate",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep007to008",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "migrate",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "forVersion",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep008to009",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "migrate",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "forVersion",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep009to010",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "migrate",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "forVersion",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep010to011",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "forVersion",
        "parameterTypes": []
      },
      {
        "name": "migrate",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep011to012",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "migrate",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "forVersion",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep012to013",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "migrate",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "forVersion",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep013to014",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "forVersion",
        "parameterTypes": []
      },
      {
        "name": "migrate",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep014to015",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "migrate",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "forVersion",
        "parameterTypes": []
      },
      {
        "name": "lambda$migrate$0",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "lambda$migrate$1",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep015to016",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "forVersion",
        "parameterTypes": []
      },
      {
        "name": "migrate",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep016to017",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "forVersion",
        "parameterTypes": []
      },
      {
        "name": "migrate",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep017to018",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "forVersion",
        "parameterTypes": []
      },
      {
        "name": "migrate",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep018to019",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "migrate",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "forVersion",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.notification.NotificationEventType",
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "getDefaultCategory",
        "parameterTypes": []
      },
      {
        "name": "isEnableCategorySizes",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.safeconfig.SafeCategoriesConfig",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getIgnoreResultsFrom",
        "parameterTypes": []
      },
      {
        "name": "getMaxSizePreset",
        "parameterTypes": []
      },
      {
        "name": "getMinSizePreset",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getSearchType",
        "parameterTypes": []
      },
      {
        "name": "isMayBeSelected",
        "parameterTypes": []
      },
      {
        "name": "isPreselect",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.safeconfig.SafeCategory",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getAuthType",
        "parameterTypes": []
      },
      {
        "name": "getCategoriesConfig",
        "parameterTypes": []
      },
      {
        "name": "getDereferer",
        "parameterTypes": []
      },
      {
        "name": "getDownloading",
        "parameterTypes": []
      },
      {
        "name": "getIndexers",
        "parameterTypes": []
      },
      {
        "name": "getLogging",
        "parameterTypes": []
      },
      {
        "name": "getNotificationConfig",
        "parameterTypes": []
      },
      {
        "name": "getSearching",
        "parameterTypes": []
      },
      {
        "name": "isKeepHistory",
        "parameterTypes": []
      },
      {
        "name": "isShowNews",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.safeconfig.SafeConfig",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getDefaultCategory",
        "parameterTypes": []
      },
      {
        "name": "getDownloadType",
        "parameterTypes": []
      },
      {
        "name": "getDownloaderType",
        "parameterTypes": []
      },
      {
        "name": "getIconCssClass",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.safeconfig.SafeDownloaderConfig",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getDownloaders",
        "parameterTypes": []
      },
      {
        "name": "getFileDownloadAccessType",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryDownloader",
        "parameterTypes": []
      },
      {
        "name": "getSaveNzbsTo",
        "parameterTypes": []
      },
      {
        "name": "getSaveTorrentsTo",
        "parameterTypes": []
      },
      {
        "name": "isSendMagnetLinks",
        "parameterTypes": []
      },
      {
        "name": "isShowDownloaderStatus",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.safeconfig.SafeDownloadingConfig",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "getColor",
        "parameterTypes": []
      },
      {
        "name": "getEnabledForSearchSource",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getSearchModuleType",
        "parameterTypes": []
      },
      {
        "name": "getVipExpirationDate",
        "parameterTypes": []
      },
      {
        "name": "isPreselect",
        "parameterTypes": []
      },
      {
        "name": "isShowOnSearch",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.safeconfig.SafeIndexerConfig",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getHistoryUserInfoType",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.safeconfig.SafeLoggingConfig",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getDisplayNotificationsMax",
        "parameterTypes": []
      },
      {
        "name": "isDisplayNotifications",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.safeconfig.SafeNotificationConfig",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getCoverSize",
        "parameterTypes": []
      },
      {
        "name": "getCustomQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "getLoadLimitInternal",
        "parameterTypes": []
      },
      {
        "name": "getMaxAge",
        "parameterTypes": []
      },
      {
        "name": "getPreselectQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "isAlwaysShowQuickFilterButtons",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreTemporarilyDisabled",
        "parameterTypes": []
      },
      {
        "name": "isShowQuickFilterButtons",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.safeconfig.SafeSearchingConfig",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.searching.AffectedValue",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.searching.CustomQueryAndTitleMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAffectedValue",
        "parameterTypes": []
      },
      {
        "name": "getFrom",
        "parameterTypes": []
      },
      {
        "name": "getSearchType",
        "parameterTypes": []
      },
      {
        "name": "getTo",
        "parameterTypes": []
      },
      {
        "name": "isMatchAll",
        "parameterTypes": []
      },
      {
        "name": "setAffectedValue",
        "parameterTypes": [
          "org.nzbhydra.config.searching.AffectedValue"
        ]
      },
      {
        "name": "setFrom",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMatchAll",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSearchType",
        "parameterTypes": [
          "org.nzbhydra.config.searching.SearchType"
        ]
      },
      {
        "name": "setTo",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.nzbhydra.config.searching.CustomQueryAndTitleMapping",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.config.searching.SearchType",
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "prepareForSaving",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      },
      {
        "name": "updateAfterLoading",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.nzbhydra.config.validation.AuthConfigValidator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.validation.AuthConfigValidator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "prepareForSaving",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      },
      {
        "name": "updateAfterLoading",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "initializeNewConfig",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "prepareForSaving",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      },
      {
        "name": "updateAfterLoading",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.nzbhydra.config.validation.BaseConfigValidator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.validation.BaseConfigValidator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "initializeNewConfig",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "prepareForSaving",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      },
      {
        "name": "updateAfterLoading",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.validation.CategoriesConfigValidator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.validation.ConfigValidationResult",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getErrorMessages",
        "parameterTypes": []
      },
      {
        "name": "getNewConfig",
        "parameterTypes": []
      },
      {
        "name": "getWarningMessages",
        "parameterTypes": []
      },
      {
        "name": "isOk",
        "parameterTypes": []
      },
      {
        "name": "isRestartNeeded",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.validation.DownloaderConfigValidator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.nzbhydra.config.validation.DownloadingConfigValidator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.validation.DownloadingConfigValidator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.validation.IndexerConfigValidator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "prepareForSaving",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.validation.LoggingConfigValidator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "prepareForSaving",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "initializeNewConfig",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "prepareForSaving",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.nzbhydra.config.validation.MainConfigValidator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.validation.MainConfigValidator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "initializeNewConfig",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "prepareForSaving",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.validation.NotificationConfigValidator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.validation.SearchingConfigValidator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "prepareForSaving",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.validation.UserAuthConfigValidator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "prepareForSaving",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      },
      {
        "name": "updateAfterLoading",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.database.DatabaseRecreation$ExecutedScript",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getChecksum",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setScript",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setChecksum",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getScript",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.database.DatabaseRecreationConfig$$SpringCGLIB$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.database.DatabaseRecreationConfig$$SpringCGLIB$$2",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.debuginfos.DebugInfosProvider",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "environment"
      },
      {
        "name": "metricsEndpoint"
      },
      {
        "name": "wrapperDetector"
      },
      {
        "name": "logContentProvider"
      },
      {
        "name": "ssl"
      },
      {
        "name": "updateManager"
      },
      {
        "name": "configProvider"
      },
      {
        "name": "entityManager"
      },
      {
        "name": "requestFactory"
      },
      {
        "name": "threadDumpEndpoint"
      },
      {
        "name": "logAnonymizer"
      },
      {
        "name": "datasourceUrl"
      },
      {
        "name": "outdatedWrapperDetector"
      }
    ],
    "methods": [
      {
        "name": "executeSqlQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "executeSqlUpdate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "logMetrics",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getThreadCpuUsageChartData",
        "parameterTypes": []
      },
      {
        "name": "logMetrics",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.debuginfos.DebugInfosProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.debuginfos.DebugInfosProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getDebugInfosAsZip",
        "parameterTypes": []
      },
      {
        "name": "logMetrics",
        "parameterTypes": []
      },
      {
        "name": "logThreadDump",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.debuginfos.DebugInfosProvider$DiffableCategoriesConfig",
    "allDeclaredFields": true
  },
  {
    "name": "org.nzbhydra.debuginfos.DebugInfosProvider$DiffableCategoriesConfig",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setCategoriesMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "lambda$new$0",
        "parameterTypes": [
          "org.nzbhydra.config.category.Category"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getCategoriesMap",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.debuginfos.DebugInfosProvider$ThreadCpuUsage",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getCpuUsage",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getThreadName",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.debuginfos.DebugInfosProvider$TimeAndThreadCpuUsages",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getThreadCpuUsages",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getTime",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getThreadCpuUsageChartData",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.debuginfos.DebugInfosWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.debuginfos.DebugInfosWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "createAndProvideDebugInfos",
        "parameterTypes": []
      },
      {
        "name": "downloadLogFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCurrentLogFile",
        "parameterTypes": []
      },
      {
        "name": "getLogFilenames",
        "parameterTypes": []
      },
      {
        "name": "logThreadDump",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.AddFilesRequest",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDownloaderName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSearchResults",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.AddFilesRequest$SearchResult",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMappedCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOriginalCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSearchResultId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.DownloadResult",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setContent",
        "parameterTypes": [
          "byte[]"
        ]
      },
      {
        "name": "setDownloadEntity",
        "parameterTypes": [
          "org.nzbhydra.downloading.FileDownloadEntity"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isRedirect",
        "parameterTypes": []
      },
      {
        "name": "createErrorResult",
        "parameterTypes": [
          "java.lang.String",
          "org.nzbhydra.downloading.FileDownloadEntity"
        ]
      },
      {
        "name": "getStatusCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "createSuccessfulRedirectResult",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "org.nzbhydra.downloading.FileDownloadEntity"
        ]
      },
      {
        "name": "setStatusCode",
        "parameterTypes": [
          "org.springframework.http.HttpStatus"
        ]
      },
      {
        "name": "createErrorResult",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getContent",
        "parameterTypes": []
      },
      {
        "name": "createErrorResult",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpStatus",
          "org.nzbhydra.downloading.FileDownloadEntity"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCleanedUrl",
        "parameterTypes": []
      },
      {
        "name": "getAsResponseEntity",
        "parameterTypes": []
      },
      {
        "name": "createSuccessfulDownloadResult",
        "parameterTypes": [
          "java.lang.String",
          "byte[]",
          "org.nzbhydra.downloading.FileDownloadEntity"
        ]
      },
      {
        "name": "getFileName",
        "parameterTypes": []
      },
      {
        "name": "isSuccessful",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getError",
        "parameterTypes": []
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "setSuccessful",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDownloadEntity",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.DownloadStatusUpdater",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "downloaderProvider"
      },
      {
        "name": "configProvider"
      },
      {
        "name": "downloadRepository"
      }
    ],
    "methods": [
      {
        "name": "checkHistoryStatus",
        "parameterTypes": []
      },
      {
        "name": "checkQueueStatus",
        "parameterTypes": []
      },
      {
        "name": "onNzbDownloadEvent",
        "parameterTypes": [
          "org.nzbhydra.downloading.FileDownloadEvent"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "checkHistoryStatus",
        "parameterTypes": []
      },
      {
        "name": "checkQueueStatus",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.downloading.DownloadStatusUpdater",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.DownloadStatusUpdater",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "checkHistoryStatus",
        "parameterTypes": []
      },
      {
        "name": "checkQueueStatus",
        "parameterTypes": []
      },
      {
        "name": "onNzbDownloadEvent",
        "parameterTypes": [
          "org.nzbhydra.downloading.FileDownloadEvent"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.downloading.DownloaderType",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.FileDownloadEntity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAccessSource",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSource"
        ]
      },
      {
        "name": "setAge",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExternalId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNzbAccessType",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.FileDownloadAccessType"
        ]
      },
      {
        "name": "setSearchResult",
        "parameterTypes": [
          "org.nzbhydra.searching.db.SearchResultEntity"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "org.nzbhydra.downloading.FileDownloadStatus"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.nzbhydra.downloading.FileDownloadEntity",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.FileDownloadRepository",
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.FileHandler",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "eventPublisher"
      },
      {
        "name": "indexerSpecificDownloadExceptions"
      },
      {
        "name": "downloadRepository"
      },
      {
        "name": "configProvider"
      },
      {
        "name": "searchModuleProvider"
      },
      {
        "name": "clientHttpRequestFactory"
      },
      {
        "name": "shortRepository"
      },
      {
        "name": "searchResultRepository"
      },
      {
        "name": "urlCalculator"
      }
    ],
    "methods": [
      {
        "name": "handleRedirect",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSource",
          "org.nzbhydra.searching.db.SearchResultEntity",
          "java.lang.String"
        ]
      },
      {
        "name": "handleContentDownload",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSource",
          "org.nzbhydra.searching.db.SearchResultEntity"
        ]
      },
      {
        "name": "getFileByResult",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.FileDownloadAccessType",
          "org.nzbhydra.config.SearchSource",
          "org.nzbhydra.searching.db.SearchResultEntity"
        ]
      },
      {
        "name": "getFileByGuid",
        "parameterTypes": [
          "long",
          "org.nzbhydra.config.downloading.FileDownloadAccessType",
          "org.nzbhydra.config.SearchSource"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.downloading.FileHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.FileHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getDownloadLinkForResults",
        "parameterTypes": [
          "java.lang.Long",
          "boolean",
          "org.nzbhydra.searching.dtoseventsenums.SearchResultItem$DownloadType"
        ]
      },
      {
        "name": "getDownloadLinkForSendingToDownloader",
        "parameterTypes": [
          "java.lang.Long",
          "boolean",
          "org.nzbhydra.searching.dtoseventsenums.SearchResultItem$DownloadType"
        ]
      },
      {
        "name": "getFileByGuid",
        "parameterTypes": [
          "long",
          "org.nzbhydra.searching.searchrequests.SearchSource"
        ]
      },
      {
        "name": "getFilesAsZip",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getTemporaryZipFiles",
        "parameterTypes": []
      },
      {
        "name": "saveNzbToBlackhole",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.FileZipResponse",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAddedIds",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "getMissedIds",
        "parameterTypes": []
      },
      {
        "name": "getZipFilepath",
        "parameterTypes": []
      },
      {
        "name": "isSuccessful",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.downloading.IndexerSpecificDownloadExceptions",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.IndexerSpecificDownloadExceptions",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.downloading.IndexerUniquenessScoreSaver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.IndexerUniquenessScoreSaver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "onNzbDownloadEvent",
        "parameterTypes": [
          "org.nzbhydra.downloading.FileDownloadEvent"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.AddNzbsResponse",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAddedIds",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "getMissedIds",
        "parameterTypes": []
      },
      {
        "name": "isSuccessful",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.ConnectionCheckResult",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSuccessful",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setSuccessful",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderEntry",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setNzbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNzbName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getNzbId",
        "parameterTypes": []
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getNzbName",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getTime",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.downloading.downloaders.DownloaderInstatiator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderInstatiator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.downloading.downloaders.DownloaderProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "handleNewConfig",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderStatus",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDownloadRateFormatted",
        "parameterTypes": []
      },
      {
        "name": "getDownloadRateInKilobytes",
        "parameterTypes": []
      },
      {
        "name": "getDownloaderName",
        "parameterTypes": []
      },
      {
        "name": "getDownloaderType",
        "parameterTypes": []
      },
      {
        "name": "getDownloadingRatesInKilobytes",
        "parameterTypes": []
      },
      {
        "name": "getDownloadingTitle",
        "parameterTypes": []
      },
      {
        "name": "getDownloadingTitlePercentFinished",
        "parameterTypes": []
      },
      {
        "name": "getDownloadingTitleRemainingSizeFormatted",
        "parameterTypes": []
      },
      {
        "name": "getDownloadingTitleRemainingTimeFormatted",
        "parameterTypes": []
      },
      {
        "name": "getElementsInQueue",
        "parameterTypes": []
      },
      {
        "name": "getLastDownloadRate",
        "parameterTypes": []
      },
      {
        "name": "getRemainingSeconds",
        "parameterTypes": []
      },
      {
        "name": "getRemainingSizeFormatted",
        "parameterTypes": []
      },
      {
        "name": "getRemainingSizeInMegaBytes",
        "parameterTypes": []
      },
      {
        "name": "getRemainingTimeFormatted",
        "parameterTypes": []
      },
      {
        "name": "getState",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "isLastUpdateForNow",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getDownloadRateFormatted",
        "parameterTypes": []
      },
      {
        "name": "getDownloadRateInKilobytes",
        "parameterTypes": []
      },
      {
        "name": "getDownloaderName",
        "parameterTypes": []
      },
      {
        "name": "getDownloaderType",
        "parameterTypes": []
      },
      {
        "name": "getDownloadingRatesInKilobytes",
        "parameterTypes": []
      },
      {
        "name": "getDownloadingTitle",
        "parameterTypes": []
      },
      {
        "name": "getDownloadingTitlePercentFinished",
        "parameterTypes": []
      },
      {
        "name": "getDownloadingTitleRemainingSizeFormatted",
        "parameterTypes": []
      },
      {
        "name": "getDownloadingTitleRemainingTimeFormatted",
        "parameterTypes": []
      },
      {
        "name": "getElementsInQueue",
        "parameterTypes": []
      },
      {
        "name": "getLastDownloadRate",
        "parameterTypes": []
      },
      {
        "name": "getRemainingSeconds",
        "parameterTypes": []
      },
      {
        "name": "getRemainingSizeFormatted",
        "parameterTypes": []
      },
      {
        "name": "getRemainingSizeInMegaBytes",
        "parameterTypes": []
      },
      {
        "name": "getRemainingTimeFormatted",
        "parameterTypes": []
      },
      {
        "name": "getState",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "isLastUpdateForNow",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.downloading.downloaders.DownloaderStatus",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderStatus$DownloadRate",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setX",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getY",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getX",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setY",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.downloading.downloaders.DownloaderStatus$State",
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.downloading.downloaders.DownloaderStatusRetrieval",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderStatusRetrieval",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.downloading.downloaders.DownloaderWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "addNzb",
        "parameterTypes": [
          "org.nzbhydra.downloading.AddFilesRequest"
        ]
      },
      {
        "name": "checkConnection",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.DownloaderConfig"
        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "connect",
        "parameterTypes": []
      },
      {
        "name": "onClientDisconnect",
        "parameterTypes": [
          "org.springframework.web.socket.messaging.SessionDisconnectEvent"
        ]
      },
      {
        "name": "onClientSubscribe",
        "parameterTypes": [
          "org.springframework.web.socket.messaging.SessionSubscribeEvent"
        ]
      },
      {
        "name": "onShutdown",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.downloading.downloaders.DownloaderWebSocket",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderWebSocket",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "handleNewConfig",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      },
      {
        "name": "onShutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.AddNzbResponse",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getError",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "isStatus",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setNzoIds",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getNzoIds",
        "parameterTypes": []
      },
      {
        "name": "setError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.AddNzbResponse",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setNzoIds",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.CategoriesResponse",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.History",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getNoofslots",
        "parameterTypes": []
      },
      {
        "name": "getSlots",
        "parameterTypes": []
      },
      {
        "name": "setLast_history_update",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getMonth_size",
        "parameterTypes": []
      },
      {
        "name": "setNoofslots",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getDay_size",
        "parameterTypes": []
      },
      {
        "name": "getWeek_size",
        "parameterTypes": []
      },
      {
        "name": "setDay_size",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setSlots",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setWeek_size",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setTotal_size",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTotal_size",
        "parameterTypes": []
      },
      {
        "name": "getLast_history_update",
        "parameterTypes": []
      },
      {
        "name": "setMonth_size",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.HistoryEntry",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setBytes",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getCategory",
        "parameterTypes": []
      },
      {
        "name": "setReport",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAction_line",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNzo_id",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDownloaded",
        "parameterTypes": []
      },
      {
        "name": "getMd5sum",
        "parameterTypes": []
      },
      {
        "name": "getUrl_info",
        "parameterTypes": []
      },
      {
        "name": "getDownload_time",
        "parameterTypes": []
      },
      {
        "name": "getCompleted",
        "parameterTypes": []
      },
      {
        "name": "setPostproc_time",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setScript_line",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSize",
        "parameterTypes": []
      },
      {
        "name": "setStorage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCompleteness",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getHas_rating",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "setDownloaded",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setHas_rating",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getFail_message",
        "parameterTypes": []
      },
      {
        "name": "getCompleteness",
        "parameterTypes": []
      },
      {
        "name": "getNzb_name",
        "parameterTypes": []
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setScript_log",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getShow_details",
        "parameterTypes": []
      },
      {
        "name": "getPp",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getLoaded",
        "parameterTypes": []
      },
      {
        "name": "getBytes",
        "parameterTypes": []
      },
      {
        "name": "getNzo_id",
        "parameterTypes": []
      },
      {
        "name": "getScript_line",
        "parameterTypes": []
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStorage",
        "parameterTypes": []
      },
      {
        "name": "setDownload_time",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getAction_line",
        "parameterTypes": []
      },
      {
        "name": "setShow_details",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSeries",
        "parameterTypes": []
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "setPp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMeta",
        "parameterTypes": []
      },
      {
        "name": "setCompleted",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getScript_log",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "setFail_message",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "setRetry",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getStage_log",
        "parameterTypes": []
      },
      {
        "name": "getScript",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getPostproc_time",
        "parameterTypes": []
      },
      {
        "name": "setStage_log",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSeries",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setMd5sum",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl_info",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNzb_name",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getReport",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setMeta",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getRetry",
        "parameterTypes": []
      },
      {
        "name": "setScript",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoaded",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.HistoryResponse",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setHistory",
        "parameterTypes": [
          "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.History"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getHistory",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.Queue",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setSlots",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getHave_warnings",
        "parameterTypes": []
      },
      {
        "name": "setQuota",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKbpersec",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStart",
        "parameterTypes": []
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDiskspacetotal2",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLeft_quota",
        "parameterTypes": []
      },
      {
        "name": "getSizeleft",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getKbpersec",
        "parameterTypes": []
      },
      {
        "name": "setNoofslots",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setEta",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRating_enable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setLoadavg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDiskspace1",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSlots",
        "parameterTypes": []
      },
      {
        "name": "setScripts",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFinish",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setPaused_all",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getQuota",
        "parameterTypes": []
      },
      {
        "name": "setQueue_details",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPause_int",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRating_enable",
        "parameterTypes": []
      },
      {
        "name": "setMbleft",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSpeed",
        "parameterTypes": []
      },
      {
        "name": "getQueue_details",
        "parameterTypes": []
      },
      {
        "name": "getSize",
        "parameterTypes": []
      },
      {
        "name": "setSizeleft",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCache_size",
        "parameterTypes": []
      },
      {
        "name": "getDiskspace2_norm",
        "parameterTypes": []
      },
      {
        "name": "setDiskspace2",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDiskspace1",
        "parameterTypes": []
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCache_max",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoadavg",
        "parameterTypes": []
      },
      {
        "name": "setPaused",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCache_art",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRefresh_rate",
        "parameterTypes": []
      },
      {
        "name": "getMbleft",
        "parameterTypes": []
      },
      {
        "name": "getSpeedlimit_abs",
        "parameterTypes": []
      },
      {
        "name": "getPause_int",
        "parameterTypes": []
      },
      {
        "name": "setMb",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeleft",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNoofslots",
        "parameterTypes": []
      },
      {
        "name": "setLeft_quota",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "setFinishaction",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getNoofslots_total",
        "parameterTypes": []
      },
      {
        "name": "getDiskspacetotal2",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "setSpeedlimit_abs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLimit",
        "parameterTypes": []
      },
      {
        "name": "getCache_art",
        "parameterTypes": []
      },
      {
        "name": "getSpeedlimit",
        "parameterTypes": []
      },
      {
        "name": "getDiskspace2",
        "parameterTypes": []
      },
      {
        "name": "getCache_max",
        "parameterTypes": []
      },
      {
        "name": "setHave_warnings",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getScripts",
        "parameterTypes": []
      },
      {
        "name": "setStart",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getEta",
        "parameterTypes": []
      },
      {
        "name": "setSpeed",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMb",
        "parameterTypes": []
      },
      {
        "name": "setRefresh_rate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getPaused_all",
        "parameterTypes": []
      },
      {
        "name": "setLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setDiskspace2_norm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getHave_quota",
        "parameterTypes": []
      },
      {
        "name": "getFinishaction",
        "parameterTypes": []
      },
      {
        "name": "setNoofslots_total",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getFinish",
        "parameterTypes": []
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSpeedlimit",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHave_quota",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCache_size",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getTimeleft",
        "parameterTypes": []
      },
      {
        "name": "getPaused",
        "parameterTypes": []
      },
      {
        "name": "getDiskspace1_norm",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getDiskspacetotal1",
        "parameterTypes": []
      },
      {
        "name": "setDiskspace1_norm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDiskspacetotal1",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.Queue",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCache_art",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCache_max",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCache_size",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDiskspace1",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDiskspace1_norm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDiskspace2",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDiskspace2_norm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDiskspacetotal1",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDiskspacetotal2",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEta",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFinish",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setFinishaction",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setHave_quota",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setHave_warnings",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKbpersec",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLeft_quota",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLoadavg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMb",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMbleft",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNoofslots",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNoofslots_total",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPause_int",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPaused",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setPaused_all",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setQueue_details",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuota",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRating_enable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRefresh_rate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setScripts",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSizeleft",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSlots",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSpeed",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSpeedlimit",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSpeedlimit_abs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStart",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeleft",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.Queue",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.QueueEntry",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getAvg_age",
        "parameterTypes": []
      },
      {
        "name": "setMbleft",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNzo_id",
        "parameterTypes": []
      },
      {
        "name": "setMb",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSizeleft",
        "parameterTypes": []
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSize",
        "parameterTypes": []
      },
      {
        "name": "setIndex",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setFilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIndex",
        "parameterTypes": []
      },
      {
        "name": "getUnpackopts",
        "parameterTypes": []
      },
      {
        "name": "getMbleft",
        "parameterTypes": []
      },
      {
        "name": "setPriority",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFilename",
        "parameterTypes": []
      },
      {
        "name": "getHas_rating",
        "parameterTypes": []
      },
      {
        "name": "setUnpackopts",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setEta",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSizeleft",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEta",
        "parameterTypes": []
      },
      {
        "name": "getMbmissing",
        "parameterTypes": []
      },
      {
        "name": "getTimeleft",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setPercentage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHas_rating",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getScript",
        "parameterTypes": []
      },
      {
        "name": "setMbmissing",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "setScript",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAvg_age",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPercentage",
        "parameterTypes": []
      },
      {
        "name": "getPriority",
        "parameterTypes": []
      },
      {
        "name": "getMb",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setTimeleft",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNzo_id",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCat",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.QueueEntry",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.QueueResponse",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setQueue",
        "parameterTypes": [
          "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.Queue"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getQueue",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.QueueResponse",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setQueue",
        "parameterTypes": [
          "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.Queue"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.QueueResponse",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.StageLogEntry",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setActions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getActions",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.downloading.nzbs.NzbHandlingWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.nzbs.NzbHandlingWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "downloadNzbInternal",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "downloadNzbWithApikey",
        "parameterTypes": [
          "long",
          "java.lang.String"
        ]
      },
      {
        "name": "downloadNzbZip",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNzbZipData",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "saveNzbToBlackhole",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.torrents.TorrentFileHandler",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "fileHandler"
      },
      {
        "name": "searchResultRepository"
      },
      {
        "name": "configProvider"
      }
    ],
    "methods": [
      {
        "name": "getTorrentByGuid",
        "parameterTypes": [
          "long",
          "org.nzbhydra.config.downloading.FileDownloadAccessType",
          "org.nzbhydra.config.SearchSource"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.downloading.torrents.TorrentFileHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.torrents.TorrentFileHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.downloading.torrents.TorrentHandlingWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.torrents.TorrentHandlingWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.exceptionanalyzers.YAMLExceptionAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.externaltools.ExternalTools",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.externaltools.ExternalTools",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.externaltools.ExternalTools$XdarrAddRequestField",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.externaltools.ExternalTools$XdarrAddRequestResponse",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "isWarning",
        "parameterTypes": []
      },
      {
        "name": "setSeverity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSeverity",
        "parameterTypes": []
      },
      {
        "name": "setErrorMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setWarning",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getErrorMessage",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setPropertyName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getPropertyName",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.externaltools.ExternalTools$XdarrIndexer",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setEnableRss",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getTags",
        "parameterTypes": []
      },
      {
        "name": "getEnableRss",
        "parameterTypes": []
      },
      {
        "name": "setSupportsRss",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDownloadClientId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getEnableSearch",
        "parameterTypes": []
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEnableSearch",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setConfigContract",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPriority",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setInfoLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImplementationName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConfigContract",
        "parameterTypes": []
      },
      {
        "name": "getDownloadClientId",
        "parameterTypes": []
      },
      {
        "name": "getPriority",
        "parameterTypes": []
      },
      {
        "name": "getEnableInteractiveSearch",
        "parameterTypes": []
      },
      {
        "name": "getInfoLink",
        "parameterTypes": []
      },
      {
        "name": "setTags",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getSupportsSearch",
        "parameterTypes": []
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getImplementationName",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getSupportsRss",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnableAutomaticSearch",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getProtocol",
        "parameterTypes": []
      },
      {
        "name": "getImplementation",
        "parameterTypes": []
      },
      {
        "name": "setImplementation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSupportsSearch",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEnableInteractiveSearch",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getEnableAutomaticSearch",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.externaltools.ExternalToolsWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.externaltools.ExternalToolsWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.fortests.DebugWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.fortests.DebugWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.fortests.NewznabItemData",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setPubDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "getSize",
        "parameterTypes": []
      },
      {
        "name": "getGroup",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "builder",
        "parameterTypes": []
      },
      {
        "name": "getNewznabCategories",
        "parameterTypes": []
      },
      {
        "name": "getPoster",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getPubDate",
        "parameterTypes": []
      },
      {
        "name": "getLink",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPoster",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCategory",
        "parameterTypes": []
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNewznabCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.fortests.NewznabResponseData",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "builder",
        "parameterTypes": []
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setNewznabItems",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getTotal",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "setTotal",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getNewznabItems",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.genericstorage.GenericStorage",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.genericstorage.GenericStorage",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ],
    "name": "org.nzbhydra.genericstorage.GenericStorageWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.genericstorage.GenericStorageWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.FilterDefinition",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setBoolean",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getFilterType",
        "parameterTypes": []
      },
      {
        "name": "setFilterValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getFilterValue",
        "parameterTypes": []
      },
      {
        "name": "setFilterType",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isBoolean",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.History",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "entityManager"
      },
      {
        "name": "indexerSearchRepository"
      },
      {
        "name": "searchRepository"
      }
    ],
    "methods": [
      {
        "name": "getHistory",
        "parameterTypes": [
          "org.nzbhydra.historystats.stats.HistoryRequest",
          "java.lang.String",
          "java.lang.Class"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getHistoryForSearching",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.historystats.History",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.historystats.History",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.HistoryWeb",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "history"
      }
    ],
    "methods": [
      {
        "name": "notificationHistory",
        "parameterTypes": [
          "org.nzbhydra.historystats.stats.HistoryRequest"
        ]
      },
      {
        "name": "searchHistoryDetails",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "downloadHistory",
        "parameterTypes": [
          "org.nzbhydra.historystats.stats.HistoryRequest"
        ]
      },
      {
        "name": "searchHistoryForSearchPage",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "searchHistory",
        "parameterTypes": [
          "org.nzbhydra.historystats.stats.HistoryRequest"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "searchHistoryForSearchPage",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ],
    "name": "org.nzbhydra.historystats.HistoryWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.historystats.HistoryWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.Stats",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "uniquenessScoreEntityRepository"
      },
      {
        "name": "indexerRepository"
      },
      {
        "name": "entityManager"
      },
      {
        "name": "shortRepository"
      },
      {
        "name": "searchResultRepository"
      },
      {
        "name": "searchModuleProvider"
      }
    ],
    "methods": [
      {
        "name": "getAllStats",
        "parameterTypes": [
          "org.nzbhydra.historystats.stats.StatsRequest"
        ]
      },
      {
        "name": "indexerScores",
        "parameterTypes": [
          "org.nzbhydra.historystats.stats.StatsRequest"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.historystats.Stats",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.historystats.Stats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.historystats.StatsWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.historystats.StatsWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.Anizb$NewznabHandlingStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.Binsearch$NewznabHandlingStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.DevIndexer",
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigProvider",
          "org.nzbhydra.indexers.IndexerRepository",
          "org.nzbhydra.searching.db.SearchResultRepository",
          "org.nzbhydra.indexers.IndexerApiAccessRepository",
          "org.nzbhydra.indexers.IndexerApiAccessEntityShortRepository",
          "org.nzbhydra.indexers.status.IndexerLimitRepository",
          "org.nzbhydra.indexers.IndexerWebAccess",
          "org.nzbhydra.searching.SearchResultAcceptor",
          "org.nzbhydra.searching.CategoryProvider",
          "org.nzbhydra.mediainfo.InfoProvider",
          "org.springframework.context.ApplicationEventPublisher",
          "org.nzbhydra.indexers.QueryGenerator",
          "org.nzbhydra.searching.CustomQueryAndTitleMappingHandler",
          "org.springframework.oxm.Unmarshaller",
          "org.nzbhydra.config.BaseConfigHandler"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigProvider",
          "org.nzbhydra.indexers.IndexerRepository",
          "org.nzbhydra.searching.db.SearchResultRepository",
          "org.nzbhydra.indexers.IndexerApiAccessRepository",
          "org.nzbhydra.indexers.IndexerApiAccessEntityShortRepository",
          "org.nzbhydra.indexers.status.IndexerLimitRepository",
          "org.nzbhydra.indexers.IndexerWebAccess",
          "org.nzbhydra.searching.SearchResultAcceptor",
          "org.nzbhydra.searching.CategoryProvider",
          "org.nzbhydra.mediainfo.InfoProvider",
          "org.springframework.context.ApplicationEventPublisher",
          "org.nzbhydra.indexers.QueryGenerator",
          "org.nzbhydra.searching.CustomQueryAndTitleMappingHandler",
          "org.springframework.oxm.Unmarshaller",
          "org.nzbhydra.config.BaseConfigHandler"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.DevIndexer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.DevIndexer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigProvider",
          "org.nzbhydra.indexers.IndexerRepository",
          "org.nzbhydra.searching.db.SearchResultRepository",
          "org.nzbhydra.indexers.IndexerApiAccessRepository",
          "org.nzbhydra.indexers.IndexerApiAccessEntityShortRepository",
          "org.nzbhydra.indexers.status.IndexerLimitRepository",
          "org.nzbhydra.indexers.IndexerWebAccess",
          "org.nzbhydra.searching.SearchResultAcceptor",
          "org.nzbhydra.searching.CategoryProvider",
          "org.nzbhydra.mediainfo.InfoProvider",
          "org.springframework.context.ApplicationEventPublisher",
          "org.nzbhydra.indexers.QueryGenerator",
          "org.nzbhydra.searching.CustomQueryAndTitleMappingHandler",
          "org.springframework.oxm.Unmarshaller",
          "org.nzbhydra.config.BaseConfigHandler"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.DevIndexer$DevIndexerHandlingStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.DogNzb",
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigProvider",
          "org.nzbhydra.indexers.IndexerRepository",
          "org.nzbhydra.searching.db.SearchResultRepository",
          "org.nzbhydra.indexers.IndexerApiAccessRepository",
          "org.nzbhydra.indexers.IndexerApiAccessEntityShortRepository",
          "org.nzbhydra.indexers.status.IndexerLimitRepository",
          "org.nzbhydra.indexers.IndexerWebAccess",
          "org.nzbhydra.searching.SearchResultAcceptor",
          "org.nzbhydra.searching.CategoryProvider",
          "org.nzbhydra.mediainfo.InfoProvider",
          "org.springframework.context.ApplicationEventPublisher",
          "org.nzbhydra.indexers.QueryGenerator",
          "org.nzbhydra.searching.CustomQueryAndTitleMappingHandler",
          "org.springframework.oxm.Unmarshaller",
          "org.nzbhydra.config.BaseConfigHandler"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigProvider",
          "org.nzbhydra.indexers.IndexerRepository",
          "org.nzbhydra.searching.db.SearchResultRepository",
          "org.nzbhydra.indexers.IndexerApiAccessRepository",
          "org.nzbhydra.indexers.IndexerApiAccessEntityShortRepository",
          "org.nzbhydra.indexers.status.IndexerLimitRepository",
          "org.nzbhydra.indexers.IndexerWebAccess",
          "org.nzbhydra.searching.SearchResultAcceptor",
          "org.nzbhydra.searching.CategoryProvider",
          "org.nzbhydra.mediainfo.InfoProvider",
          "org.springframework.context.ApplicationEventPublisher",
          "org.nzbhydra.indexers.QueryGenerator",
          "org.nzbhydra.searching.CustomQueryAndTitleMappingHandler",
          "org.springframework.oxm.Unmarshaller",
          "org.nzbhydra.config.BaseConfigHandler"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.DogNzb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.DogNzb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigProvider",
          "org.nzbhydra.indexers.IndexerRepository",
          "org.nzbhydra.searching.db.SearchResultRepository",
          "org.nzbhydra.indexers.IndexerApiAccessRepository",
          "org.nzbhydra.indexers.IndexerApiAccessEntityShortRepository",
          "org.nzbhydra.indexers.status.IndexerLimitRepository",
          "org.nzbhydra.indexers.IndexerWebAccess",
          "org.nzbhydra.searching.SearchResultAcceptor",
          "org.nzbhydra.searching.CategoryProvider",
          "org.nzbhydra.mediainfo.InfoProvider",
          "org.springframework.context.ApplicationEventPublisher",
          "org.nzbhydra.indexers.QueryGenerator",
          "org.nzbhydra.searching.CustomQueryAndTitleMappingHandler",
          "org.springframework.oxm.Unmarshaller",
          "org.nzbhydra.config.BaseConfigHandler"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.DogNzb$NewznabHandlingStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.Indexer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "cleanUpTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "completeIndexerSearchResult",
        "parameterTypes": [
          "java.lang.Object",
          "org.nzbhydra.searching.dtoseventsenums.IndexerSearchResult",
          "org.nzbhydra.searching.SearchResultAcceptor$AcceptorResult",
          "org.nzbhydra.searching.searchrequests.SearchRequest",
          "int",
          "java.lang.Integer"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getConfig",
        "parameterTypes": []
      },
      {
        "name": "getIndexerEntity",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getSearchResultItems",
        "parameterTypes": [
          "java.lang.Object",
          "org.nzbhydra.searching.searchrequests.SearchRequest"
        ]
      },
      {
        "name": "handleNewConfig",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "initialize",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig",
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "search",
        "parameterTypes": [
          "org.nzbhydra.searching.searchrequests.SearchRequest",
          "int",
          "java.lang.Integer"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "tryParseDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.IndexerApiAccessEntity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAccessType",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerApiAccessType"
        ]
      },
      {
        "name": "setError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIndexer",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "setResponseTime",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setResult",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerAccessResult"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.IndexerApiAccessEntity",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerApiAccessEntityShort",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setApiAccessType",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerApiAccessType"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIndexerId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSuccessful",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.IndexerApiAccessEntityShort",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerApiAccessEntityShortRepository",
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerApiAccessRepository",
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerEntity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.IndexerEntity",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerRepository",
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerSearchEntity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getIndexerEntity",
        "parameterTypes": []
      },
      {
        "name": "getResultsCount",
        "parameterTypes": []
      },
      {
        "name": "getSearchEntity",
        "parameterTypes": []
      },
      {
        "name": "getSuccessful",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIndexerEntity",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "setResultsCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSearchEntity",
        "parameterTypes": [
          "org.nzbhydra.searching.db.SearchEntity"
        ]
      },
      {
        "name": "setSuccessful",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIndexerEntity",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "setResultsCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSearchEntity",
        "parameterTypes": [
          "org.nzbhydra.searching.db.SearchEntity"
        ]
      },
      {
        "name": "setSuccessful",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.IndexerSearchEntity",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerSearchRepository",
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerStatusesCleanupTask",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigProvider",
          "org.nzbhydra.config.BaseConfigHandler"
        ]
      },
      {
        "name": "cleanup",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.indexers.IndexerWebAccess",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerWebAccess",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.IndexerWebAccess$HydraUnmarshallingFailureException",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getResponse",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getUnmarshallingFailureException",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setUnmarshallingFailureException",
        "parameterTypes": [
          "org.springframework.oxm.UnmarshallingFailureException"
        ]
      },
      {
        "name": "setResponse",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.Newznab",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "completeIndexerSearchResult",
        "parameterTypes": [
          "java.lang.Object",
          "org.nzbhydra.searching.dtoseventsenums.IndexerSearchResult",
          "org.nzbhydra.searching.SearchResultAcceptor$AcceptorResult",
          "org.nzbhydra.searching.searchrequests.SearchRequest",
          "int",
          "java.lang.Integer"
        ]
      },
      {
        "name": "getIdToCategory",
        "parameterTypes": []
      },
      {
        "name": "getIndexerStatusRepository",
        "parameterTypes": []
      },
      {
        "name": "getNfo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUnmarshaller",
        "parameterTypes": []
      },
      {
        "name": "setIndexerStatusRepository",
        "parameterTypes": [
          "org.nzbhydra.indexers.status.IndexerLimitRepository"
        ]
      },
      {
        "name": "setUnmarshaller",
        "parameterTypes": [
          "org.springframework.oxm.Unmarshaller"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "completeIndexerSearchResult",
        "parameterTypes": [
          "java.lang.Object",
          "org.nzbhydra.searching.dtoseventsenums.IndexerSearchResult",
          "org.nzbhydra.searching.SearchResultAcceptor$AcceptorResult",
          "org.nzbhydra.searching.searchrequests.SearchRequest",
          "int",
          "java.lang.Integer"
        ]
      },
      {
        "name": "getBaseConfigHandler",
        "parameterTypes": []
      },
      {
        "name": "getDetails",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "getIdToCategory",
        "parameterTypes": []
      },
      {
        "name": "getIndexerStatusRepository",
        "parameterTypes": []
      },
      {
        "name": "getNfo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUnmarshaller",
        "parameterTypes": []
      },
      {
        "name": "setBaseConfigHandler",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfigHandler"
        ]
      },
      {
        "name": "setIndexerStatusRepository",
        "parameterTypes": [
          "org.nzbhydra.indexers.status.IndexerLimitRepository"
        ]
      },
      {
        "name": "setUnmarshaller",
        "parameterTypes": [
          "org.springframework.oxm.Unmarshaller"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.Newznab",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.Newznab$NewznabHandlingStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.NzbGeek$NewznabHandlingStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.NzbIndex$NewznabHandlingStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.indexers.QueryGenerator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.QueryGenerator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigProvider",
          "org.nzbhydra.indexers.IndexerRepository",
          "org.nzbhydra.searching.db.SearchResultRepository",
          "org.nzbhydra.indexers.IndexerApiAccessRepository",
          "org.nzbhydra.indexers.IndexerApiAccessEntityShortRepository",
          "org.nzbhydra.indexers.status.IndexerLimitRepository",
          "org.nzbhydra.indexers.IndexerWebAccess",
          "org.nzbhydra.searching.SearchResultAcceptor",
          "org.nzbhydra.searching.CategoryProvider",
          "org.nzbhydra.mediainfo.InfoProvider",
          "org.springframework.context.ApplicationEventPublisher",
          "org.nzbhydra.indexers.QueryGenerator",
          "org.nzbhydra.searching.CustomQueryAndTitleMappingHandler",
          "org.springframework.oxm.Unmarshaller",
          "org.nzbhydra.config.BaseConfigHandler"
        ]
      },
      {
        "name": "search",
        "parameterTypes": [
          "org.nzbhydra.searching.searchrequests.SearchRequest",
          "int",
          "java.lang.Integer"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.WtfNzb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.indexers.capscheck.IndexerChecker",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.capscheck.IndexerChecker",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.capscheck.IndexerChecker$CheckCapsRequest",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getKey",
        "parameterTypes": []
      },
      {
        "name": "setIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      },
      {
        "name": "setKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIdType",
        "parameterTypes": [
          "org.nzbhydra.config.mediainfo.MediaIdType"
        ]
      },
      {
        "name": "getIndexerConfig",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTitleExpectedToContain",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setTMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIdType",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setTitleExpectedToContain",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getTMode",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.capscheck.IndexerChecker$CheckerEvent",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "getIndexerName",
        "parameterTypes": []
      },
      {
        "name": "setIndexerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.capscheck.IndexerChecker$ConnectionCheckResponse",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setIndexerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIndexerName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.capscheck.IndexerChecker$SingleCheckCapsResponse",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setIdType",
        "parameterTypes": [
          "org.nzbhydra.config.mediainfo.MediaIdType"
        ]
      },
      {
        "name": "getApiMax",
        "parameterTypes": []
      },
      {
        "name": "isSupported",
        "parameterTypes": []
      },
      {
        "name": "setSupported",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBackend",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDownloadsMax",
        "parameterTypes": []
      },
      {
        "name": "getBackend",
        "parameterTypes": []
      },
      {
        "name": "setKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getIdType",
        "parameterTypes": []
      },
      {
        "name": "setApiMax",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getKey",
        "parameterTypes": []
      },
      {
        "name": "setDownloadsMax",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.indexers.capscheck.IndexerWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.capscheck.IndexerWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.indexers.capscheck.JacketConfigRetriever",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.capscheck.JacketConfigRetriever",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.indexers.capscheck.SimpleConnectionChecker",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.capscheck.SimpleConnectionChecker",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.status.IndexerLimit",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setApiHitLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setApiHits",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDownloadLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDownloads",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIndexer",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "setOldestApiHit",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setOldestDownload",
        "parameterTypes": [
          "java.time.Instant"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.status.IndexerLimit",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.status.IndexerLimitRepository",
    "allPublicMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.indexers.status.IndexerStatusesAndLimits",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.status.IndexerStatusesAndLimits",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.indexers.status.IndexerStatusesWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.status.IndexerStatusesWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.torznab.Torznab$NewznabHandlingStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.logging.ColorConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.nzbhydra.logging.EceptionFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "decide",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "updateMarkersFilter",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.logging.LogAnonymizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.logging.LogAnonymizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.logging.LogContentProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "decide",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "updateMarkersFilter",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.logging.LoggingMarkerFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.logging.LoggingMarkerFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "decide",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "handleConfigChangedEvent",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      },
      {
        "name": "updateMarkersFilter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.logging.MdcLogConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.nzbhydra.mapping.github.Asset",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUpdatedAt",
        "parameterTypes": []
      },
      {
        "name": "getBrowserDownloadUrl",
        "parameterTypes": []
      },
      {
        "name": "setState",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getContentType",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getDownloadCount",
        "parameterTypes": []
      },
      {
        "name": "setUpdatedAt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContentType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setCreatedAt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDownloadCount",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getState",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCreatedAt",
        "parameterTypes": []
      },
      {
        "name": "getSize",
        "parameterTypes": []
      },
      {
        "name": "setBrowserDownloadUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.github.Asset",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setBrowserDownloadUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContentType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreatedAt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDownloadCount",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setState",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdatedAt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.github.Release",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setAssetsUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setAssets",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getAssetsUrl",
        "parameterTypes": []
      },
      {
        "name": "setHtmlUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublishedAt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTarballUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDraft",
        "parameterTypes": []
      },
      {
        "name": "setPrerelease",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getZipballUrl",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPublishedAt",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setZipballUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTagName",
        "parameterTypes": []
      },
      {
        "name": "getTarballUrl",
        "parameterTypes": []
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "getPrerelease",
        "parameterTypes": []
      },
      {
        "name": "setTagName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUploadUrl",
        "parameterTypes": []
      },
      {
        "name": "setCreatedAt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTargetCommitish",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setTargetCommitish",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUploadUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAssets",
        "parameterTypes": []
      },
      {
        "name": "getCreatedAt",
        "parameterTypes": []
      },
      {
        "name": "getHtmlUrl",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setDraft",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.github.Release",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAssets",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAssetsUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreatedAt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDraft",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setHtmlUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrerelease",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setPublishedAt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTagName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTarballUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTargetCommitish",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUploadUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setZipballUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.mapping.newznab.ActionAttribute",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.NewznabParameters",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setTvdbid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getApikey",
        "parameterTypes": []
      },
      {
        "name": "isExtended",
        "parameterTypes": []
      },
      {
        "name": "setCachetime",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTvmazeid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMinage",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "setMaxsize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getO",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "setEp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLimit",
        "parameterTypes": []
      },
      {
        "name": "getGenre",
        "parameterTypes": []
      },
      {
        "name": "getMinsize",
        "parameterTypes": []
      },
      {
        "name": "getCachetime",
        "parameterTypes": []
      },
      {
        "name": "setIndexers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getImdbid",
        "parameterTypes": []
      },
      {
        "name": "setMaxage",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setTmdbid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isRaw",
        "parameterTypes": []
      },
      {
        "name": "getMaxage",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "setExtended",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getT",
        "parameterTypes": []
      },
      {
        "name": "getEp",
        "parameterTypes": []
      },
      {
        "name": "setMinage",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTraktId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMinsize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getSeason",
        "parameterTypes": []
      },
      {
        "name": "setAuthor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImdbid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTmdbid",
        "parameterTypes": []
      },
      {
        "name": "setT",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.ActionAttribute"
        ]
      },
      {
        "name": "getAuthor",
        "parameterTypes": []
      },
      {
        "name": "setApikey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMaxsize",
        "parameterTypes": []
      },
      {
        "name": "getIndexers",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setRid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getQ",
        "parameterTypes": []
      },
      {
        "name": "setRaw",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getRid",
        "parameterTypes": []
      },
      {
        "name": "setGenre",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getTvmazeid",
        "parameterTypes": []
      },
      {
        "name": "cacheKey",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.NewznabResponse$SearchType"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQ",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCat",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSeason",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getCat",
        "parameterTypes": []
      },
      {
        "name": "getTvdbid",
        "parameterTypes": []
      },
      {
        "name": "setO",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.OutputType"
        ]
      },
      {
        "name": "getTraktId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.NewznabParameters",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getApikey",
        "parameterTypes": []
      },
      {
        "name": "getQ",
        "parameterTypes": []
      },
      {
        "name": "getT",
        "parameterTypes": []
      },
      {
        "name": "setApikey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQ",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setT",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.ActionAttribute"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.NewznabResponse",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getSearchType",
        "parameterTypes": []
      },
      {
        "name": "setSearchType",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.NewznabResponse$SearchType"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCaps",
        "parameterTypes": []
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getError",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getLimits",
        "parameterTypes": []
      },
      {
        "name": "getRetention",
        "parameterTypes": []
      },
      {
        "name": "getRssChannel",
        "parameterTypes": []
      },
      {
        "name": "getSearchType",
        "parameterTypes": []
      },
      {
        "name": "getSearching",
        "parameterTypes": []
      },
      {
        "name": "getServer",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "setSearchType",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.NewznabResponse$SearchType"
        ]
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.NewznabResponse",
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "JSON"
      },
      {
        "name": "NEWZNAB"
      },
      {
        "name": "TORZNAB"
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.NewznabResponse$SearchType"
  },
  {
    "name": "org.nzbhydra.mapping.newznab.NewznabResponse$SearchType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "JSON"
      },
      {
        "name": "NEWZNAB"
      },
      {
        "name": "TORZNAB"
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.JsonPubdateDeserializer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "deserialize",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.databind.DeserializationContext"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.JsonPubdateSerializer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "serialize",
        "parameterTypes": [
          "java.lang.Object",
          "com.fasterxml.jackson.core.JsonGenerator",
          "com.fasterxml.jackson.databind.SerializerProvider"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.NewznabJsonChannel",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getLink",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setLanguage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCategory",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setImage",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.NewznabJsonImage"
        ]
      },
      {
        "name": "getImage",
        "parameterTypes": []
      },
      {
        "name": "getItem",
        "parameterTypes": []
      },
      {
        "name": "getGenerator",
        "parameterTypes": []
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWebMaster",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResponse",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.NewznabJsonChannelResponse"
        ]
      },
      {
        "name": "setLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getLanguage",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setGenerator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setItem",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getWebMaster",
        "parameterTypes": []
      },
      {
        "name": "getCategory",
        "parameterTypes": []
      },
      {
        "name": "getResponse",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.NewznabJsonChannelResponse",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getAttributes",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttributes",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.NewznabJsonResponseAttributes"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.NewznabJsonEnclosure",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAttributes",
        "parameterTypes": []
      },
      {
        "name": "setAttributes",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.NewznabJsonEnclosureAttributes"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.NewznabJsonEnclosureAttributes",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "setLength",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getLength",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.NewznabJsonError",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.NewznabJsonImage",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getLink",
        "parameterTypes": []
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.NewznabJsonItem",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "setPubDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "getCategory",
        "parameterTypes": []
      },
      {
        "name": "getLink",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAttr",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setEnclosure",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.NewznabJsonEnclosure"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getGuid",
        "parameterTypes": []
      },
      {
        "name": "setLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPubDate",
        "parameterTypes": []
      },
      {
        "name": "getEnclosure",
        "parameterTypes": []
      },
      {
        "name": "setComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGuid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComments",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.NewznabJsonItemAttr",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setAttributes",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.NewznabJsonItemAttributes"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAttributes",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.NewznabJsonItemAttributes",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.NewznabJsonResponseAttributes",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setTotal",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getTotal",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.NewznabJsonRoot",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setChannel",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.NewznabJsonChannel"
        ]
      },
      {
        "name": "getSearchType",
        "parameterTypes": []
      },
      {
        "name": "setAttributes",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.NewznabJsonRootAttributes"
        ]
      },
      {
        "name": "getAttributes",
        "parameterTypes": []
      },
      {
        "name": "getChannel",
        "parameterTypes": []
      },
      {
        "name": "setSearchType",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.NewznabResponse$SearchType"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getContentHeader",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.NewznabJsonRootAttributes",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.caps.CapsJsonCategoriesHolder",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setCategory",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getCategory",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.caps.CapsJsonCategory",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getSubCategories",
        "parameterTypes": []
      },
      {
        "name": "setSubCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAttributes",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.caps.CapsJsonCategoryAttributes"
        ]
      },
      {
        "name": "getAttributes",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.caps.CapsJsonCategoryAttributes",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.caps.CapsJsonIdAttributes",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setAvailable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getSupportedParams",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setSupportedParams",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAvailable",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.caps.CapsJsonLimits",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getAttributes",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttributes",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.caps.CapsJsonLimitsAttributes"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.caps.CapsJsonLimitsAttributes",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "set_default",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "get_default",
        "parameterTypes": []
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.caps.CapsJsonRegistration",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setAttributes",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.caps.CapsJsonRegistrationAttributes"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getAttributes",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.caps.CapsJsonRegistrationAttributes",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAvailable",
        "parameterTypes": []
      },
      {
        "name": "setAvailable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOpen",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getOpen",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.caps.CapsJsonRoot",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setServer",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.caps.CapsJsonServer"
        ]
      },
      {
        "name": "getSearching",
        "parameterTypes": []
      },
      {
        "name": "setSearching",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.caps.CapsJsonSearching"
        ]
      },
      {
        "name": "setRegistration",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.caps.CapsJsonRegistration"
        ]
      },
      {
        "name": "getLimits",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getServer",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.caps.CapsJsonCategoriesHolder"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLimits",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.caps.CapsJsonLimits"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getRegistration",
        "parameterTypes": []
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.caps.CapsJsonSearchIdAttributesHolder",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttributes",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.caps.CapsJsonIdAttributes"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAttributes",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.caps.CapsJsonSearching",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setMovieSearch",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.caps.CapsJsonSearchIdAttributesHolder"
        ]
      },
      {
        "name": "setBookSearch",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.caps.CapsJsonSearchIdAttributesHolder"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getMovieSearch",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setTvSearch",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.caps.CapsJsonSearchIdAttributesHolder"
        ]
      },
      {
        "name": "getTvSearch",
        "parameterTypes": []
      },
      {
        "name": "getAudioSearch",
        "parameterTypes": []
      },
      {
        "name": "setSearch",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.caps.CapsJsonSearchIdAttributesHolder"
        ]
      },
      {
        "name": "getBookSearch",
        "parameterTypes": []
      },
      {
        "name": "getSearch",
        "parameterTypes": []
      },
      {
        "name": "setAudioSearch",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.caps.CapsJsonSearchIdAttributesHolder"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.caps.CapsJsonServer",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttributes",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.json.caps.CapsJsonServerAttributes"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAttributes",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.caps.CapsJsonServerAttributes",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getImage",
        "parameterTypes": []
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStrapline",
        "parameterTypes": []
      },
      {
        "name": "getEmail",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "setStrapline",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setAppversion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAppversion",
        "parameterTypes": []
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "setImage",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.mock.NewznabMockRequest",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setIndexer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isGenerateOneDuplicate",
        "parameterTypes": []
      },
      {
        "name": "setNumberOfResults",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTitleWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getTitleBase",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getNumberOfResults",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setTotal",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "$default$titleWords",
        "parameterTypes": []
      },
      {
        "name": "getTotal",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "getTitleWords",
        "parameterTypes": []
      },
      {
        "name": "setGenerateOneDuplicate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTorznab",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTitleBase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIndexer",
        "parameterTypes": []
      },
      {
        "name": "getNewznabCategory",
        "parameterTypes": []
      },
      {
        "name": "isTorznab",
        "parameterTypes": []
      },
      {
        "name": "isGenerateDuplicates",
        "parameterTypes": []
      },
      {
        "name": "setGenerateDuplicates",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "builder",
        "parameterTypes": []
      },
      {
        "name": "setNewznabCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabAttribute",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabAttribute",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabAttribute",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlApilimits",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlApilimits",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlChannel",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setNewznabResponse",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.xml.NewznabXmlResponse"
        ]
      },
      {
        "name": "setLanguage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getWebMaster",
        "parameterTypes": []
      },
      {
        "name": "setLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setApiLimits",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.xml.NewznabXmlApilimits"
        ]
      },
      {
        "name": "setGenerator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLink",
        "parameterTypes": []
      },
      {
        "name": "getLanguage",
        "parameterTypes": []
      },
      {
        "name": "setWebMaster",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getGenerator",
        "parameterTypes": []
      },
      {
        "name": "getApiLimits",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setItems",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getNewznabResponse",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getItems",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlChannel",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlChannel",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlEnclosure",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLength",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLength",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlEnclosure",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlEnclosure",
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlError",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlError",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlGuid",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "isPermaLink",
        "parameterTypes": []
      },
      {
        "name": "setPermaLink",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setGuid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getGuid",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlGuid",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlGuid",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlItem",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setRssGuid",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.xml.NewznabXmlGuid"
        ]
      },
      {
        "name": "getGrabs",
        "parameterTypes": []
      },
      {
        "name": "setLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPubDate",
        "parameterTypes": []
      },
      {
        "name": "getEnclosures",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getTorznabAttributes",
        "parameterTypes": []
      },
      {
        "name": "getCategory",
        "parameterTypes": []
      },
      {
        "name": "getRssGuid",
        "parameterTypes": []
      },
      {
        "name": "getComments",
        "parameterTypes": []
      },
      {
        "name": "setPubDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setGrabs",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getNewznabAttributes",
        "parameterTypes": []
      },
      {
        "name": "getLink",
        "parameterTypes": []
      },
      {
        "name": "setComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnclosures",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnclosure",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.xml.NewznabXmlEnclosure"
        ]
      },
      {
        "name": "getSize",
        "parameterTypes": []
      },
      {
        "name": "setTorznabAttributes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getEnclosure",
        "parameterTypes": []
      },
      {
        "name": "setCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "setNewznabAttributes",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlItem",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlItem",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlResponse",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getTotal",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setTotal",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlResponse",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlResponse",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlRoot",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setRssChannel",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.xml.NewznabXmlChannel"
        ]
      },
      {
        "name": "getError",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setError",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.xml.NewznabXmlError"
        ]
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getRssChannel",
        "parameterTypes": []
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlRoot",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlRoot",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.Xml",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCaps",
        "parameterTypes": []
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getError",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getLimits",
        "parameterTypes": []
      },
      {
        "name": "getRetention",
        "parameterTypes": []
      },
      {
        "name": "getRssChannel",
        "parameterTypes": []
      },
      {
        "name": "getSearching",
        "parameterTypes": []
      },
      {
        "name": "getServer",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.xml.Xml",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlCategories",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlCategories",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlCategories",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlCategory",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getSubCategories",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setSubCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlCategory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlCategory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlLimits",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlLimits",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlLimits",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlRetention",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDays",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDays",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlRetention",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlRetention",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlRoot",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setServer",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlServer"
        ]
      },
      {
        "name": "getServer",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlCategories"
        ]
      },
      {
        "name": "setSearching",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlSearching"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setLimits",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlLimits"
        ]
      },
      {
        "name": "getRetention",
        "parameterTypes": []
      },
      {
        "name": "setRetention",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlRetention"
        ]
      },
      {
        "name": "getSearching",
        "parameterTypes": []
      },
      {
        "name": "getLimits",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlRoot",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlRoot",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlSearch",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getSupportedParams",
        "parameterTypes": []
      },
      {
        "name": "getAvailable",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setAvailable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setSupportedParams",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAvailable",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlSearch",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlSearch",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlSearching",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getBookSearch",
        "parameterTypes": []
      },
      {
        "name": "setAudioSearch",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlSearch"
        ]
      },
      {
        "name": "setBookSearch",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlSearch"
        ]
      },
      {
        "name": "getSearch",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getMovieSearch",
        "parameterTypes": []
      },
      {
        "name": "setTvSearch",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlSearch"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getTvSearch",
        "parameterTypes": []
      },
      {
        "name": "getAudioSearch",
        "parameterTypes": []
      },
      {
        "name": "setMovieSearch",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlSearch"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setSearch",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlSearch"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlSearching",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlSearching",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlServer",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getImage",
        "parameterTypes": []
      },
      {
        "name": "getStrapline",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getEmail",
        "parameterTypes": []
      },
      {
        "name": "setStrapline",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlServer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlServer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.jackett.JacketCapsXmlIndexer",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCaps",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlRoot"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getCaps",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.jackett.JacketCapsXmlIndexer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.xml.caps.jackett.JacketCapsXmlIndexer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.jackett.JacketCapsXmlRoot",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getIndexers",
        "parameterTypes": []
      },
      {
        "name": "setIndexers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.jackett.JacketCapsXmlRoot",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.xml.caps.jackett.JacketCapsXmlRoot",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mediainfo.CustomTmdb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "initWithApiKey",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mediainfo.InfoProvider",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "tmdbHandler"
      },
      {
        "name": "tvInfoRepository"
      },
      {
        "name": "tvMazeHandler"
      },
      {
        "name": "movieInfoRepository"
      }
    ],
    "methods": [
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.String",
          "org.nzbhydra.config.mediainfo.MediaIdType"
        ]
      },
      {
        "name": "search",
        "parameterTypes": [
          "java.lang.String",
          "org.nzbhydra.config.mediainfo.MediaIdType"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.mediainfo.InfoProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.mediainfo.InfoProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.mediainfo.MediaInfoWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.mediainfo.MediaInfoWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mediainfo.MediaInfoWeb$CacheKey",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getInput",
        "parameterTypes": []
      },
      {
        "name": "setInput",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "org.nzbhydra.mediainfo.AutocompleteType"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mediainfo.MovieInfo",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setImdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPosterUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTmdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setYear",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "org.nzbhydra.mediainfo.MovieInfo",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.mediainfo.MovieInfoRepository",
    "allPublicMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.mediainfo.TmdbHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.mediainfo.TmdbHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mediainfo.TmdbSearchResult",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getTmdbId",
        "parameterTypes": []
      },
      {
        "name": "getPosterUrl",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setPosterUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setTmdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getImdbId",
        "parameterTypes": []
      },
      {
        "name": "getYear",
        "parameterTypes": []
      },
      {
        "name": "setYear",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "setImdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mediainfo.TvInfo",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setImdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPosterUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTvdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTvmazeId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTvrageId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setYear",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "org.nzbhydra.mediainfo.TvInfo",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.mediainfo.TvInfoRepository",
    "allPublicMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.mediainfo.TvMazeHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.mediainfo.TvMazeHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mediainfo.TvMazeHandler$TvmazeExternals",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setThetvdb",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getThetvdb",
        "parameterTypes": []
      },
      {
        "name": "setImdb",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getTvrage",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getImdb",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setTvrage",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mediainfo.TvMazeHandler$TvmazeImage",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getMedium",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOriginal",
        "parameterTypes": []
      },
      {
        "name": "setMedium",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setOriginal",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mediainfo.TvMazeHandler$TvmazeShow",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setExternals",
        "parameterTypes": [
          "org.nzbhydra.mediainfo.TvMazeHandler$TvmazeExternals"
        ]
      },
      {
        "name": "getExternals",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setPremiered",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getPremiered",
        "parameterTypes": []
      },
      {
        "name": "setImage",
        "parameterTypes": [
          "org.nzbhydra.mediainfo.TvMazeHandler$TvmazeImage"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getImage",
        "parameterTypes": []
      },
      {
        "name": "getMediumPosterUrl",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mediainfo.TvMazeHandler$TvmazeShowSearch",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setScore",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getScore",
        "parameterTypes": []
      },
      {
        "name": "setShow",
        "parameterTypes": [
          "org.nzbhydra.mediainfo.TvMazeHandler$TvmazeShow"
        ]
      },
      {
        "name": "getShow",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mediainfo.TvMazeSearchResult",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getYear",
        "parameterTypes": []
      },
      {
        "name": "getTvdbId",
        "parameterTypes": []
      },
      {
        "name": "setTvdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTvmazeId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPosterUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getTvrageId",
        "parameterTypes": []
      },
      {
        "name": "setYear",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getImdbId",
        "parameterTypes": []
      },
      {
        "name": "setImdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getTvmazeId",
        "parameterTypes": []
      },
      {
        "name": "getPosterUrl",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "setTvrageId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.migration.configmapping.Auth",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getUsers",
        "parameterTypes": []
      },
      {
        "name": "setRestrictSearch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isRememberUsers",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isRestrictSearch",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "isRestrictDetailsDl",
        "parameterTypes": []
      },
      {
        "name": "setAuthType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRememberUsers",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestrictIndexerSelection",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getRememberUsersExpiry",
        "parameterTypes": []
      },
      {
        "name": "setUsers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isRestrictIndexerSelection",
        "parameterTypes": []
      },
      {
        "name": "setRestrictAdmin",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isRestrictAdmin",
        "parameterTypes": []
      },
      {
        "name": "isRestrictStats",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setRememberUsersExpiry",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRestrictDetailsDl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestrictStats",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAuthType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.migration.configmapping.Categories",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "isEnableCategorySizes",
        "parameterTypes": []
      },
      {
        "name": "setEnableCategorySizes",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.migration.configmapping.Category",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setIgnoreResults",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getApplyRestrictions",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenRegex",
        "parameterTypes": []
      },
      {
        "name": "getMin",
        "parameterTypes": []
      },
      {
        "name": "setForbiddenWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getRequiredRegex",
        "parameterTypes": []
      },
      {
        "name": "setForbiddenRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getRequiredWords",
        "parameterTypes": []
      },
      {
        "name": "setApplyRestrictions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIgnoreResults",
        "parameterTypes": []
      },
      {
        "name": "setRequiredWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setNewznabCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRequiredRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getForbiddenWords",
        "parameterTypes": []
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getNewznabCategories",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMin",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.migration.configmapping.Downloader",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getNzbaccesstype",
        "parameterTypes": []
      },
      {
        "name": "setIconCssClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSsl",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getDefaultCategory",
        "parameterTypes": []
      },
      {
        "name": "setDownloadType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDefaultCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getNzbAddingType",
        "parameterTypes": []
      },
      {
        "name": "setNzbaccesstype",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getHost",
        "parameterTypes": []
      },
      {
        "name": "getDownloadType",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setApikey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getIconCssClass",
        "parameterTypes": []
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getApikey",
        "parameterTypes": []
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setNzbAddingType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getPort",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.migration.configmapping.Indexer",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "setAudiobookCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSearchIds",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "setComicCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getLoadLimitOnRandom",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getHitLimitResetTime",
        "parameterTypes": []
      },
      {
        "name": "setAnimeCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setScore",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBackend",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getApikey",
        "parameterTypes": []
      },
      {
        "name": "isShowOnSearch",
        "parameterTypes": []
      },
      {
        "name": "isPreselect",
        "parameterTypes": []
      },
      {
        "name": "setPreselect",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setGenerateQueries",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMagazineCategory",
        "parameterTypes": []
      },
      {
        "name": "getEbookCategory",
        "parameterTypes": []
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEbookCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAccessType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSearchIds",
        "parameterTypes": []
      },
      {
        "name": "setHitLimitResetTime",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getGeneralMinSize",
        "parameterTypes": []
      },
      {
        "name": "getAccessType",
        "parameterTypes": []
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getAnimeCategory",
        "parameterTypes": []
      },
      {
        "name": "setDownloadLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getHost",
        "parameterTypes": []
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isGenerateQueries",
        "parameterTypes": []
      },
      {
        "name": "setShowOnSearch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getDownloadLimit",
        "parameterTypes": []
      },
      {
        "name": "setSearchTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setGeneralMinSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setApikey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHitLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getComicCategory",
        "parameterTypes": []
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getScore",
        "parameterTypes": []
      },
      {
        "name": "setMagazineCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBackend",
        "parameterTypes": []
      },
      {
        "name": "getAudiobookCategory",
        "parameterTypes": []
      },
      {
        "name": "getSearchTypes",
        "parameterTypes": []
      },
      {
        "name": "setLoadLimitOnRandom",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getHitLimit",
        "parameterTypes": []
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.migration.configmapping.Logging",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getKeepLogFiles",
        "parameterTypes": []
      },
      {
        "name": "getLogMaxSize",
        "parameterTypes": []
      },
      {
        "name": "getLogRotateAfterDays",
        "parameterTypes": []
      },
      {
        "name": "setLogIpAddresses",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getLogfilelevel",
        "parameterTypes": []
      },
      {
        "name": "setConsolelevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogRotateAfterDays",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLogfilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isLogIpAddresses",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "isRolloverAtStart",
        "parameterTypes": []
      },
      {
        "name": "setLogfilelevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConsolelevel",
        "parameterTypes": []
      },
      {
        "name": "setLogMaxSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRolloverAtStart",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getLogfilename",
        "parameterTypes": []
      },
      {
        "name": "setKeepLogFiles",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.migration.configmapping.Main",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setStartupBrowser",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isDebug",
        "parameterTypes": []
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setFirstStart",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getHttpProxy",
        "parameterTypes": []
      },
      {
        "name": "setRepositoryBase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeepSearchResultsForDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getSslcert",
        "parameterTypes": []
      },
      {
        "name": "getTheme",
        "parameterTypes": []
      },
      {
        "name": "setSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getHttpsProxy",
        "parameterTypes": []
      },
      {
        "name": "setHttpsProxy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHttpProxy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setSocksProxy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDereferer",
        "parameterTypes": []
      },
      {
        "name": "setRunThreaded",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isUseLocalUrlForApiAccess",
        "parameterTypes": []
      },
      {
        "name": "setTheme",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSecret",
        "parameterTypes": []
      },
      {
        "name": "getGitPath",
        "parameterTypes": []
      },
      {
        "name": "setApikey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrlBase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isRunThreaded",
        "parameterTypes": []
      },
      {
        "name": "setSslkey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSsl",
        "parameterTypes": []
      },
      {
        "name": "getConfigVersion",
        "parameterTypes": []
      },
      {
        "name": "getApikey",
        "parameterTypes": []
      },
      {
        "name": "getRepositoryBase",
        "parameterTypes": []
      },
      {
        "name": "setSslcert",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDereferer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPollShown",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getUrlBase",
        "parameterTypes": []
      },
      {
        "name": "setLogging",
        "parameterTypes": [
          "org.nzbhydra.migration.configmapping.Logging"
        ]
      },
      {
        "name": "setDebug",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isFlaskReloader",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getSocksProxy",
        "parameterTypes": []
      },
      {
        "name": "getExternalUrl",
        "parameterTypes": []
      },
      {
        "name": "setFlaskReloader",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPort",
        "parameterTypes": []
      },
      {
        "name": "getPollShown",
        "parameterTypes": []
      },
      {
        "name": "isStartupBrowser",
        "parameterTypes": []
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExternalUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseLocalUrlForApiAccess",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getHost",
        "parameterTypes": []
      },
      {
        "name": "getLogging",
        "parameterTypes": []
      },
      {
        "name": "getSslkey",
        "parameterTypes": []
      },
      {
        "name": "setShutdownForRestart",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setConfigVersion",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setBranch",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isShutdownForRestart",
        "parameterTypes": []
      },
      {
        "name": "setGitPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeepSearchResultsForDays",
        "parameterTypes": []
      },
      {
        "name": "getBranch",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getFirstStart",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.migration.configmapping.OldConfig",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setAuth",
        "parameterTypes": [
          "org.nzbhydra.migration.configmapping.Auth"
        ]
      },
      {
        "name": "getSearching",
        "parameterTypes": []
      },
      {
        "name": "setSearching",
        "parameterTypes": [
          "org.nzbhydra.migration.configmapping.Searching"
        ]
      },
      {
        "name": "setCategories",
        "parameterTypes": [
          "org.nzbhydra.migration.configmapping.Categories"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getCategories",
        "parameterTypes": []
      },
      {
        "name": "setIndexers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getMain",
        "parameterTypes": []
      },
      {
        "name": "getIndexers",
        "parameterTypes": []
      },
      {
        "name": "getAuth",
        "parameterTypes": []
      },
      {
        "name": "setMain",
        "parameterTypes": [
          "org.nzbhydra.migration.configmapping.Main"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDownloaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getDownloaders",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.migration.configmapping.Searching",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getForbiddenRegex",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "getHtmlParser",
        "parameterTypes": []
      },
      {
        "name": "getRequiredWords",
        "parameterTypes": []
      },
      {
        "name": "setHtmlParser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRemoveTrailing",
        "parameterTypes": []
      },
      {
        "name": "setApplyRestrictions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNzbAccessType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForbiddenWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIdFallbackToTitle",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIgnorePassworded",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRequiredRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDuplicateSizeThresholdInPercent",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDuplicateAgeThreshold",
        "parameterTypes": []
      },
      {
        "name": "isIdFallbackToTitlePerIndexer",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenWords",
        "parameterTypes": []
      },
      {
        "name": "isIgnorePassworded",
        "parameterTypes": []
      },
      {
        "name": "setIgnoreTemporarilyDisabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getRequiredRegex",
        "parameterTypes": []
      },
      {
        "name": "getMaxAge",
        "parameterTypes": []
      },
      {
        "name": "getDuplicateSizeThresholdInPercent",
        "parameterTypes": []
      },
      {
        "name": "getForbiddenPosters",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreTemporarilyDisabled",
        "parameterTypes": []
      },
      {
        "name": "getApplyRestrictions",
        "parameterTypes": []
      },
      {
        "name": "getNzbAccessType",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDuplicateAgeThreshold",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setGenerateQueries",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequiredWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIdFallbackToTitlePerIndexer",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForbiddenPosters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setForbiddenGroups",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setForbiddenRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIdFallbackToTitle",
        "parameterTypes": []
      },
      {
        "name": "setRemoveTrailing",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getForbiddenGroups",
        "parameterTypes": []
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "getGenerateQueries",
        "parameterTypes": []
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.migration.configmapping.User",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setMaySeeDetailsDl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isMaySeeStats",
        "parameterTypes": []
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShowIndexerSelection",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isShowIndexerSelection",
        "parameterTypes": []
      },
      {
        "name": "setMaySeeStats",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setMaySeeAdmin",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isMaySeeDetailsDl",
        "parameterTypes": []
      },
      {
        "name": "isMaySeeAdmin",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.misc.BrowserOpener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.misc.BrowserOpener",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.misc.OpenPortChecker",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ],
    "name": "org.nzbhydra.misc.TempFileProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.misc.TempFileProvider$$SpringCGLIB$$0",
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.misc.UserAgentMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.misc.UserAgentMapper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.misc.WebHooks",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "fileDownloadRepository"
      },
      {
        "name": "requestFactory"
      }
    ],
    "methods": [
      {
        "name": "onSearchEvent",
        "parameterTypes": [
          "org.nzbhydra.searching.Searcher$SearchEvent"
        ]
      },
      {
        "name": "onNzbDownloadEvent",
        "parameterTypes": [
          "org.nzbhydra.downloading.FileDownloadEvent"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.misc.WebHooks",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.misc.WebHooks",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "onNzbDownloadEvent",
        "parameterTypes": [
          "org.nzbhydra.downloading.FileDownloadEvent"
        ]
      },
      {
        "name": "onSearchEvent",
        "parameterTypes": [
          "org.nzbhydra.searching.Searcher$SearchEvent"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.news.NewsProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.news.NewsProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.news.NewsProvider$NewsEntry",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setNewsAsMarkdown",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setShowForVersion",
        "parameterTypes": [
          "org.nzbhydra.mapping.SemanticVersion"
        ]
      },
      {
        "name": "getShowForVersion",
        "parameterTypes": []
      },
      {
        "name": "getNewsAsMarkdown",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getNewsForCurrentVersionAndAfter",
        "parameterTypes": [
          "java.security.Principal"
        ]
      }
    ],
    "name": "org.nzbhydra.news.NewsWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.news.NewsWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.news.ShownNews",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.nzbhydra.news.ShownNews",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.news.ShownNewsRepository",
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.notifications.AuthFailureNotificationEvent",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTestInstance",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getEventType",
        "parameterTypes": []
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIp",
        "parameterTypes": []
      },
      {
        "name": "getVariablesWithContent",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.notifications.DownloadCompletionNotificationEvent",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getEventType",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDownloadResult",
        "parameterTypes": []
      },
      {
        "name": "setDownloadResult",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTestInstance",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getVariablesWithContent",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.notifications.DownloadNotificationEvent",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setIndexerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getVariablesWithContent",
        "parameterTypes": []
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEventType",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getTestInstance",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAge",
        "parameterTypes": []
      },
      {
        "name": "getIndexerName",
        "parameterTypes": []
      },
      {
        "name": "setAge",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.notifications.IndexerDisabledNotificationEvent",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getVariablesWithContent",
        "parameterTypes": []
      },
      {
        "name": "getIndexerName",
        "parameterTypes": []
      },
      {
        "name": "setState",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig$State"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setIndexerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTestInstance",
        "parameterTypes": []
      },
      {
        "name": "getState",
        "parameterTypes": []
      },
      {
        "name": "getEventType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.notifications.IndexerReenabledNotificationEvent",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getIndexerName",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setIndexerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getDisabledAt",
        "parameterTypes": []
      },
      {
        "name": "getTestInstance",
        "parameterTypes": []
      },
      {
        "name": "setDisabledAt",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "getEventType",
        "parameterTypes": []
      },
      {
        "name": "getVariablesWithContent",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.notifications.IndexerVipExpiryNotificationEvent",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setIndexerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getIndexerName",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getVariablesWithContent",
        "parameterTypes": []
      },
      {
        "name": "getEventType",
        "parameterTypes": []
      },
      {
        "name": "getTestInstance",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setExpirationDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExpirationDate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.notifications.NotificationEntity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getMessageType",
        "parameterTypes": []
      },
      {
        "name": "getNotificationEventType",
        "parameterTypes": []
      },
      {
        "name": "getTime",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getUrls",
        "parameterTypes": []
      },
      {
        "name": "isDisplayed",
        "parameterTypes": []
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMessageType",
        "parameterTypes": [
          "org.nzbhydra.notifications.NotificationMessageType"
        ]
      },
      {
        "name": "setNotificationEventType",
        "parameterTypes": [
          "org.nzbhydra.config.notification.NotificationEventType"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrls",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.nzbhydra.notifications.NotificationEntity",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.notifications.NotificationHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.notifications.NotificationHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "handleNotification",
        "parameterTypes": [
          "org.nzbhydra.notifications.NotificationEvent"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.notifications.NotificationHandler$AppriseMessage",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUrls",
        "parameterTypes": []
      },
      {
        "name": "setUrls",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.notifications.NotificationMessageType",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.notifications.NotificationRepository",
    "allPublicMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "markRead",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "onClientDisconnect",
        "parameterTypes": [
          "org.springframework.web.socket.messaging.SessionDisconnectEvent"
        ]
      },
      {
        "name": "onClientSubscribe",
        "parameterTypes": [
          "org.springframework.web.socket.messaging.SessionSubscribeEvent"
        ]
      },
      {
        "name": "onShutdown",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.notifications.NotificationsWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.notifications.NotificationsWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "onShutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.notifications.UpdateNotificationEvent",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getEventType",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getVariablesWithContent",
        "parameterTypes": []
      },
      {
        "name": "getTestInstance",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.problemdetection.DeleteOldDatabaseBackupDetector",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "executeCheck",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "executeCheck",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.problemdetection.OpenPortProblemDetector",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.problemdetection.OpenPortProblemDetector",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "executeCheck",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "executeCheck",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.problemdetection.OutOfMemoryDetector",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.problemdetection.OutOfMemoryDetector",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "executeCheck",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "executeCheck",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.problemdetection.OutdatedWrapperDetector",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.problemdetection.OutdatedWrapperDetector",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "executeCheck",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "detectProblems",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.problemdetection.ProblemDetectorTask",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.problemdetection.ProblemDetectorTask",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "detectProblems",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "executeCheck",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.problemdetection.VipExpiryDetector",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.problemdetection.VipExpiryDetector",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "executeCheck",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.problemdetection.VipExpiryDetector$VipExpiryData",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getEntries",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.problemdetection.VipExpiryDetector$VipExpiryData",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.problemdetection.VipExpiryDetector$VipExpiryDataEntry",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getIndexerName",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setExpiryDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIndexerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getExpiryDate",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setExpiryDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIndexerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.nzbhydra.problemdetection.VipExpiryDetector$VipExpiryDataEntry",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.searching.CategoryProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.CategoryProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "handleNewConfigEvent",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.searching.CustomQueryAndTitleMappingHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.CustomQueryAndTitleMappingHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.CustomQueryAndTitleMappingHandler$MetaData",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "fromSearchResult",
        "parameterTypes": [
          "org.nzbhydra.searching.dtoseventsenums.SearchResultItem"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setEpisode",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "org.nzbhydra.searching.CustomQueryAndTitleMappingHandler$MetaData$Type"
        ]
      },
      {
        "name": "fromSearchRequest",
        "parameterTypes": [
          "org.nzbhydra.searching.searchrequests.SearchRequest"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getEpisode",
        "parameterTypes": []
      },
      {
        "name": "getIntegerAttribute",
        "parameterTypes": [
          "org.nzbhydra.searching.dtoseventsenums.SearchResultItem",
          "java.lang.String"
        ]
      },
      {
        "name": "getSearchType",
        "parameterTypes": []
      },
      {
        "name": "getSeason",
        "parameterTypes": []
      },
      {
        "name": "setSeason",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getQuery",
        "parameterTypes": []
      },
      {
        "name": "setSearchType",
        "parameterTypes": [
          "org.nzbhydra.config.searching.SearchType"
        ]
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.searching.DuplicateDetector",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.DuplicateDetector",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.IndexerForSearchSelector",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "indexerLimitRepository"
      },
      {
        "name": "eventPublisher"
      },
      {
        "name": "infoProvider"
      },
      {
        "name": "searchModuleProvider"
      },
      {
        "name": "configProvider"
      },
      {
        "name": "entityManager"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.IndexerForSearchSelector",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "pickIndexers",
        "parameterTypes": [
          "org.nzbhydra.searching.searchrequests.SearchRequest"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.IndexerForSearchSelector$IndexerForSearchSelection",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getNotPickedIndexersWithReason",
        "parameterTypes": []
      },
      {
        "name": "getSelectedIndexers",
        "parameterTypes": []
      },
      {
        "name": "setSelectedIndexers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setNotPickedIndexersWithReason",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.searching.IndexerInstantiator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.IndexerInstantiator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.IndexerSearchCacheEntry",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "isAllPulled",
        "parameterTypes": []
      },
      {
        "name": "getIndexerSearchEntity",
        "parameterTypes": []
      },
      {
        "name": "isMoreResultsAvailable",
        "parameterTypes": []
      },
      {
        "name": "pop",
        "parameterTypes": []
      },
      {
        "name": "setIndexerSearchResults",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "peek",
        "parameterTypes": []
      },
      {
        "name": "setIndexerSearchEntity",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerSearchEntity"
        ]
      },
      {
        "name": "lambda$addIndexerSearchResult$0",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addIndexerSearchResult",
        "parameterTypes": [
          "org.nzbhydra.searching.dtoseventsenums.IndexerSearchResult"
        ]
      },
      {
        "name": "getSearchResultItems",
        "parameterTypes": []
      },
      {
        "name": "setNextResultIndex",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isLastSuccessful",
        "parameterTypes": []
      },
      {
        "name": "setIndexer",
        "parameterTypes": [
          "org.nzbhydra.indexers.Indexer"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setSearchResultItems",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getIndexerSearchResults",
        "parameterTypes": []
      },
      {
        "name": "isMoreResultsInCache",
        "parameterTypes": []
      },
      {
        "name": "getIndexer",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getNextResultIndex",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.IndexerSearchEntityTO",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setSuccessful",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setResultsCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSearchEntity",
        "parameterTypes": [
          "org.nzbhydra.searching.db.SearchEntityTO"
        ]
      },
      {
        "name": "setIndexerEntity",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntityTO"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getIndexerEntity",
        "parameterTypes": []
      },
      {
        "name": "getSuccessful",
        "parameterTypes": []
      },
      {
        "name": "getResultsCount",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getSearchEntity",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.searching.InternalSearchResultProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.InternalSearchResultProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.SearchCacheEntry",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getReasonsForRejection",
        "parameterTypes": []
      },
      {
        "name": "setIndexerCacheEntries",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setSearchResultItems",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSearchEntity",
        "parameterTypes": [
          "org.nzbhydra.searching.db.SearchEntity"
        ]
      },
      {
        "name": "setSearchRequest",
        "parameterTypes": [
          "org.nzbhydra.searching.searchrequests.SearchRequest"
        ]
      },
      {
        "name": "lambda$getNumberOfTotalAvailableResults$0",
        "parameterTypes": [
          "org.nzbhydra.searching.IndexerSearchCacheEntry"
        ]
      },
      {
        "name": "getIndexerCacheEntries",
        "parameterTypes": []
      },
      {
        "name": "getSearchEntity",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfRejectedResults",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setNumberOfRemovedDuplicates",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getNumberOfRemovedDuplicates",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfTotalAvailableResults",
        "parameterTypes": []
      },
      {
        "name": "setIndexerSelectionResult",
        "parameterTypes": [
          "org.nzbhydra.searching.IndexerForSearchSelector$IndexerForSearchSelection"
        ]
      },
      {
        "name": "getSearchResultItems",
        "parameterTypes": []
      },
      {
        "name": "lambda$getNumberOfTotalAvailableResults$1",
        "parameterTypes": [
          "org.nzbhydra.searching.IndexerSearchCacheEntry"
        ]
      },
      {
        "name": "getLastAccessed",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfAvailableResults",
        "parameterTypes": []
      },
      {
        "name": "setReasonsForRejection",
        "parameterTypes": [
          "com.google.common.collect.Multiset"
        ]
      },
      {
        "name": "setLastAccessed",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setNumberOfAvailableResults",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getNumberOfFoundResults",
        "parameterTypes": []
      },
      {
        "name": "getIndexerSelectionResult",
        "parameterTypes": []
      },
      {
        "name": "getSearchRequest",
        "parameterTypes": []
      },
      {
        "name": "lambda$getNumberOfFoundResults$2",
        "parameterTypes": [
          "org.nzbhydra.searching.IndexerSearchCacheEntry"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.searching.SearchModuleConfigProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.SearchModuleConfigProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "handleNewConfig",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.SearchModuleProvider",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "indexerStatusRepository"
      },
      {
        "name": "indexerHandlingStrategies"
      },
      {
        "name": "indexerRepository"
      },
      {
        "name": "indexerInstantiator"
      },
      {
        "name": "shortRepository"
      }
    ],
    "methods": [
      {
        "name": "loadIndexers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "loadIndexers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "org.nzbhydra.searching.SearchModuleProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.SearchModuleProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getIndexerByName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIndexers",
        "parameterTypes": []
      },
      {
        "name": "loadIndexers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.searching.SearchResultAcceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.SearchResultAcceptor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.SearchResultAcceptor$AcceptorResult",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setAcceptedResults",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getAcceptedResults",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfRejectedResults",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setReasonsForRejection",
        "parameterTypes": [
          "com.google.common.collect.Multiset"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getReasonsForRejection",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.SearchState",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setIndexerSelectionFinished",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getIndexersSelected",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getIndexersFinished",
        "parameterTypes": []
      },
      {
        "name": "setSearchRequestId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setIndexersFinished",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isIndexerSelectionFinished",
        "parameterTypes": []
      },
      {
        "name": "getMessages",
        "parameterTypes": []
      },
      {
        "name": "getSearchRequestId",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setIndexersSelected",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "isSearchFinished",
        "parameterTypes": []
      },
      {
        "name": "setSearchFinished",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMessages",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.searching.SearchWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.SearchWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "handleIndexerSearchFinishedEvent",
        "parameterTypes": [
          "org.nzbhydra.searching.dtoseventsenums.IndexerSearchFinishedEvent"
        ]
      },
      {
        "name": "handleIndexerSelectionEvent",
        "parameterTypes": [
          "org.nzbhydra.searching.dtoseventsenums.IndexerSelectionEvent"
        ]
      },
      {
        "name": "handleSearchMessageEvent",
        "parameterTypes": [
          "org.nzbhydra.searching.dtoseventsenums.SearchMessageEvent"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.Searcher",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "indexerSearchRepository"
      },
      {
        "name": "searchRepository"
      },
      {
        "name": "configProvider"
      },
      {
        "name": "duplicateDetector"
      },
      {
        "name": "indexerSelector"
      },
      {
        "name": "searchResultRepository"
      },
      {
        "name": "eventPublisher"
      }
    ],
    "methods": [
      {
        "name": "search",
        "parameterTypes": [
          "org.nzbhydra.searching.searchrequests.SearchRequest"
        ]
      },
      {
        "name": "onShutdown",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "onShutdown",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.searching.Searcher",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.Searcher",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "onShutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.SortableMessage",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setMessageSortValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMessageSortValue",
        "parameterTypes": []
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "deleteOldResults",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.searching.cleanup.HistoryCleanupTask",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.cleanup.HistoryCleanupTask",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "deleteOldResults",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.cleanup.OldResultsCleanupTask",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "entityManager"
      },
      {
        "name": "configProvider"
      }
    ],
    "methods": [
      {
        "name": "deleteOldResults",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "deleteOldResults",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.searching.cleanup.OldResultsCleanupTask",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.cleanup.OldResultsCleanupTask",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "deleteOldResults",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.cleanup.ShortIndexerApiAccessCleanup",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "repository"
      }
    ],
    "methods": [
      {
        "name": "deleteOldResults",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "deleteOldResults",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.searching.cleanup.ShortIndexerApiAccessCleanup",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.cleanup.ShortIndexerApiAccessCleanup",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "deleteOldResults",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.db.IdentifierKeyValuePair",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getIdentifierKey",
        "parameterTypes": []
      },
      {
        "name": "getIdentifierValue",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIdentifierKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIdentifierValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.nzbhydra.searching.db.IdentifierKeyValuePair",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getIdentifierKey",
        "parameterTypes": []
      },
      {
        "name": "getIdentifierValue",
        "parameterTypes": []
      },
      {
        "name": "setIdentifierKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIdentifierValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.nzbhydra.searching.db.IdentifierKeyValuePairTO",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.searching.db.SearchEntity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAuthor",
        "parameterTypes": []
      },
      {
        "name": "getCategoryName",
        "parameterTypes": []
      },
      {
        "name": "getEpisode",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getIdentifiers",
        "parameterTypes": []
      },
      {
        "name": "getIp",
        "parameterTypes": []
      },
      {
        "name": "getQuery",
        "parameterTypes": []
      },
      {
        "name": "getSearchType",
        "parameterTypes": []
      },
      {
        "name": "getSeason",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getTime",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "setAuthor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCategoryName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEpisode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIdentifiers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSearchType",
        "parameterTypes": [
          "org.nzbhydra.config.searching.SearchType"
        ]
      },
      {
        "name": "setSeason",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSource"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.nzbhydra.searching.db.SearchEntity",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAuthor",
        "parameterTypes": []
      },
      {
        "name": "getCategoryName",
        "parameterTypes": []
      },
      {
        "name": "getEpisode",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getIdentifiers",
        "parameterTypes": []
      },
      {
        "name": "getIp",
        "parameterTypes": []
      },
      {
        "name": "getQuery",
        "parameterTypes": []
      },
      {
        "name": "getSearchType",
        "parameterTypes": []
      },
      {
        "name": "getSeason",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getTime",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "setAuthor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCategoryName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEpisode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIdentifiers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSearchType",
        "parameterTypes": [
          "org.nzbhydra.config.searching.SearchType"
        ]
      },
      {
        "name": "setSeason",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSource"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.nzbhydra.searching.db.SearchEntityTO",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.searching.db.SearchRepository",
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.db.SearchResultEntity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDetails",
        "parameterTypes": []
      },
      {
        "name": "getDownloadType",
        "parameterTypes": []
      },
      {
        "name": "getFirstFound",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getIndexer",
        "parameterTypes": []
      },
      {
        "name": "getIndexerGuid",
        "parameterTypes": []
      },
      {
        "name": "getIndexerSearchEntity",
        "parameterTypes": []
      },
      {
        "name": "getLink",
        "parameterTypes": []
      },
      {
        "name": "getPubDate",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setDetails",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDownloadType",
        "parameterTypes": [
          "org.nzbhydra.searching.dtoseventsenums.SearchResultItem$DownloadType"
        ]
      },
      {
        "name": "setFirstFound",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIndexer",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "setIndexerGuid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIndexerSearchEntity",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerSearchEntity"
        ]
      },
      {
        "name": "setLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPubDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setDetails",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDownloadType",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.DownloadType"
        ]
      },
      {
        "name": "setFirstFound",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIndexer",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "setIndexerGuid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIndexerSearchEntityId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPubDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.nzbhydra.searching.db.SearchResultEntity",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.db.SearchResultRepository",
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.dtoseventsenums.DuplicateDetectionResult",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setNumberOfDuplicates",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "getDuplicateGroups",
        "parameterTypes": []
      },
      {
        "name": "setDuplicateGroups",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getNumberOfDuplicates",
        "parameterTypes": []
      },
      {
        "name": "getUniqueResultsPerIndexer",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setUniqueResultsPerIndexer",
        "parameterTypes": [
          "com.google.common.collect.Multiset"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.dtoseventsenums.FallbackSearchInitiatedEvent",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getSearchRequest",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setSearchRequest",
        "parameterTypes": [
          "org.nzbhydra.searching.searchrequests.SearchRequest"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.dtoseventsenums.IndexerSearchFinishedEvent",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getSearchRequest",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setSearchRequest",
        "parameterTypes": [
          "org.nzbhydra.searching.searchrequests.SearchRequest"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.dtoseventsenums.IndexerSearchResult",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setSearchResultItems",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setWasSuccessful",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getTotalResults",
        "parameterTypes": []
      },
      {
        "name": "isWasSuccessful",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "setPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "lambda$getSearchResultItems$0",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getErrorMessage",
        "parameterTypes": []
      },
      {
        "name": "getIndexer",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getSearchResultItems",
        "parameterTypes": []
      },
      {
        "name": "setTotalResults",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "isHasMoreResults",
        "parameterTypes": []
      },
      {
        "name": "getPageSize",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setSearchResultEntities",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setResponseTime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getSearchResultEntities",
        "parameterTypes": []
      },
      {
        "name": "setReasonsForRejection",
        "parameterTypes": [
          "com.google.common.collect.Multiset"
        ]
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIndexer",
        "parameterTypes": [
          "org.nzbhydra.indexers.Indexer"
        ]
      },
      {
        "name": "setHasMoreResults",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getTime",
        "parameterTypes": []
      },
      {
        "name": "setErrorMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTotalResultsKnown",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getResponseTime",
        "parameterTypes": []
      },
      {
        "name": "isTotalResultsKnown",
        "parameterTypes": []
      },
      {
        "name": "getReasonsForRejection",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.dtoseventsenums.IndexerSelectionEvent",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getIndexersSelected",
        "parameterTypes": []
      },
      {
        "name": "getSearchRequest",
        "parameterTypes": []
      },
      {
        "name": "setIndexersSelected",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setSearchRequest",
        "parameterTypes": [
          "org.nzbhydra.searching.searchrequests.SearchRequest"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.dtoseventsenums.OffsetAndLimitCalculation",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setOffset",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getLimit",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.dtoseventsenums.RejectionReason",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.dtoseventsenums.SearchMessageEvent",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "org.nzbhydra.searching.SortableMessage"
        ]
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getSearchRequest",
        "parameterTypes": []
      },
      {
        "name": "setSearchRequest",
        "parameterTypes": [
          "org.nzbhydra.searching.searchrequests.SearchRequest"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.dtoseventsenums.SearchResultItem",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getPoster",
        "parameterTypes": []
      },
      {
        "name": "getLink",
        "parameterTypes": []
      },
      {
        "name": "getAgeInDays",
        "parameterTypes": []
      },
      {
        "name": "getOriginalCategory",
        "parameterTypes": []
      },
      {
        "name": "getCover",
        "parameterTypes": []
      },
      {
        "name": "getSize",
        "parameterTypes": []
      },
      {
        "name": "setIndexerScore",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getUsenetDate",
        "parameterTypes": []
      },
      {
        "name": "setCommentsLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCommentsLink",
        "parameterTypes": []
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttributes",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getSeeders",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "setFiles",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setAgePrecise",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getIndexerGuid",
        "parameterTypes": []
      },
      {
        "name": "setCategory",
        "parameterTypes": [
          "org.nzbhydra.config.category.Category"
        ]
      },
      {
        "name": "getDuplicateIdentifier",
        "parameterTypes": []
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHasNfo",
        "parameterTypes": [
          "org.nzbhydra.searching.dtoseventsenums.SearchResultItem$HasNfo"
        ]
      },
      {
        "name": "getPeers",
        "parameterTypes": []
      },
      {
        "name": "getBestDate",
        "parameterTypes": []
      },
      {
        "name": "getDownloadType",
        "parameterTypes": []
      },
      {
        "name": "setGuid",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "isAgePrecise",
        "parameterTypes": []
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getDetails",
        "parameterTypes": []
      },
      {
        "name": "getGuid",
        "parameterTypes": []
      },
      {
        "name": "setPoster",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCover",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGrabs",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPubDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "getCommentsCount",
        "parameterTypes": []
      },
      {
        "name": "setCommentsCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getFiles",
        "parameterTypes": []
      },
      {
        "name": "getHasNfo",
        "parameterTypes": []
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsenetDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "isPassworded",
        "parameterTypes": []
      },
      {
        "name": "lambda$comparator$0",
        "parameterTypes": [
          "org.nzbhydra.searching.dtoseventsenums.SearchResultItem",
          "org.nzbhydra.searching.dtoseventsenums.SearchResultItem"
        ]
      },
      {
        "name": "setFirstFound",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "getFirstFound",
        "parameterTypes": []
      },
      {
        "name": "getGroup",
        "parameterTypes": []
      },
      {
        "name": "setIndexerGuid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSearchResultId",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "setDuplicateIdentifier",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIndexer",
        "parameterTypes": [
          "org.nzbhydra.indexers.Indexer"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDetails",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAttributes",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setPassworded",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getIndexer",
        "parameterTypes": []
      },
      {
        "name": "setSearchResultId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getPubDate",
        "parameterTypes": []
      },
      {
        "name": "getCategory",
        "parameterTypes": []
      },
      {
        "name": "setPeers",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setOriginalCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getGrabs",
        "parameterTypes": []
      },
      {
        "name": "getIndexerScore",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "comparator",
        "parameterTypes": []
      },
      {
        "name": "setSeeders",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDownloadType",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.DownloadType"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.dtoseventsenums.SearchResultItem",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.searchrequests.InternalData",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "isIncludePasswords",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getFallbackStateByIndexer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIncludePasswords",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getForbiddenWords",
        "parameterTypes": []
      },
      {
        "name": "setRequiredWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getRequiredWords",
        "parameterTypes": []
      },
      {
        "name": "getFallbackState",
        "parameterTypes": []
      },
      {
        "name": "isQueryGenerated",
        "parameterTypes": []
      },
      {
        "name": "setFallbackStateByIndexer",
        "parameterTypes": [
          "java.lang.String",
          "org.nzbhydra.searching.searchrequests.InternalData$FallbackState"
        ]
      },
      {
        "name": "getNewznabCategories",
        "parameterTypes": []
      },
      {
        "name": "lambda$getFallbackStateByIndexer$0",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setForbiddenWords",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setQueryGenerated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNewznabCategories",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.searchrequests.SearchRequest",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "getIndexers",
        "parameterTypes": []
      },
      {
        "name": "getIdentifiers",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "simpleToString",
        "parameterTypes": []
      },
      {
        "name": "setSearchRequestId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getDownloadType",
        "parameterTypes": []
      },
      {
        "name": "setMinsize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getMinsize",
        "parameterTypes": []
      },
      {
        "name": "getMaxage",
        "parameterTypes": []
      },
      {
        "name": "getSearchType",
        "parameterTypes": []
      },
      {
        "name": "getCategory",
        "parameterTypes": []
      },
      {
        "name": "setIndexers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setSeason",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setLoadAll",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSeason",
        "parameterTypes": []
      },
      {
        "name": "setMaxage",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getEpisode",
        "parameterTypes": []
      },
      {
        "name": "getQuery",
        "parameterTypes": []
      },
      {
        "name": "getMaxsize",
        "parameterTypes": []
      },
      {
        "name": "getInternalData",
        "parameterTypes": []
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMinage",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setInternalData",
        "parameterTypes": [
          "org.nzbhydra.searching.searchrequests.InternalData"
        ]
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "isUpdateQuery",
        "parameterTypes": []
      },
      {
        "name": "setMaxsize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setEpisode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "meets",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSourceRestriction"
        ]
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isIdBasedQuery",
        "parameterTypes": []
      },
      {
        "name": "extractForbiddenWords",
        "parameterTypes": []
      },
      {
        "name": "getLimit",
        "parameterTypes": []
      },
      {
        "name": "getMinage",
        "parameterTypes": []
      },
      {
        "name": "getAuthor",
        "parameterTypes": []
      },
      {
        "name": "setAuthor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDownloadType",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.DownloadType"
        ]
      },
      {
        "name": "setQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "org.nzbhydra.config.SearchSource"
        ]
      },
      {
        "name": "setCategory",
        "parameterTypes": [
          "org.nzbhydra.config.category.Category"
        ]
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "getSearchRequestId",
        "parameterTypes": []
      },
      {
        "name": "setSearchType",
        "parameterTypes": [
          "org.nzbhydra.config.searching.SearchType"
        ]
      },
      {
        "name": "setIdentifiers",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "isLoadAll",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.searching.searchrequests.SearchRequestFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.searchrequests.SearchRequestFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.uniqueness.IndexerUniquenessScoreEntity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setHasResult",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHave",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIndexer",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "setInvolved",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "org.nzbhydra.searching.uniqueness.IndexerUniquenessScoreEntity",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.uniqueness.IndexerUniquenessScoreEntityRepository",
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.springconfig.AppConfig",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "requestFactory"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getRestTemplate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.springconfig.AppConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getRestTemplate",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.springconfig.AppConfig",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.springconfig.AppConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "getRestTemplate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.springconfig.AppConfig$$SpringCGLIB$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.springconfig.AppConfig$$SpringCGLIB$$2",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.springconfig.ControllerAdvices",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "initBinder",
        "parameterTypes": [
          "org.springframework.web.bind.WebDataBinder"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.springconfig.GracefulSpringShutdown",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.systemcontrol.SystemControl",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.systemcontrol.SystemControl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": [
          "java.lang.Integer",
          "java.lang.Boolean"
        ]
      }
    ],
    "name": "org.nzbhydra.systemcontrol.SystemControlWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.systemcontrol.SystemControlWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.tasks.HydraTaskConfiguration",
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "taskExecutor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.tasks.HydraTaskConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "taskExecutor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.tasks.HydraTaskConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "taskExecutor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.tasks.HydraTaskConfiguration$$SpringCGLIB$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.tasks.HydraTaskConfiguration$$SpringCGLIB$$2",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.tasks.HydraTaskScheduler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "onShutdown",
        "parameterTypes": []
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "onShutdown",
        "parameterTypes": []
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ],
    "name": "org.nzbhydra.tasks.HydraTaskScheduler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.tasks.HydraTaskScheduler$TaskRuntimeInformation",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setMethod",
        "parameterTypes": [
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "getMethod",
        "parameterTypes": []
      },
      {
        "name": "getBean",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setBean",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.tasks.HydraTasksWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.tasks.HydraTasksWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.update.AutomaticUpdater",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "genericStorage"
      },
      {
        "name": "updateManager"
      },
      {
        "name": "configProvider"
      }
    ],
    "methods": [
      {
        "name": "checkAndInstall",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "checkAndInstall",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.update.AutomaticUpdater",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.update.AutomaticUpdater",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "checkAndInstall",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.update.UpdateData",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setIgnoreVersions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getIgnoreVersions",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.update.UpdateManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.update.UpdateManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.update.UpdateManager$BlockedVersion",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.update.UpdateManager$UpdateEvent",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setState",
        "parameterTypes": [
          "org.nzbhydra.update.UpdateManager$UpdateEvent$State"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.update.UpdateManager$UpdateInfo",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setPackageInfo",
        "parameterTypes": [
          "org.nzbhydra.update.UpdateManager$PackageInfo"
        ]
      },
      {
        "name": "isBetaUpdateAvailable",
        "parameterTypes": []
      },
      {
        "name": "setLatestVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isLatestVersionIsBeta",
        "parameterTypes": []
      },
      {
        "name": "setCurrentVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setBetaVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLatestVersion",
        "parameterTypes": []
      },
      {
        "name": "isLatestVersionIgnored",
        "parameterTypes": []
      },
      {
        "name": "isBetaVersionsEnabled",
        "parameterTypes": []
      },
      {
        "name": "setLatestVersionIgnored",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isUpdateAvailable",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLatestVersionIsBeta",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBetaVersion",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setBetaVersionsEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBetaUpdateAvailable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPackageInfo",
        "parameterTypes": []
      },
      {
        "name": "setUpdateAvailable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getCurrentVersion",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getVersions",
        "parameterTypes": []
      },
      {
        "name": "handleUpdateException",
        "parameterTypes": [
          "org.nzbhydra.update.UpdateException"
        ]
      },
      {
        "name": "isWrapperOutdated",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.update.UpdatesWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.update.UpdatesWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.ApiError",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "timestamp",
        "parameterTypes": []
      },
      {
        "name": "status",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "message",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getAdminRestricted",
        "parameterTypes": []
      },
      {
        "name": "getAuthConfigured",
        "parameterTypes": []
      },
      {
        "name": "getAuthType",
        "parameterTypes": []
      },
      {
        "name": "getBaseUrl",
        "parameterTypes": []
      },
      {
        "name": "getMaySeeAdmin",
        "parameterTypes": []
      },
      {
        "name": "getMaySeeDetailsDl",
        "parameterTypes": []
      },
      {
        "name": "getMaySeeSearch",
        "parameterTypes": []
      },
      {
        "name": "getMaySeeStats",
        "parameterTypes": []
      },
      {
        "name": "getSafeConfig",
        "parameterTypes": []
      },
      {
        "name": "getSearchRestricted",
        "parameterTypes": []
      },
      {
        "name": "getShowIndexerSelection",
        "parameterTypes": []
      },
      {
        "name": "getStatsRestricted",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.web.BootstrappedDataTO",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.web.ErrorHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.ErrorHandler$JsonExceptionResponse",
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "setException",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParameters",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getException",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getParameters",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "canEqual",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.HelpWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.HydraErrorController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.error.ErrorAttributes"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "preHandle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.nzbhydra.web.Interceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.web.Interceptor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "preHandle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "index",
        "parameterTypes": [
          "jakarta.servlet.http.HttpSession",
          "java.security.Principal",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      }
    ],
    "name": "org.nzbhydra.web.MainWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.web.MainWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.web.NzbDetailsWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.web.NzbDetailsWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.web.UrlCalculator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.web.UrlCalculator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.WebConfiguration",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "interceptor"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "filterRegistrationBean",
        "parameterTypes": []
      },
      {
        "name": "marshaller",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.WebConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "addFormatters",
        "parameterTypes": [
          "org.springframework.format.FormatterRegistry"
        ]
      },
      {
        "name": "addResourceHandlers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
        ]
      },
      {
        "name": "filterRegistrationBean",
        "parameterTypes": []
      },
      {
        "name": "marshaller",
        "parameterTypes": []
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      }
    ],
    "name": "org.nzbhydra.web.WebConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.web.WebConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "beanNameHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "defaultServletHandlerMapping",
        "parameterTypes": []
      },
      {
        "name": "filterRegistrationBean",
        "parameterTypes": []
      },
      {
        "name": "flashMapManager",
        "parameterTypes": []
      },
      {
        "name": "handlerExceptionResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": []
      },
      {
        "name": "httpRequestHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "localeResolver",
        "parameterTypes": []
      },
      {
        "name": "marshaller",
        "parameterTypes": []
      },
      {
        "name": "mvcContentNegotiationManager",
        "parameterTypes": []
      },
      {
        "name": "mvcConversionService",
        "parameterTypes": []
      },
      {
        "name": "mvcHandlerMappingIntrospector",
        "parameterTypes": []
      },
      {
        "name": "mvcPathMatcher",
        "parameterTypes": []
      },
      {
        "name": "mvcPatternParser",
        "parameterTypes": []
      },
      {
        "name": "mvcResourceUrlProvider",
        "parameterTypes": []
      },
      {
        "name": "mvcUriComponentsContributor",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
        ]
      },
      {
        "name": "mvcUrlPathHelper",
        "parameterTypes": []
      },
      {
        "name": "mvcValidator",
        "parameterTypes": []
      },
      {
        "name": "mvcViewResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "simpleControllerHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "themeResolver",
        "parameterTypes": []
      },
      {
        "name": "viewControllerHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "viewNameTranslator",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.WebConfiguration$$SpringCGLIB$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.web.WebConfiguration$$SpringCGLIB$$2",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.web.WebSocketConfig",
    "allPublicMethods": true,
    "methods": [
      {
        "name": "onShutdown",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.WebSocketConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "configureClientInboundChannel",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.ChannelRegistration"
        ]
      },
      {
        "name": "configureClientOutboundChannel",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.ChannelRegistration"
        ]
      },
      {
        "name": "configureMessageBroker",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.MessageBrokerRegistry"
        ]
      },
      {
        "name": "onShutdown",
        "parameterTypes": []
      },
      {
        "name": "registerStompEndpoints",
        "parameterTypes": [
          "org.springframework.web.socket.config.annotation.StompEndpointRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.WebSocketConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "logfileContent",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.web.WelcomeWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.web.WelcomeWeb",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "createRequest",
        "parameterTypes": [
          "java.net.URI",
          "org.springframework.http.HttpMethod"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.webaccess.HydraOkHttp3ClientHttpRequestFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.webaccess.HydraOkHttp3ClientHttpRequestFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "createRequest",
        "parameterTypes": [
          "java.net.URI",
          "org.springframework.http.HttpMethod"
        ]
      },
      {
        "name": "handleConfigChangedEvent",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.webaccess.Ssl",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.webaccess.Ssl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "handleConfigChangedEvent",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.nzbhydra.webaccess.WebAccess",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.webaccess.WebAccess",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "determineBeanType",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "setBeforeExistingAdvisors",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.ProxyConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "copyFrom",
        "parameterTypes": [
          "org.springframework.aop.framework.ProxyConfig"
        ]
      },
      {
        "name": "isExposeProxy",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      },
      {
        "name": "isOpaque",
        "parameterTypes": []
      },
      {
        "name": "isOptimize",
        "parameterTypes": []
      },
      {
        "name": "isProxyTargetClass",
        "parameterTypes": []
      },
      {
        "name": "setExposeProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFrozen",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOpaque",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOptimize",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setProxyTargetClass",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "org.springframework.aop.framework.ProxyProcessorSupport"
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setProxyClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "determineBeanType",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "determineCandidateConstructors",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "getEarlyBeanReference",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInstantiation",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessProperties",
        "parameterTypes": [
          "org.springframework.beans.PropertyValues",
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "predictBeanType",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "setAdvisorAdapterRegistry",
        "parameterTypes": [
          "org.springframework.aop.framework.adapter.AdvisorAdapterRegistry"
        ]
      },
      {
        "name": "setApplyCommonInterceptorsFirst",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCustomTargetSourceCreators",
        "parameterTypes": [
          "org.springframework.aop.framework.autoproxy.TargetSourceCreator[]"
        ]
      },
      {
        "name": "setFrozen",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInterceptorNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.scope.ScopedProxyFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setTargetBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAdvice",
        "parameterTypes": []
      },
      {
        "name": "getAdviceBeanName",
        "parameterTypes": []
      },
      {
        "name": "setAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "setAdviceBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.support.AbstractPointcutAdvisor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isPerInstance",
        "parameterTypes": []
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "org.springframework.aop.support.AbstractPointcutAdvisor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aot.hint.RuntimeHintsRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactory",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.AbstractFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setSingleton",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.support.NullBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.xml.XmlBeanDefinitionReader",
    "allPublicFields": true
  },
  {
    "name": "org.springframework.boot.ApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.SpringApplicationRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.SpringBootExceptionReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "beansEndpoint",
        "parameterTypes": [
          "org.springframework.context.ConfigurableApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "cachesEndpoint",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "cachesEndpointWebExtension",
        "parameterTypes": [
          "org.springframework.boot.actuate.cache.CachesEndpoint"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "conditionsReportEndpoint",
        "parameterTypes": [
          "org.springframework.context.ConfigurableApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "configurationPropertiesReportEndpoint",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "configurationPropertiesReportEndpointWebExtension",
        "parameterTypes": [
          "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint",
          "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "endpointCachingOperationInvokerAdvisor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "endpointOperationParameterMapper",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "match",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.ExposableEndpoint"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "endpointObjectMapper",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getRootPath",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.EndpointId"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "servletExposeExcludePropertyEndpointFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "servletEndpointRegistrar",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
          "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
          "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      },
      {
        "name": "controllerEndpointDiscoverer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "controllerExposeExcludePropertyEndpointFilter",
        "parameterTypes": []
      },
      {
        "name": "endpointMediaTypes",
        "parameterTypes": []
      },
      {
        "name": "pathMappedEndpoints",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "webEndpointDiscoverer",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
          "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "webEndpointPathMapper",
        "parameterTypes": []
      },
      {
        "name": "webExposeExcludePropertyEndpointFilter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "servletEndpointDiscoverer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getExposure",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getExposure",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getInclude",
        "parameterTypes": []
      },
      {
        "name": "setInclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getInclude",
        "parameterTypes": []
      },
      {
        "name": "setInclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "controllerEndpointHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      },
      {
        "name": "endpointObjectMapperWebMvcConfigurer",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper"
        ]
      },
      {
        "name": "webEndpointServletHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
          "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
          "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
          "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration$EndpointObjectMapperWebMvcConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "configureMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "environmentEndpoint",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "environmentEndpointWebExtension",
        "parameterTypes": [
          "org.springframework.boot.actuate.env.EnvironmentEndpoint",
          "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.flyway.FlywayEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "flywayEndpoint",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "registerContributor",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNames",
        "parameterTypes": []
      },
      {
        "name": "getPrimary",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "pingHealthContributor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "healthContributorRegistry",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.health.HealthEndpointGroups",
          "java.util.Map",
          "java.util.Map"
        ]
      },
      {
        "name": "healthEndpoint",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.HealthContributorRegistry",
          "org.springframework.boot.actuate.health.HealthEndpointGroups",
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      },
      {
        "name": "healthEndpointGroups",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      },
      {
        "name": "healthEndpointGroupsBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "healthHttpCodeStatusMapper",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      },
      {
        "name": "healthStatusAggregator",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getShowDetails",
        "parameterTypes": []
      },
      {
        "name": "setShowDetails",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getShowDetails",
        "parameterTypes": []
      },
      {
        "name": "setShowDetails",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "healthEndpointWebExtension",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.HealthContributorRegistry",
          "org.springframework.boot.actuate.health.HealthEndpointGroups",
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "healthEndpointWebMvcHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
          "org.springframework.boot.actuate.health.HealthEndpointGroups"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "getShowComponents",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setShowComponents",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "getShowComponents",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setShowComponents",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "infoEndpoint",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "dbHealthContributor",
        "parameterTypes": [
          "java.util.Map",
          "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "loggersEndpoint",
        "parameterTypes": [
          "org.springframework.boot.logging.LoggingSystem",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "heapDumpWebEndpoint",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dumpEndpoint",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "classLoaderMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmCompilationMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmGcMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmHeapPressureMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmInfoMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmMemoryMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmThreadMetrics",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "logbackMetrics",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "meterRegistryPostProcessor",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "micrometerClock",
        "parameterTypes": []
      },
      {
        "name": "propertiesMeterFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "metricsEndpoint",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "accept",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id",
          "io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
        ]
      },
      {
        "name": "map",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "diskSpaceMetrics",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      },
      {
        "name": "fileDescriptorMetrics",
        "parameterTypes": []
      },
      {
        "name": "processorMetrics",
        "parameterTypes": []
      },
      {
        "name": "uptimeMetrics",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.ValidationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration$CaffeineCacheMeterBinderProviderConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "caffeineCacheMeterBinderProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsRegistrarConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry",
          "java.util.Collection",
          "java.util.Map"
        ]
      },
      {
        "name": "cacheMetricsRegistrar",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.data.MetricsRepositoryMethodInvocationListenerBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      },
      {
        "name": "metricsRepositoryMethodInvocationListener",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider"
        ]
      },
      {
        "name": "metricsRepositoryMethodInvocationListenerBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "repositoryTagsProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "simpleConfig",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties"
        ]
      },
      {
        "name": "simpleMeterRegistry",
        "parameterTypes": [
          "io.micrometer.core.instrument.simple.SimpleConfig",
          "io.micrometer.core.instrument.Clock"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimplePropertiesConfigAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "mode",
        "parameterTypes": []
      },
      {
        "name": "prefix",
        "parameterTypes": []
      },
      {
        "name": "step",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dataSourcePoolMetadataMeterBinder",
        "parameterTypes": [
          "java.util.Map",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration$DataSourcePoolMetadataMeterBinder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "hikariDataSourceMeterBinder",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration$HikariDataSourceMeterBinder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "startupTimeMetrics",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "bindTaskExecutorsToRegistry",
        "parameterTypes": [
          "java.util.Map",
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "tomcatMetricsBinder",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "observationRegistry",
        "parameterTypes": []
      },
      {
        "name": "observationRegistryPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultMeterObservationHandler",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "metricsObservationHandlerGrouping",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "metricsHttpClientUriTagFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "observationRestTemplateCustomizer",
        "parameterTypes": [
          "io.micrometer.observation.ObservationRegistry",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      },
      {
        "name": "webMvcObservationFilter",
        "parameterTypes": [
          "io.micrometer.observation.ObservationRegistry",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "metricsHttpServerUriTagFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "scheduledTasksEndpoint",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration$MvcRequestMatcherConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "requestMatcherProvider",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "diskSpaceHealthIndicator",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "mappingsEndpoint",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "filterMappingDescriptionProvider",
        "parameterTypes": []
      },
      {
        "name": "servletMappingDescriptionProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dispatcherServletMappingDescriptionProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "managementServletContext",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      },
      {
        "name": "servletWebChildContextFactory",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.beans.BeansEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpointWebExtension",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createOperationKey",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Operation"
        ]
      },
      {
        "name": "getEndpoints",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "mapParameterValue",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.invoke.OperationParameter",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.EndpointId",
          "org.springframework.boot.actuate.endpoint.OperationType",
          "org.springframework.boot.actuate.endpoint.invoke.OperationParameters",
          "org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "iterator",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "onStartup",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getEndpoints",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AdditionalHealthEndpointPathsWebMvcHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.flyway.FlywayEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.AbstractHealthIndicator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "health",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.DefaultContributorRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "registerContributor",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.DefaultHealthContributorRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getContributor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "registerContributor",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "unregisterContributor",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getHealth",
        "parameterTypes": [
          "java.lang.Object",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointWebExtension",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.PingHealthIndicator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getStatusCode",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.Status"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.SimpleStatusAggregator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getAggregateStatus",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.info.InfoEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.management.HeapDumpWebEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.management.ThreadDumpEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.MetricsEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.cache.CacheMetricsRegistrar",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.cache.CaffeineCacheMeterBinderProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getMeterBinder",
        "parameterTypes": [
          "org.springframework.cache.Cache",
          "java.lang.Iterable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.data.DefaultRepositoryTagsProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "repositoryTags",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterInvocation",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "supportsEventType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.web.client.ObservationRestTemplateCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.web.client.RestTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.sbom.SbomProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletsMappingDescriptionProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "describeMappings",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "getMappingName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.FiltersMappingDescriptionProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "describeMappings",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "getMappingName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.ServletsMappingDescriptionProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "describeMappings",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "getMappingName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "applicationAvailability",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultLifecycleProcessor",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.context.LifecycleProperties"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "propertySourcesPlaceholderConfigurer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "persistenceExceptionTranslationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisUrlSyntaxFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
        ]
      },
      {
        "name": "pageableCustomizer",
        "parameterTypes": []
      },
      {
        "name": "sortCustomizer",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "flywayDefaultDdlModeProvider",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "stringOrNumberMigrationVersionConverter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "flyway",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.flyway.FlywayProperties",
          "org.springframework.core.io.ResourceLoader",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.autoconfigure.flyway.ResourceProviderCustomizer"
        ]
      },
      {
        "name": "flywayInitializer",
        "parameterTypes": [
          "org.flywaydb.core.Flyway",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "resourceProviderCustomizer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "getConvertibleTypes",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getLocations",
        "parameterTypes": []
      },
      {
        "name": "getSchemas",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSchemas",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getLocations",
        "parameterTypes": []
      },
      {
        "name": "getSchemas",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSchemas",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywaySchemaManagementProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getSchemaManagement",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.ResourceProviderCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "gson",
        "parameterTypes": [
          "com.google.gson.GsonBuilder"
        ]
      },
      {
        "name": "gsonBuilder",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "standardGsonBuilderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.gson.GsonProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "com.google.gson.GsonBuilder"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.gson.GsonProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "iterator",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "messageConverters",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "stringHttpMessageConverter",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "mappingJackson2HttpMessageConverter",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jsonComponentModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "standardJacksonObjectMapperBuilderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jsonMixinModule",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.jackson.JsonMixinModuleEntries"
        ]
      },
      {
        "name": "jsonMixinModuleEntries",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonObjectMapperBuilder",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonObjectMapper",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "parameterNamesModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getDeserialization",
        "parameterTypes": []
      },
      {
        "name": "getSerialization",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getDeserialization",
        "parameterTypes": []
      },
      {
        "name": "getSerialization",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dataSource",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jdbcTemplate",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.jdbc.JdbcProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "namedParameterJdbcTemplate",
        "parameterTypes": [
          "org.springframework.jdbc.core.JdbcTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "hikariPoolDataSourceMetadataProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jooq.NoDslContextBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "entityManagerFactory",
        "parameterTypes": [
          "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
          "org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes"
        ]
      },
      {
        "name": "entityManagerFactoryBuilder",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "jpaVendorAdapter",
        "parameterTypes": []
      },
      {
        "name": "transactionManager",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "persistenceManagedTypes",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory",
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "setDatabasePlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOpenInView",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "setDatabasePlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOpenInView",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MissingR2dbcPoolDependencyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MultipleConnectionPoolConfigurationsFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.NoConnectionFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.AntPathRequestMatcherProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getRequestMatcher",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "authenticationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "securityFilterChainRegistration",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.security.SecurityProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dataSourceScriptDatabaseInitializer",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.ScheduledBeanLazyInitializationExcludeFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isExcluded",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.beans.factory.config.BeanDefinition",
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "taskExecutorBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "scheduledBeanLazyInitializationExcludeFilter",
        "parameterTypes": []
      },
      {
        "name": "taskSchedulerBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "templateEngine",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "defaultTemplateResolver",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "thymeleafViewResolver",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
          "org.thymeleaf.spring6.SpringTemplateEngine"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "platformTransactionManagerCustomizers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "transactionTemplate",
        "parameterTypes": [
          "org.springframework.transaction.PlatformTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.transaction.TransactionManager"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.transaction.PlatformTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultValidator",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "methodValidationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getCompression",
        "parameterTypes": []
      },
      {
        "name": "getServlet",
        "parameterTypes": []
      },
      {
        "name": "getSsl",
        "parameterTypes": []
      },
      {
        "name": "getTomcat",
        "parameterTypes": []
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "setForwardHeadersStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCompression",
        "parameterTypes": []
      },
      {
        "name": "getServlet",
        "parameterTypes": []
      },
      {
        "name": "getSsl",
        "parameterTypes": []
      },
      {
        "name": "getTomcat",
        "parameterTypes": []
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "setForwardHeadersStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "getJsp",
        "parameterTypes": []
      },
      {
        "name": "getSession",
        "parameterTypes": []
      },
      {
        "name": "setContextPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "getJsp",
        "parameterTypes": []
      },
      {
        "name": "getSession",
        "parameterTypes": []
      },
      {
        "name": "setContextPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getThreads",
        "parameterTypes": []
      },
      {
        "name": "setRedirectContextRoot",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getThreads",
        "parameterTypes": []
      },
      {
        "name": "setRedirectContextRoot",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setMax",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setMax",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getResources",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getResources",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setStaticLocations",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setStaticLocations",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "tomcatWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dispatcherServlet",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dispatcherServletRegistration",
        "parameterTypes": [
          "org.springframework.web.servlet.DispatcherServlet",
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addUrlMappings",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "setUrlMappings",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "characterEncodingFilter",
        "parameterTypes": []
      },
      {
        "name": "localeCharsetMappingsCustomizer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
        ]
      },
      {
        "name": "multipartConfigElement",
        "parameterTypes": []
      },
      {
        "name": "multipartResolver",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setMaxFileSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxRequestSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMaxFileSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxRequestSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "servletWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "tomcatServletWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "tomcatServletWebServerFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "resolveErrorView",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "org.springframework.http.HttpStatus",
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "errorAttributes",
        "parameterTypes": []
      },
      {
        "name": "errorPageCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
        ]
      },
      {
        "name": "preserveErrorControllerTargetClassPostProcessor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.web.WebProperties"
        ]
      },
      {
        "name": "conventionErrorViewResolver",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "registerErrorPages",
        "parameterTypes": [
          "org.springframework.boot.web.server.ErrorPageRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration$WebSocketMessageConverterConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      },
      {
        "name": "configureMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "eagerStompWebSocketHandlerMapping",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "websocketServletWebServerCustomizer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailabilityBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getLastChangeEvent",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.boot.availability.AvailabilityState"
        ]
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataNotFoundFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.migrator.PropertiesMigrationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzers",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.PropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonComponentModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModuleEntries",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.LoggingSystemFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "initializeDatabase",
        "parameterTypes": []
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.task.TaskExecutorBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.task.TaskSchedulerBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.context.MissingWebServerFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConnectorStartFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addConnectorCustomizers",
        "parameterTypes": [
          "org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer[]"
        ]
      },
      {
        "name": "addContextCustomizers",
        "parameterTypes": [
          "org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer[]"
        ]
      },
      {
        "name": "addEngineValves",
        "parameterTypes": [
          "org.apache.catalina.Valve[]"
        ]
      },
      {
        "name": "addProtocolHandlerCustomizers",
        "parameterTypes": [
          "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer[]"
        ]
      },
      {
        "name": "getWebServer",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.ServletContextInitializer[]"
        ]
      },
      {
        "name": "setBackgroundProcessorDelay",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setBaseDirectory",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "setUriEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addErrorPages",
        "parameterTypes": [
          "org.springframework.boot.web.server.ErrorPage[]"
        ]
      },
      {
        "name": "getAddress",
        "parameterTypes": []
      },
      {
        "name": "getCompression",
        "parameterTypes": []
      },
      {
        "name": "getErrorPages",
        "parameterTypes": []
      },
      {
        "name": "getHttp2",
        "parameterTypes": []
      },
      {
        "name": "getOrCreateSslStoreProvider",
        "parameterTypes": []
      },
      {
        "name": "getPort",
        "parameterTypes": []
      },
      {
        "name": "getServerHeader",
        "parameterTypes": []
      },
      {
        "name": "getShutdown",
        "parameterTypes": []
      },
      {
        "name": "getSsl",
        "parameterTypes": []
      },
      {
        "name": "getSslStoreProvider",
        "parameterTypes": []
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "setCompression",
        "parameterTypes": [
          "org.springframework.boot.web.server.Compression"
        ]
      },
      {
        "name": "setErrorPages",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setHttp2",
        "parameterTypes": [
          "org.springframework.boot.web.server.Http2"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setServerHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      },
      {
        "name": "setSslStoreProvider",
        "parameterTypes": [
          "org.springframework.boot.web.server.SslStoreProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Compression",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "org.springframework.boot.web.server.Compression",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Cookie",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.boot.web.server.Cookie",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Ssl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeyStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeyStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.boot.web.server.Ssl",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addServletNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "addServletRegistrationBeans",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.ServletRegistrationBean[]"
        ]
      },
      {
        "name": "addUrlPatterns",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getServletNames",
        "parameterTypes": []
      },
      {
        "name": "getServletRegistrationBeans",
        "parameterTypes": []
      },
      {
        "name": "getUrlPatterns",
        "parameterTypes": []
      },
      {
        "name": "isMatchAfter",
        "parameterTypes": []
      },
      {
        "name": "setDispatcherTypes",
        "parameterTypes": [
          "jakarta.servlet.DispatcherType",
          "jakarta.servlet.DispatcherType[]"
        ]
      },
      {
        "name": "setDispatcherTypes",
        "parameterTypes": [
          "java.util.EnumSet"
        ]
      },
      {
        "name": "setMatchAfter",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setServletNames",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setServletRegistrationBeans",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setUrlPatterns",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.DynamicRegistrationBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addInitParameter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "jakarta.servlet.Registration$Dynamic"
        ]
      },
      {
        "name": "getInitParameters",
        "parameterTypes": []
      },
      {
        "name": "isAsyncSupported",
        "parameterTypes": []
      },
      {
        "name": "setAsyncSupported",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.FilterRegistrationBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getFilter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.RegistrationBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "onStartup",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.ServletRegistrationBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getMultipartConfig",
        "parameterTypes": []
      },
      {
        "name": "getServlet",
        "parameterTypes": []
      },
      {
        "name": "getServletName",
        "parameterTypes": []
      },
      {
        "name": "getUrlMappings",
        "parameterTypes": []
      },
      {
        "name": "setLoadOnStartup",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMultipartConfig",
        "parameterTypes": [
          "jakarta.servlet.MultipartConfigElement"
        ]
      },
      {
        "name": "setServlet",
        "parameterTypes": [
          "jakarta.servlet.Servlet"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getError",
        "parameterTypes": [
          "org.springframework.web.context.request.WebRequest"
        ]
      },
      {
        "name": "getErrorAttributes",
        "parameterTypes": [
          "org.springframework.web.context.request.WebRequest",
          "org.springframework.boot.web.error.ErrorAttributeOptions"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "resolveException",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "java.lang.Exception"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addCookieSameSiteSuppliers",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier[]"
        ]
      },
      {
        "name": "addInitializers",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.ServletContextInitializer[]"
        ]
      },
      {
        "name": "addWebListeners",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getContextPath",
        "parameterTypes": []
      },
      {
        "name": "getCookieSameSiteSuppliers",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDocumentRoot",
        "parameterTypes": []
      },
      {
        "name": "getInitParameters",
        "parameterTypes": []
      },
      {
        "name": "getJsp",
        "parameterTypes": []
      },
      {
        "name": "getLocaleCharsetMappings",
        "parameterTypes": []
      },
      {
        "name": "getMimeMappings",
        "parameterTypes": []
      },
      {
        "name": "getSession",
        "parameterTypes": []
      },
      {
        "name": "isRegisterDefaultServlet",
        "parameterTypes": []
      },
      {
        "name": "setContextPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCookieSameSiteSuppliers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDocumentRoot",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setInitializers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setJsp",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.server.Jsp"
        ]
      },
      {
        "name": "setLocaleCharsetMappings",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setMimeMappings",
        "parameterTypes": [
          "org.springframework.boot.web.server.MimeMappings"
        ]
      },
      {
        "name": "setRegisterDefaultServlet",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSession",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.server.Session"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Encoding",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setForce",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setForce",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "org.springframework.boot.web.servlet.server.Encoding",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Jsp",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setRegistered",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setRegistered",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "org.springframework.boot.web.servlet.server.Jsp",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCookie",
        "parameterTypes": []
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getCookie",
        "parameterTypes": []
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ],
    "name": "org.springframework.boot.web.servlet.server.Session",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "allDeclaredFields": true,
    "name": "org.springframework.boot.web.servlet.server.Session$Cookie",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cache.annotation.AbstractCachingConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.annotation.AnnotationCacheOperationSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isCandidateClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.annotation.ProxyCachingConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "cacheAdvisor",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheOperationSource",
          "org.springframework.cache.interceptor.CacheInterceptor"
        ]
      },
      {
        "name": "cacheInterceptor",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheOperationSource"
        ]
      },
      {
        "name": "cacheOperationSource",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cache.caffeine.CaffeineCacheManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCacheNames",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.AbstractCacheInvoker",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getErrorHandler",
        "parameterTypes": []
      },
      {
        "name": "setErrorHandler",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheErrorHandler"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.AbstractFallbackCacheOperationSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCacheOperations",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.BeanFactoryCacheOperationSourceAdvisor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getPointcut",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.CacheAspectSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "configure",
        "parameterTypes": [
          "java.util.function.Supplier",
          "java.util.function.Supplier",
          "java.util.function.Supplier",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "getCacheOperationSource",
        "parameterTypes": []
      },
      {
        "name": "getCacheResolver",
        "parameterTypes": []
      },
      {
        "name": "getKeyGenerator",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setCacheManager",
        "parameterTypes": [
          "org.springframework.cache.CacheManager"
        ]
      },
      {
        "name": "setCacheOperationSource",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheOperationSource"
        ]
      },
      {
        "name": "setCacheOperationSources",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheOperationSource[]"
        ]
      },
      {
        "name": "setCacheResolver",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheResolver"
        ]
      },
      {
        "name": "setKeyGenerator",
        "parameterTypes": [
          "org.springframework.cache.interceptor.KeyGenerator"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.CacheInterceptor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "org.aopalliance.intercept.MethodInvocation"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.ApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassPostProcessor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMetadataReaderFactory",
        "parameterTypes": [
          "org.springframework.core.type.classreading.MetadataReaderFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.support.ApplicationObjectSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "onClose",
        "parameterTypes": []
      },
      {
        "name": "onRefresh",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.core.convert.support.GenericConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addConverter",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class",
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.GenericConverter"
        ]
      },
      {
        "name": "addConverterFactory",
        "parameterTypes": [
          "org.springframework.core.convert.converter.ConverterFactory"
        ]
      },
      {
        "name": "canBypassConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "removeConvertible",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.core.io.InputStreamSource[]",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.io.support.PropertiesLoaderSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setFileEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreResourceNotFound",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocalOverride",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "org.springframework.core.io.Resource[]"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setPropertiesArray",
        "parameterTypes": [
          "java.util.Properties[]"
        ]
      },
      {
        "name": "setPropertiesPersister",
        "parameterTypes": [
          "org.springframework.util.PropertiesPersister"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setFileEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreResourceNotFound",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocalOverride",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "org.springframework.core.io.Resource[]"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setPropertiesArray",
        "parameterTypes": [
          "java.util.Properties[]"
        ]
      },
      {
        "name": "setPropertiesPersister",
        "parameterTypes": [
          "org.springframework.util.PropertiesPersister"
        ]
      }
    ],
    "name": "org.springframework.core.io.support.PropertiesLoaderSupport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.Example",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.geo.GeoModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.convert.threeten.Jsr310JpaConverters$InstantConverter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.convert.threeten.Jsr310JpaConverters$InstantConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "convertToDatabaseColumn",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convertToEntityAttribute",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.Query",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension$JpaRepositoryRegistrationAotProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "getExtensionId",
        "parameterTypes": []
      },
      {
        "name": "getRootObject",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactory",
    "allDeclaredConstructors": true
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "setEscapeCharacter",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "setMappingContext",
        "parameterTypes": [
          "org.springframework.data.mapping.context.MappingContext"
        ]
      }
    ],
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "setEntityPathResolver",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "setEscapeCharacter",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "setMappingContext",
        "parameterTypes": [
          "org.springframework.data.mapping.context.MappingContext"
        ]
      },
      {
        "name": "setQueryMethodFactory",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.query.JpaQueryMethodFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.util.HibernateProxyDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.util.JpaMetamodelCacheCleanup",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.mapping.context.MappingContext",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.config.RepositoryRegistrationAotProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getConfigMap",
        "parameterTypes": []
      },
      {
        "name": "processAheadOfTime",
        "parameterTypes": [
          "org.springframework.beans.factory.support.RegisteredBean"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setConfigMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.RepositoryMetadata",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
    "allPublicMethods": true,
    "methods": [
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRepositoryFragments",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"
        ]
      },
      {
        "name": "setQueryLookupStrategyKey",
        "parameterTypes": [
          "org.springframework.data.repository.query.QueryLookupStrategy$Key"
        ]
      },
      {
        "name": "setNamedQueries",
        "parameterTypes": [
          "org.springframework.data.repository.core.NamedQueries"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addRepositoryFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"
        ]
      },
      {
        "name": "getEntityInformation",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": []
      },
      {
        "name": "getQueryMethods",
        "parameterTypes": []
      },
      {
        "name": "getRepositoryInformation",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setCustomImplementation",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setEvaluationContextProvider",
        "parameterTypes": [
          "org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"
        ]
      },
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamedQueries",
        "parameterTypes": [
          "org.springframework.data.repository.core.NamedQueries"
        ]
      },
      {
        "name": "setQueryLookupStrategyKey",
        "parameterTypes": [
          "org.springframework.data.repository.query.QueryLookupStrategy$Key"
        ]
      },
      {
        "name": "setRepositoryBaseClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setRepositoryFragments",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "addRepositoryFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"
        ]
      },
      {
        "name": "getEntityInformation",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": []
      },
      {
        "name": "getQueryMethods",
        "parameterTypes": []
      },
      {
        "name": "getRepositoryInformation",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setCustomImplementation",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setEvaluationContextProvider",
        "parameterTypes": [
          "org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"
        ]
      },
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamedQueries",
        "parameterTypes": [
          "org.springframework.data.repository.core.NamedQueries"
        ]
      },
      {
        "name": "setQueryLookupStrategyKey",
        "parameterTypes": [
          "org.springframework.data.repository.query.QueryLookupStrategy$Key"
        ]
      },
      {
        "name": "setRepositoryBaseClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setRepositoryFragments",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"
        ]
      }
    ],
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactorySupport",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragment",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
    "allPublicMethods": true,
    "methods": [
      {
        "name": "setEnableDefaultTransactions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setEnableDefaultTransactions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setEnableDefaultTransactions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery$FetchableFluentQuery",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.QueryByExampleExecutor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.util.CustomCollectionRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections$EclipseCollections",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections$VavrCollections",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.ProxyUtils$ProxyDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "resolveArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "org.springframework.web.method.support.ModelAndViewContainer",
          "org.springframework.web.context.request.NativeWebRequest",
          "org.springframework.web.bind.support.WebDataBinderFactory"
        ]
      },
      {
        "name": "supportsParameter",
        "parameterTypes": [
          "org.springframework.core.MethodParameter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolverSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "isFallbackPageable",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "setFallbackPageable",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "setMaxPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setOneIndexedParameters",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPageParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSizeParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.SortHandlerMethodArgumentResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "resolveArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "org.springframework.web.method.support.ModelAndViewContainer",
          "org.springframework.web.context.request.NativeWebRequest",
          "org.springframework.web.bind.support.WebDataBinderFactory"
        ]
      },
      {
        "name": "supportsParameter",
        "parameterTypes": [
          "org.springframework.core.MethodParameter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.SortHandlerMethodArgumentResolverSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getPropertyDelimiter",
        "parameterTypes": []
      },
      {
        "name": "setFallbackSort",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "setPropertyDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSortParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "projectingArgumentResolverBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration",
    "allDeclaredConstructors": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonGeoModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonGeoModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonModules",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataWebConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectFactory"
        ]
      },
      {
        "name": "addArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addFormatters",
        "parameterTypes": [
          "org.springframework.format.FormatterRegistry"
        ]
      },
      {
        "name": "extendMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "pageableResolver",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "sortResolver",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.format.support.DefaultFormattingConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.format.support.FormattingConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addFormatter",
        "parameterTypes": [
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldAnnotation",
        "parameterTypes": [
          "org.springframework.format.AnnotationFormatterFactory"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Printer",
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addParser",
        "parameterTypes": [
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addPrinter",
        "parameterTypes": [
          "org.springframework.format.Printer"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.client.support.HttpAccessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getClientHttpRequestInitializers",
        "parameterTypes": []
      },
      {
        "name": "setClientHttpRequestInitializers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.client.support.InterceptingHttpAccessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getInterceptors",
        "parameterTypes": []
      },
      {
        "name": "getRequestFactory",
        "parameterTypes": []
      },
      {
        "name": "setInterceptors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRequestFactory",
        "parameterTypes": [
          "org.springframework.http.client.ClientHttpRequestFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.codec.support.DefaultClientCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.http.codec.support.DefaultServerCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.http.converter.AbstractGenericHttpMessageConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Type",
          "org.springframework.http.MediaType",
          "org.springframework.http.HttpOutputMessage"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.AbstractHttpMessageConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addDefaultHeaders",
        "parameterTypes": [
          "org.springframework.http.HttpHeaders",
          "java.lang.Object",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getContentLength",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getDefaultCharset",
        "parameterTypes": []
      },
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": []
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.HttpInputMessage"
        ]
      },
      {
        "name": "setDefaultCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setSupportedMediaTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.MediaType",
          "org.springframework.http.HttpOutputMessage"
        ]
      },
      {
        "name": "writeInternal",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.HttpOutputMessage"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.StringHttpMessageConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getObjectMapper",
        "parameterTypes": []
      },
      {
        "name": "getObjectMappersForType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.HttpInputMessage"
        ]
      },
      {
        "name": "registerObjectMappersForType",
        "parameterTypes": [
          "java.lang.Class",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "setObjectMapper",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      },
      {
        "name": "setPrettyPrint",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSupportedMediaTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.JdbcTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection",
          "int",
          "org.springframework.jdbc.core.ParameterizedPreparedStatementSetter"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.List"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.List",
          "int[]"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.BatchPreparedStatementSetter"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "call",
        "parameterTypes": [
          "org.springframework.jdbc.core.CallableStatementCreator",
          "java.util.List"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.CallableStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.CallableStatementCreator",
          "org.springframework.jdbc.core.CallableStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.ConnectionCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.StatementCallback"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map[]"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource[]"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "getJdbcOperations",
        "parameterTypes": []
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.support.KeyHolder",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.datasource.SimpleDriverDataSource",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.jdbc.support.JdbcAccessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "isLazyInit",
        "parameterTypes": []
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDatabaseProductName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionTranslator",
        "parameterTypes": [
          "org.springframework.jdbc.support.SQLExceptionTranslator"
        ]
      },
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.converter.CompositeMessageConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "fromMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message",
          "java.lang.Class"
        ]
      },
      {
        "name": "fromMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message",
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "toMessage",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.MessageHeaders"
        ]
      },
      {
        "name": "toMessage",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.MessageHeaders",
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.core.AbstractMessageSendingTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.util.Map",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "doSend",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "getDefaultDestination",
        "parameterTypes": []
      },
      {
        "name": "getMessageConverter",
        "parameterTypes": []
      },
      {
        "name": "send",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "setDefaultDestination",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMessageConverter",
        "parameterTypes": [
          "org.springframework.messaging.converter.MessageConverter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "getArgumentResolvers",
        "parameterTypes": []
      },
      {
        "name": "getCustomArgumentResolvers",
        "parameterTypes": []
      },
      {
        "name": "getCustomReturnValueHandlers",
        "parameterTypes": []
      },
      {
        "name": "getDestinationPrefixes",
        "parameterTypes": []
      },
      {
        "name": "getDirectLookupDestinations",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getHandlerMethods",
        "parameterTypes": []
      },
      {
        "name": "getMatchingMapping",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "getReturnValueHandlers",
        "parameterTypes": []
      },
      {
        "name": "handleMatch",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.handler.HandlerMethod",
          "java.lang.String",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "handleMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCustomArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCustomReturnValueHandlers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setReturnValueHandlers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.simp.SimpMessagingTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "convertAndSendToUser",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSendToUser",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "convertAndSendToUser",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertAndSendToUser",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getConversionService",
        "parameterTypes": []
      },
      {
        "name": "getHeaderInitializer",
        "parameterTypes": []
      },
      {
        "name": "getMessageConverter",
        "parameterTypes": []
      },
      {
        "name": "getPathMatcher",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "setConversionService",
        "parameterTypes": [
          "org.springframework.core.convert.ConversionService"
        ]
      },
      {
        "name": "setDestinationPrefixes",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      },
      {
        "name": "setHeaderInitializer",
        "parameterTypes": [
          "org.springframework.messaging.support.MessageHeaderInitializer"
        ]
      },
      {
        "name": "setMessageConverter",
        "parameterTypes": [
          "org.springframework.messaging.converter.MessageConverter"
        ]
      },
      {
        "name": "setPathMatcher",
        "parameterTypes": [
          "org.springframework.util.PathMatcher"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getApplicationEventPublisher",
        "parameterTypes": []
      },
      {
        "name": "getBrokerChannel",
        "parameterTypes": []
      },
      {
        "name": "getClientInboundChannel",
        "parameterTypes": []
      },
      {
        "name": "getClientOutboundChannel",
        "parameterTypes": []
      },
      {
        "name": "getDestinationPrefixes",
        "parameterTypes": []
      },
      {
        "name": "handleMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "isAutoStartup",
        "parameterTypes": []
      },
      {
        "name": "isBrokerAvailable",
        "parameterTypes": []
      },
      {
        "name": "isPreservePublishOrder",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setAutoStartup",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPreservePublishOrder",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUserDestinationPredicate",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "brokerChannel",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.core.task.TaskExecutor"
        ]
      },
      {
        "name": "brokerChannelExecutor",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "brokerMessageConverter",
        "parameterTypes": []
      },
      {
        "name": "brokerMessagingTemplate",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.converter.CompositeMessageConverter"
        ]
      },
      {
        "name": "clientInboundChannel",
        "parameterTypes": [
          "org.springframework.core.task.TaskExecutor"
        ]
      },
      {
        "name": "clientInboundChannelExecutor",
        "parameterTypes": []
      },
      {
        "name": "clientOutboundChannel",
        "parameterTypes": [
          "org.springframework.core.task.TaskExecutor"
        ]
      },
      {
        "name": "clientOutboundChannelExecutor",
        "parameterTypes": []
      },
      {
        "name": "getApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "getPathMatcher",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "messageBrokerTaskScheduler",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "simpAnnotationMethodMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.SimpMessagingTemplate",
          "org.springframework.messaging.converter.CompositeMessageConverter"
        ]
      },
      {
        "name": "simpleBrokerMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.user.UserDestinationResolver"
        ]
      },
      {
        "name": "stompBrokerRelayMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.user.UserDestinationMessageHandler",
          "org.springframework.messaging.MessageHandler",
          "org.springframework.messaging.simp.user.UserDestinationResolver"
        ]
      },
      {
        "name": "userDestinationMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.user.UserDestinationResolver"
        ]
      },
      {
        "name": "userDestinationResolver",
        "parameterTypes": [
          "org.springframework.messaging.simp.user.SimpUserRegistry",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "userRegistry",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "userRegistryMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.user.SimpUserRegistry",
          "org.springframework.messaging.simp.SimpMessagingTemplate",
          "org.springframework.scheduling.TaskScheduler"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.simp.user.DefaultUserDestinationResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "resolveDestination",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.simp.user.UserDestinationMessageHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "handleMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.support.AbstractMessageChannel",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getBeanName",
        "parameterTypes": []
      },
      {
        "name": "getInterceptors",
        "parameterTypes": []
      },
      {
        "name": "getLogger",
        "parameterTypes": []
      },
      {
        "name": "removeInterceptor",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeInterceptor",
        "parameterTypes": [
          "org.springframework.messaging.support.ChannelInterceptor"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "org.springframework.messaging.Message",
          "long"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogger",
        "parameterTypes": [
          "org.apache.commons.logging.Log"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.support.AbstractSubscribableChannel",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getSubscribers",
        "parameterTypes": []
      },
      {
        "name": "hasSubscription",
        "parameterTypes": [
          "org.springframework.messaging.MessageHandler"
        ]
      },
      {
        "name": "subscribe",
        "parameterTypes": [
          "org.springframework.messaging.MessageHandler"
        ]
      },
      {
        "name": "unsubscribe",
        "parameterTypes": [
          "org.springframework.messaging.MessageHandler"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.support.ExecutorSubscribableChannel",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addInterceptor",
        "parameterTypes": [
          "int",
          "org.springframework.messaging.support.ChannelInterceptor"
        ]
      },
      {
        "name": "addInterceptor",
        "parameterTypes": [
          "org.springframework.messaging.support.ChannelInterceptor"
        ]
      },
      {
        "name": "setInterceptors",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.AbstractEntityManagerFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createNativeEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getBeanClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getBootstrapExecutor",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerInterface",
        "parameterTypes": []
      },
      {
        "name": "getJpaDialect",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": []
      },
      {
        "name": "getJpaVendorAdapter",
        "parameterTypes": []
      },
      {
        "name": "getNativeEntityManagerFactory",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceProvider",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBootstrapExecutor",
        "parameterTypes": [
          "org.springframework.core.task.AsyncTaskExecutor"
        ]
      },
      {
        "name": "setEntityManagerFactoryInterface",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setEntityManagerInitializer",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "setEntityManagerInterface",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setJpaDialect",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaDialect"
        ]
      },
      {
        "name": "setJpaProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setJpaPropertyMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setJpaVendorAdapter",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter"
        ]
      },
      {
        "name": "setPersistenceProvider",
        "parameterTypes": [
          "jakarta.persistence.spi.PersistenceProvider"
        ]
      },
      {
        "name": "setPersistenceProviderClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "translateExceptionIfPossible",
        "parameterTypes": [
          "java.lang.RuntimeException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.JpaTransactionManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getResourceFactory",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitInfo",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitName",
        "parameterTypes": []
      },
      {
        "name": "setLoadTimeWeaver",
        "parameterTypes": [
          "org.springframework.instrument.classloading.LoadTimeWeaver"
        ]
      },
      {
        "name": "setPersistenceUnitName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.SimplePersistenceManagedTypes",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getManagedClassNames",
        "parameterTypes": []
      },
      {
        "name": "getManagedPackages",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitRootUrl",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "postProcessEntityManagerFactory",
        "parameterTypes": [
          "jakarta.persistence.EntityManagerFactory"
        ]
      },
      {
        "name": "setDatabase",
        "parameterTypes": [
          "org.springframework.orm.jpa.vendor.Database"
        ]
      },
      {
        "name": "setDatabasePlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGenerateDdl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowSql",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getEntityManagerFactoryInterface",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerInterface",
        "parameterTypes": []
      },
      {
        "name": "getJpaDialect",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": [
          "jakarta.persistence.spi.PersistenceUnitInfo"
        ]
      },
      {
        "name": "getPersistenceProvider",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceProviderRootPackage",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.oxm.jaxb.Jaxb2Marshaller",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "marshal",
        "parameterTypes": [
          "java.lang.Object",
          "javax.xml.transform.Result"
        ]
      },
      {
        "name": "marshal",
        "parameterTypes": [
          "java.lang.Object",
          "javax.xml.transform.Result",
          "org.springframework.oxm.mime.MimeContainer"
        ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.reflect.Type"
        ]
      },
      {
        "name": "unmarshal",
        "parameterTypes": [
          "javax.xml.transform.Source"
        ]
      },
      {
        "name": "unmarshal",
        "parameterTypes": [
          "javax.xml.transform.Source",
          "org.springframework.oxm.mime.MimeContainer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.annotation.AbstractAsyncConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.annotation.ProxyAsyncConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "asyncAdvisor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "requiresDestruction",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.CustomizableThreadFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "newThread",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "initialize",
        "parameterTypes": []
      },
      {
        "name": "setAwaitTerminationMillis",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setAwaitTerminationSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRejectedExecutionHandler",
        "parameterTypes": [
          "java.util.concurrent.RejectedExecutionHandler"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWaitForTasksToCompleteOnShutdown",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "getClock",
        "parameterTypes": []
      },
      {
        "name": "schedule",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Instant"
        ]
      },
      {
        "name": "schedule",
        "parameterTypes": [
          "java.lang.Runnable",
          "org.springframework.scheduling.Trigger"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Duration"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Instant",
          "java.time.Duration"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Duration"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Instant",
          "java.time.Duration"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.access.expression.AbstractSecurityExpressionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createEvaluationContext",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "java.lang.Object"
        ]
      },
      {
        "name": "createEvaluationContextInternal",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "java.lang.Object"
        ]
      },
      {
        "name": "createSecurityExpressionRoot",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "java.lang.Object"
        ]
      },
      {
        "name": "getExpressionParser",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setExpressionParser",
        "parameterTypes": [
          "org.springframework.expression.ExpressionParser"
        ]
      },
      {
        "name": "setPermissionEvaluator",
        "parameterTypes": [
          "org.springframework.security.access.PermissionEvaluator"
        ]
      },
      {
        "name": "setRoleHierarchy",
        "parameterTypes": [
          "org.springframework.security.access.hierarchicalroles.RoleHierarchy"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createEvaluationContext",
        "parameterTypes": [
          "java.util.function.Supplier",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.method.MethodSecurityExpressionRoot",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.intercept.AbstractSecurityInterceptor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getAccessDecisionManager",
        "parameterTypes": []
      },
      {
        "name": "getAfterInvocationManager",
        "parameterTypes": []
      },
      {
        "name": "getAuthenticationManager",
        "parameterTypes": []
      },
      {
        "name": "getRunAsManager",
        "parameterTypes": []
      },
      {
        "name": "isAlwaysReauthenticate",
        "parameterTypes": []
      },
      {
        "name": "isRejectPublicInvocations",
        "parameterTypes": []
      },
      {
        "name": "isValidateConfigAttributes",
        "parameterTypes": []
      },
      {
        "name": "setAccessDecisionManager",
        "parameterTypes": [
          "org.springframework.security.access.AccessDecisionManager"
        ]
      },
      {
        "name": "setAfterInvocationManager",
        "parameterTypes": [
          "org.springframework.security.access.intercept.AfterInvocationManager"
        ]
      },
      {
        "name": "setAlwaysReauthenticate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setAuthenticationManager",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationManager"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "setPublishAuthorizationSuccess",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRejectPublicInvocations",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRunAsManager",
        "parameterTypes": [
          "org.springframework.security.access.intercept.RunAsManager"
        ]
      },
      {
        "name": "setSecurityContextHolderStrategy",
        "parameterTypes": [
          "org.springframework.security.core.context.SecurityContextHolderStrategy"
        ]
      },
      {
        "name": "setValidateConfigAttributes",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getSecureObjectClass",
        "parameterTypes": []
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "org.aopalliance.intercept.MethodInvocation"
        ]
      },
      {
        "name": "obtainSecurityMetadataSource",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.security.access.method.MethodSecurityMetadataSource",
          "java.lang.String"
        ]
      },
      {
        "name": "getAdvice",
        "parameterTypes": []
      },
      {
        "name": "getPointcut",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.access.method.AbstractMethodSecurityMetadataSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAttributes",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AbstractAuthenticationToken",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AccountExpiredException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.AnonymousAuthenticationProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "authenticate",
        "parameterTypes": [
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationServiceException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.BadCredentialsException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.CredentialsExpiredException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "publishAuthenticationFailure",
        "parameterTypes": [
          "org.springframework.security.core.AuthenticationException",
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "publishAuthenticationSuccess",
        "parameterTypes": [
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.DisabledException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.LockedException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.ProviderManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "authenticate",
        "parameterTypes": [
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.ProviderNotFoundException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "authenticate",
        "parameterTypes": [
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "getUserCache",
        "parameterTypes": []
      },
      {
        "name": "isForcePrincipalAsString",
        "parameterTypes": []
      },
      {
        "name": "isHideUserNotFoundExceptions",
        "parameterTypes": []
      },
      {
        "name": "setAuthoritiesMapper",
        "parameterTypes": [
          "org.springframework.security.core.authority.mapping.GrantedAuthoritiesMapper"
        ]
      },
      {
        "name": "setForcePrincipalAsString",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHideUserNotFoundExceptions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "setPostAuthenticationChecks",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetailsChecker"
        ]
      },
      {
        "name": "setPreAuthenticationChecks",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetailsChecker"
        ]
      },
      {
        "name": "setUserCache",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserCache"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.dao.DaoAuthenticationProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureLockedEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityConfigurer"
        ]
      },
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityConfigurerAdapter"
        ]
      },
      {
        "name": "getConfigurer",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getConfigurers",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getOrBuild",
        "parameterTypes": []
      },
      {
        "name": "getSharedObject",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getSharedObjects",
        "parameterTypes": []
      },
      {
        "name": "objectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor"
        ]
      },
      {
        "name": "removeConfigurer",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "removeConfigurers",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setSharedObject",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.AbstractSecurityBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "build",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "authenticationEventPublisher",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationEventPublisher"
        ]
      },
      {
        "name": "authenticationProvider",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationProvider"
        ]
      },
      {
        "name": "eraseCredentials",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultUserDetailsService",
        "parameterTypes": []
      },
      {
        "name": "isConfigured",
        "parameterTypes": []
      },
      {
        "name": "ldapAuthentication",
        "parameterTypes": []
      },
      {
        "name": "parentAuthenticationManager",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "authenticationManagerBuilder",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor",
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "enableGlobalAuthenticationAutowiredConfigurer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "initializeAuthenticationProviderBeanManagerConfigurer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "initializeUserDetailsBeanManagerConfigurer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setGlobalAuthenticationConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setObjectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$DefaultPasswordEncoderAuthenticationManagerBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "inMemoryAuthentication",
        "parameterTypes": []
      },
      {
        "name": "jdbcAuthentication",
        "parameterTypes": []
      },
      {
        "name": "userDetailsService",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetailsService"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "configure",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
        ]
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "postProcess",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "objectPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.config.AutowireCapableBeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "methodSecurityInterceptor",
        "parameterTypes": [
          "org.springframework.security.access.method.MethodSecurityMetadataSource"
        ]
      },
      {
        "name": "preInvocationAuthorizationAdvice",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      },
      {
        "name": "setMethodSecurityExpressionHandler",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setObjectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$SpringCGLIB$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.builders.HttpSecurity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addFilter",
        "parameterTypes": [
          "jakarta.servlet.Filter"
        ]
      },
      {
        "name": "addFilterAfter",
        "parameterTypes": [
          "jakarta.servlet.Filter",
          "java.lang.Class"
        ]
      },
      {
        "name": "addFilterBefore",
        "parameterTypes": [
          "jakarta.servlet.Filter",
          "java.lang.Class"
        ]
      },
      {
        "name": "authenticationProvider",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationProvider"
        ]
      },
      {
        "name": "setSharedObject",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "userDetailsService",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetailsService"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.builders.WebSecurity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "httpSecurity",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setAuthenticationConfiguration",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"
        ]
      },
      {
        "name": "setContentNegotiationStrategy",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationStrategy"
        ]
      },
      {
        "name": "setObjectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "addArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "requestDataValueProcessor",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      }
    ],
    "name": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "conversionServicePostProcessor",
        "parameterTypes": []
      },
      {
        "name": "delegatingApplicationListener",
        "parameterTypes": []
      },
      {
        "name": "privilegeEvaluator",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setFilterChainProxySecurityConfigurer",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
        ]
      },
      {
        "name": "setFilterChains",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      },
      {
        "name": "springSecurityFilterChain",
        "parameterTypes": []
      },
      {
        "name": "webSecurityExpressionHandler",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.context.DelegatingApplicationListener",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.core.context.SecurityContextImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.core.userdetails.UsernameNotFoundException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.web.DefaultSecurityFilterChain",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getFilters",
        "parameterTypes": []
      },
      {
        "name": "matches",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.web.FilterChainProxy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.web.access.AccessDeniedHandlerImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setErrorPage",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.access.ExceptionTranslationFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.access.RequestMatcherDelegatingWebInvocationPrivilegeEvaluator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isAllowed",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "isAllowed",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.access.intercept.AuthorizationFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.access.intercept.RequestMatcherDelegatingAuthorizationManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "check",
        "parameterTypes": [
          "java.util.function.Supplier",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.authentication.AnonymousAuthenticationFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setSecurityContextHolderStrategy",
        "parameterTypes": [
          "org.springframework.security.core.context.SecurityContextHolderStrategy"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.authentication.logout.LogoutFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.authentication.logout.LogoutSuccessEventPublishingLogoutHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "logout",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.authentication.session.AbstractSessionFixationProtectionStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onAuthentication",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "setAlwaysCreateSession",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "onAuthentication",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.web.context.SecurityContextHolderFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.firewall.DefaultHttpFirewall",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getFirewalledRequest",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "getFirewalledResponse",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletResponse"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.header.HeaderWriterFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.savedrequest.RequestCacheAwareFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getExtraHiddenFields",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "processAction",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "processFormFieldValue",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "processUrl",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.TransactionDefinition",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.transaction.TransactionDefinition",
    "allPublicFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      },
      {
        "name": "transactionalEventListenerFactory",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isCandidateClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.Isolation",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.transaction.annotation.Propagation",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "transactionAdvisor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource",
          "org.springframework.transaction.interceptor.TransactionInterceptor"
        ]
      },
      {
        "name": "transactionAttributeSource",
        "parameterTypes": []
      },
      {
        "name": "transactionInterceptor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getTransactionAttribute",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Class"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getPointcut",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAspectSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "currentTransactionStatus",
        "parameterTypes": []
      },
      {
        "name": "getTransactionAttributeSource",
        "parameterTypes": []
      },
      {
        "name": "getTransactionManager",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setTransactionAttributeSource",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      },
      {
        "name": "setTransactionAttributeSources",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource[]"
        ]
      },
      {
        "name": "setTransactionAttributes",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "org.springframework.transaction.TransactionManager"
        ]
      },
      {
        "name": "setTransactionManagerBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionInterceptor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "org.aopalliance.intercept.MethodInvocation"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.support.DefaultTransactionDefinition",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getIsolationLevel",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPropagationBehavior",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "setIsolationLevel",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIsolationLevelName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPropagationBehavior",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPropagationBehaviorName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.support.TransactionTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.transaction.support.TransactionCallback"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.util.AntPathMatcher",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "combine",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "extractPathWithinPattern",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "extractUriTemplateVariables",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getPatternComparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "match",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "matchStart",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.util.CustomizableThreadCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createThread",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "getThreadGroup",
        "parameterTypes": []
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": []
      },
      {
        "name": "getThreadPriority",
        "parameterTypes": []
      },
      {
        "name": "isDaemon",
        "parameterTypes": []
      },
      {
        "name": "setDaemon",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setThreadGroup",
        "parameterTypes": [
          "java.lang.ThreadGroup"
        ]
      },
      {
        "name": "setThreadGroupName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadPriority",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getClockProvider",
        "parameterTypes": []
      },
      {
        "name": "getConstraintValidatorFactory",
        "parameterTypes": []
      },
      {
        "name": "getMessageInterpolator",
        "parameterTypes": []
      },
      {
        "name": "getParameterNameProvider",
        "parameterTypes": []
      },
      {
        "name": "getTraversableResolver",
        "parameterTypes": []
      },
      {
        "name": "getValidationPropertyMap",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setConfigurationInitializer",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "setConstraintValidatorFactory",
        "parameterTypes": [
          "jakarta.validation.ConstraintValidatorFactory"
        ]
      },
      {
        "name": "setMappingLocations",
        "parameterTypes": [
          "org.springframework.core.io.Resource[]"
        ]
      },
      {
        "name": "setMessageInterpolator",
        "parameterTypes": [
          "jakarta.validation.MessageInterpolator"
        ]
      },
      {
        "name": "setParameterNameDiscoverer",
        "parameterTypes": [
          "org.springframework.core.ParameterNameDiscoverer"
        ]
      },
      {
        "name": "setProviderClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setTraversableResolver",
        "parameterTypes": [
          "jakarta.validation.TraversableResolver"
        ]
      },
      {
        "name": "setValidationMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "setValidationProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setValidationPropertyMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setValidationProviderResolver",
        "parameterTypes": [
          "jakarta.validation.ValidationProviderResolver"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "usingContext",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setValidatedAnnotationType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "jakarta.validation.Validator"
        ]
      },
      {
        "name": "setValidatorFactory",
        "parameterTypes": [
          "jakarta.validation.ValidatorFactory"
        ]
      },
      {
        "name": "setValidatorProvider",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.validation.beanvalidation.SpringValidatorAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "forExecutables",
        "parameterTypes": []
      },
      {
        "name": "getConstraintsForClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "validateProperty",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getAllFileExtensions",
        "parameterTypes": []
      },
      {
        "name": "resolveFileExtensions",
        "parameterTypes": [
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "resolveMediaTypes",
        "parameterTypes": [
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.client.RestTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "org.springframework.core.ParameterizedTypeReference",
          "java.util.Map"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "org.springframework.core.ParameterizedTypeReference",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.net.URI",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "java.lang.Class"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.net.URI",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "org.springframework.http.RequestEntity",
          "java.lang.Class"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "org.springframework.http.RequestEntity",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.web.client.RequestCallback",
          "org.springframework.web.client.ResponseExtractor",
          "java.util.Map"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.web.client.RequestCallback",
          "org.springframework.web.client.ResponseExtractor",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.net.URI",
          "org.springframework.http.HttpMethod",
          "org.springframework.web.client.RequestCallback",
          "org.springframework.web.client.ResponseExtractor"
        ]
      },
      {
        "name": "getForEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "getForEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "getForEntity",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Class"
        ]
      },
      {
        "name": "getForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "getForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "getForObject",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Class"
        ]
      },
      {
        "name": "headForHeaders",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "headForHeaders",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "headForHeaders",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "optionsForAllow",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "optionsForAllow",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "optionsForAllow",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "patchForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "patchForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "patchForObject",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "postForEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "postForEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "postForEntity",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "postForLocation",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "postForLocation",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "postForLocation",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object"
        ]
      },
      {
        "name": "postForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "postForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "postForObject",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.context.support.WebApplicationObjectSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.CharacterEncodingFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "isForceRequestEncoding",
        "parameterTypes": []
      },
      {
        "name": "isForceResponseEncoding",
        "parameterTypes": []
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForceEncoding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceRequestEncoding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceResponseEncoding",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.GenericFilterBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getEnvironment",
        "parameterTypes": []
      },
      {
        "name": "getFilterConfig",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": [
          "jakarta.servlet.FilterConfig"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.OncePerRequestFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.method.support.CompositeUriComponentsContributor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "contributeMethodArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "java.lang.Object",
          "org.springframework.web.util.UriComponentsBuilder",
          "java.util.Map",
          "org.springframework.core.convert.ConversionService"
        ]
      },
      {
        "name": "supportsParameter",
        "parameterTypes": [
          "org.springframework.core.MethodParameter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.multipart.support.StandardServletMultipartResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "cleanupMultipart",
        "parameterTypes": [
          "org.springframework.web.multipart.MultipartHttpServletRequest"
        ]
      },
      {
        "name": "isMultipart",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "resolveMultipart",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.DispatcherServlet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.FrameworkServlet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getContextAttribute",
        "parameterTypes": []
      },
      {
        "name": "getContextClass",
        "parameterTypes": []
      },
      {
        "name": "getContextConfigLocation",
        "parameterTypes": []
      },
      {
        "name": "getContextId",
        "parameterTypes": []
      },
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "getServletContextAttributeName",
        "parameterTypes": []
      },
      {
        "name": "getWebApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "isEnableLoggingRequestDetails",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.event.ContextRefreshedEvent"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setContextAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setContextConfigLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextInitializerClasses",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextInitializers",
        "parameterTypes": [
          "org.springframework.context.ApplicationContextInitializer[]"
        ]
      },
      {
        "name": "setDispatchOptionsRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDispatchTraceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableLoggingRequestDetails",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublishContext",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPublishEvents",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setThreadContextInheritable",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.HttpServletBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getEnvironment",
        "parameterTypes": []
      },
      {
        "name": "getServletName",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "beanNameHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "defaultServletHandlerMapping",
        "parameterTypes": []
      },
      {
        "name": "flashMapManager",
        "parameterTypes": []
      },
      {
        "name": "getApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "getServletContext",
        "parameterTypes": []
      },
      {
        "name": "handlerExceptionResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": []
      },
      {
        "name": "httpRequestHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "localeResolver",
        "parameterTypes": []
      },
      {
        "name": "mvcContentNegotiationManager",
        "parameterTypes": []
      },
      {
        "name": "mvcConversionService",
        "parameterTypes": []
      },
      {
        "name": "mvcHandlerMappingIntrospector",
        "parameterTypes": []
      },
      {
        "name": "mvcPathMatcher",
        "parameterTypes": []
      },
      {
        "name": "mvcPatternParser",
        "parameterTypes": []
      },
      {
        "name": "mvcResourceUrlProvider",
        "parameterTypes": []
      },
      {
        "name": "mvcUriComponentsContributor",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
        ]
      },
      {
        "name": "mvcUrlPathHelper",
        "parameterTypes": []
      },
      {
        "name": "mvcValidator",
        "parameterTypes": []
      },
      {
        "name": "mvcViewResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      },
      {
        "name": "simpleControllerHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "themeResolver",
        "parameterTypes": []
      },
      {
        "name": "viewControllerHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "viewNameTranslator",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport$$SpringCGLIB$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.function.support.RouterFunctionMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "initApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "setDetectHandlersInAncestorContexts",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCorsConfigurationSource",
        "parameterTypes": []
      },
      {
        "name": "getCorsProcessor",
        "parameterTypes": []
      },
      {
        "name": "getDefaultHandler",
        "parameterTypes": []
      },
      {
        "name": "getHandler",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getPathMatcher",
        "parameterTypes": []
      },
      {
        "name": "getPatternParser",
        "parameterTypes": []
      },
      {
        "name": "getUrlPathHelper",
        "parameterTypes": []
      },
      {
        "name": "setAlwaysUseFullPath",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCorsConfigurationSource",
        "parameterTypes": [
          "org.springframework.web.cors.CorsConfigurationSource"
        ]
      },
      {
        "name": "setCorsConfigurations",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setCorsProcessor",
        "parameterTypes": [
          "org.springframework.web.cors.CorsProcessor"
        ]
      },
      {
        "name": "setDefaultHandler",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setInterceptors",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPathMatcher",
        "parameterTypes": [
          "org.springframework.util.PathMatcher"
        ]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      {
        "name": "setRemoveSemicolonContent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlDecode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlPathHelper",
        "parameterTypes": [
          "org.springframework.web.util.UrlPathHelper"
        ]
      },
      {
        "name": "usesPathPatterns",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDirectPaths",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getHandlerMethods",
        "parameterTypes": []
      },
      {
        "name": "getHandlerMethodsForMappingName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMappingPathPatterns",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getMatchingMapping",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "getNamingStrategy",
        "parameterTypes": []
      },
      {
        "name": "handleMatch",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "setDetectHandlerMethodsInAncestorContexts",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHandlerMethodMappingNamingStrategy",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"
        ]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      {
        "name": "unregisterMapping",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getHandlerMap",
        "parameterTypes": []
      },
      {
        "name": "getPathPatternHandlerMap",
        "parameterTypes": []
      },
      {
        "name": "getRootHandler",
        "parameterTypes": []
      },
      {
        "name": "match",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      },
      {
        "name": "setLazyInitHandlers",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      {
        "name": "setRootHandler",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setUseTrailingSlashMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "useTrailingSlashMatch",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerExceptionResolverComposite",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "resolveException",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "java.lang.Exception"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getUrlMap",
        "parameterTypes": []
      },
      {
        "name": "initApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "setMappings",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setUrlMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.i18n.AbstractLocaleResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setDefaultLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "resolveLocale",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.util.Locale"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getBuilderConfiguration",
        "parameterTypes": []
      },
      {
        "name": "getContentNegotiationManager",
        "parameterTypes": []
      },
      {
        "name": "getFileExtensions",
        "parameterTypes": []
      },
      {
        "name": "getPathPrefixes",
        "parameterTypes": []
      },
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "match",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "org.springframework.web.servlet.mvc.method.RequestMappingInfo",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "setContentNegotiationManager",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      },
      {
        "name": "setPathPrefixes",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      {
        "name": "setUseRegisteredSuffixPatternMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseSuffixPatternMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseTrailingSlashMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "useRegisteredSuffixPatternMatch",
        "parameterTypes": []
      },
      {
        "name": "useSuffixPatternMatch",
        "parameterTypes": []
      },
      {
        "name": "useTrailingSlashMatch",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.resource.ResourceUrlProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.support.AbstractFlashMapManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getFlashMapTimeout",
        "parameterTypes": []
      },
      {
        "name": "getUrlPathHelper",
        "parameterTypes": []
      },
      {
        "name": "retrieveAndUpdate",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "saveOutputFlashMap",
        "parameterTypes": [
          "org.springframework.web.servlet.FlashMap",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "setFlashMapTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUrlPathHelper",
        "parameterTypes": [
          "org.springframework.web.util.UrlPathHelper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.support.SessionFlashMapManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.support.WebContentGenerator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCacheControl",
        "parameterTypes": []
      },
      {
        "name": "getCacheSeconds",
        "parameterTypes": []
      },
      {
        "name": "getSupportedMethods",
        "parameterTypes": []
      },
      {
        "name": "getVaryByRequestHeaders",
        "parameterTypes": []
      },
      {
        "name": "isAlwaysMustRevalidate",
        "parameterTypes": []
      },
      {
        "name": "isRequireSession",
        "parameterTypes": []
      },
      {
        "name": "isUseCacheControlHeader",
        "parameterTypes": []
      },
      {
        "name": "isUseCacheControlNoStore",
        "parameterTypes": []
      },
      {
        "name": "isUseExpiresHeader",
        "parameterTypes": []
      },
      {
        "name": "setAlwaysMustRevalidate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCacheControl",
        "parameterTypes": [
          "org.springframework.http.CacheControl"
        ]
      },
      {
        "name": "setCacheSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRequireSession",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSupportedMethods",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setUseCacheControlHeader",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseCacheControlNoStore",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseExpiresHeader",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVaryByRequestHeaders",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.theme.AbstractThemeResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDefaultThemeName",
        "parameterTypes": []
      },
      {
        "name": "setDefaultThemeName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.theme.FixedThemeResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "resolveThemeName",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "setThemeName",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.AbstractCachingViewResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "getCacheFilter",
        "parameterTypes": []
      },
      {
        "name": "getCacheLimit",
        "parameterTypes": []
      },
      {
        "name": "isCache",
        "parameterTypes": []
      },
      {
        "name": "isCacheUnresolved",
        "parameterTypes": []
      },
      {
        "name": "removeFromCache",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "resolveViewName",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCacheFilter",
        "parameterTypes": [
          "org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"
        ]
      },
      {
        "name": "setCacheLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setCacheUnresolved",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getViewName",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.ViewResolverComposite",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "resolveViewName",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.config.WebSocketMessageBrokerStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurationSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "stompWebSocketHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketHandler",
          "org.springframework.scheduling.TaskScheduler"
        ]
      },
      {
        "name": "subProtocolWebSocketHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "webSocketMessageBrokerStats",
        "parameterTypes": [
          "org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler",
          "org.springframework.web.socket.WebSocketHandler",
          "org.springframework.core.task.TaskExecutor",
          "org.springframework.core.task.TaskExecutor",
          "org.springframework.scheduling.TaskScheduler"
        ]
      },
      {
        "name": "webSocketScopeConfigurer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.messaging.DefaultSimpUserRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findSubscriptions",
        "parameterTypes": [
          "org.springframework.messaging.simp.user.SimpSubscriptionMatcher"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserCount",
        "parameterTypes": []
      },
      {
        "name": "getUsers",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "supportsEventType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "supportsSourceType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.messaging.SubProtocolWebSocketHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterConnectionClosed",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketSession",
          "org.springframework.web.socket.CloseStatus"
        ]
      },
      {
        "name": "afterConnectionEstablished",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketSession"
        ]
      },
      {
        "name": "getSubProtocols",
        "parameterTypes": []
      },
      {
        "name": "handleMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "handleMessage",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketSession",
          "org.springframework.web.socket.WebSocketMessage"
        ]
      },
      {
        "name": "handleTransportError",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketSession",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "supportsPartialMessages",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.server.standard.TomcatRequestUpgradeStrategy",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.socket.server.support.WebSocketHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.util.UrlPathHelper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.util.pattern.PathPatternParser",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.thymeleaf.TemplateEngine",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addDialect",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.dialect.IDialect"
        ]
      },
      {
        "name": "addDialect",
        "parameterTypes": [
          "org.thymeleaf.dialect.IDialect"
        ]
      },
      {
        "name": "addLinkBuilder",
        "parameterTypes": [
          "org.thymeleaf.linkbuilder.ILinkBuilder"
        ]
      },
      {
        "name": "addMessageResolver",
        "parameterTypes": [
          "org.thymeleaf.messageresolver.IMessageResolver"
        ]
      },
      {
        "name": "addTemplateResolver",
        "parameterTypes": [
          "org.thymeleaf.templateresolver.ITemplateResolver"
        ]
      },
      {
        "name": "clearDialects",
        "parameterTypes": []
      },
      {
        "name": "clearTemplateCache",
        "parameterTypes": []
      },
      {
        "name": "clearTemplateCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCacheManager",
        "parameterTypes": []
      },
      {
        "name": "getConfiguration",
        "parameterTypes": []
      },
      {
        "name": "getDecoupledTemplateLogicResolver",
        "parameterTypes": []
      },
      {
        "name": "getDialects",
        "parameterTypes": []
      },
      {
        "name": "getDialectsByPrefix",
        "parameterTypes": []
      },
      {
        "name": "getEngineContextFactory",
        "parameterTypes": []
      },
      {
        "name": "getLinkBuilders",
        "parameterTypes": []
      },
      {
        "name": "getMessageResolvers",
        "parameterTypes": []
      },
      {
        "name": "getTemplateResolvers",
        "parameterTypes": []
      },
      {
        "name": "isInitialized",
        "parameterTypes": []
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "org.thymeleaf.context.IContext",
          "java.io.Writer"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.context.IContext",
          "java.io.Writer"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "org.thymeleaf.TemplateSpec",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "org.thymeleaf.TemplateSpec",
          "org.thymeleaf.context.IContext",
          "java.io.Writer"
        ]
      },
      {
        "name": "processThrottled",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "processThrottled",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "processThrottled",
        "parameterTypes": [
          "org.thymeleaf.TemplateSpec",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "setAdditionalDialects",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCacheManager",
        "parameterTypes": [
          "org.thymeleaf.cache.ICacheManager"
        ]
      },
      {
        "name": "setDecoupledTemplateLogicResolver",
        "parameterTypes": [
          "org.thymeleaf.templateparser.markup.decoupled.IDecoupledTemplateLogicResolver"
        ]
      },
      {
        "name": "setDialect",
        "parameterTypes": [
          "org.thymeleaf.dialect.IDialect"
        ]
      },
      {
        "name": "setDialects",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDialectsByPrefix",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setEngineContextFactory",
        "parameterTypes": [
          "org.thymeleaf.context.IEngineContextFactory"
        ]
      },
      {
        "name": "setLinkBuilder",
        "parameterTypes": [
          "org.thymeleaf.linkbuilder.ILinkBuilder"
        ]
      },
      {
        "name": "setLinkBuilders",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setMessageResolver",
        "parameterTypes": [
          "org.thymeleaf.messageresolver.IMessageResolver"
        ]
      },
      {
        "name": "setMessageResolvers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTemplateResolver",
        "parameterTypes": [
          "org.thymeleaf.templateresolver.ITemplateResolver"
        ]
      },
      {
        "name": "setTemplateResolvers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "threadIndex",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.thymeleaf.spring6.SpringTemplateEngine",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "setTemplateEngineMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.spring6.templateresolver.SpringResourceTemplateResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.spring6.view.ThymeleafViewResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addTemplateAlias",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "clearTemplateAliases",
        "parameterTypes": []
      },
      {
        "name": "getCSSTemplateModePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getCSSTemplateModePatterns",
        "parameterTypes": []
      },
      {
        "name": "getCacheTTLMs",
        "parameterTypes": []
      },
      {
        "name": "getCacheablePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getCacheablePatterns",
        "parameterTypes": []
      },
      {
        "name": "getCharacterEncoding",
        "parameterTypes": []
      },
      {
        "name": "getForceSuffix",
        "parameterTypes": []
      },
      {
        "name": "getForceTemplateMode",
        "parameterTypes": []
      },
      {
        "name": "getHtmlTemplateModePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getHtmlTemplateModePatterns",
        "parameterTypes": []
      },
      {
        "name": "getJavaScriptTemplateModePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getJavaScriptTemplateModePatterns",
        "parameterTypes": []
      },
      {
        "name": "getNonCacheablePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getNonCacheablePatterns",
        "parameterTypes": []
      },
      {
        "name": "getPrefix",
        "parameterTypes": []
      },
      {
        "name": "getRawTemplateModePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getRawTemplateModePatterns",
        "parameterTypes": []
      },
      {
        "name": "getSuffix",
        "parameterTypes": []
      },
      {
        "name": "getTemplateAliases",
        "parameterTypes": []
      },
      {
        "name": "getTemplateMode",
        "parameterTypes": []
      },
      {
        "name": "getTextTemplateModePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getTextTemplateModePatterns",
        "parameterTypes": []
      },
      {
        "name": "getXmlTemplateModePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getXmlTemplateModePatterns",
        "parameterTypes": []
      },
      {
        "name": "isCacheable",
        "parameterTypes": []
      },
      {
        "name": "setCSSTemplateModePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCacheTTLMs",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setCacheable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCacheablePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCharacterEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForceSuffix",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceTemplateMode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHtmlTemplateModePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setJavaScriptTemplateModePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setNonCacheablePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRawTemplateModePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTemplateAliases",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setTemplateMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTemplateMode",
        "parameterTypes": [
          "org.thymeleaf.templatemode.TemplateMode"
        ]
      },
      {
        "name": "setTextTemplateModePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setXmlTemplateModePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.templateresolver.AbstractTemplateResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCheckExistence",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getResolvablePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getResolvablePatterns",
        "parameterTypes": []
      },
      {
        "name": "getUseDecoupledLogic",
        "parameterTypes": []
      },
      {
        "name": "resolveTemplate",
        "parameterTypes": [
          "org.thymeleaf.IEngineConfiguration",
          "java.lang.String",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "setCheckExistence",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setResolvablePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUseDecoupledLogic",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "[B"
  },
  {
    "name": "[C"
  },
  {
    "name": "[D"
  },
  {
    "name": "[F"
  },
  {
    "name": "[I"
  },
  {
    "name": "[J"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
  },
  {
    "name": "[Lcom.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry;"
  },
  {
    "name": "[Ljava.io.Serializable;"
  },
  {
    "name": "[Ljava.lang.CharSequence;"
  },
  {
    "name": "[Ljava.lang.Class;"
  },
  {
    "name": "[Ljava.lang.Comparable;"
  },
  {
    "name": "[Ljava.lang.Object;"
  },
  {
    "name": "[Ljava.lang.String;"
  },
  {
    "name": "[Ljava.lang.annotation.Annotation;"
  },
  {
    "name": "[Ljava.lang.constant.Constable;"
  },
  {
    "name": "[Ljava.lang.constant.ConstantDesc;"
  },
  {
    "name": "[Ljava.rmi.server.ObjID;"
  },
  {
    "name": "[Ljava.sql.Statement;"
  },
  {
    "name": "[Ljava.util.List;"
  },
  {
    "name": "[Ljava.util.function.Supplier;"
  },
  {
    "name": "[Ljavax.management.openmbean.CompositeData;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.AutoFlushEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.DeleteEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.DirtyCheckEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.EvictEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.FlushEntityEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.FlushEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.InitializeCollectionEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.LoadEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.LockEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.MergeEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PersistEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PostDeleteEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PostInsertEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PostLoadEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PostUpdateEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PreDeleteEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PreInsertEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PreLoadEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PreUpdateEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.RefreshEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.ReplicateEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.ResolveNaturalIdEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.SaveOrUpdateEventListener;"
  },
  {
    "name": "[Lorg.hibernate.query.hql.spi.DotIdentifierConsumer;"
  },
  {
    "name": "[Lorg.hibernate.query.hql.spi.SqmCreationProcessingState;"
  },
  {
    "name": "[Lorg.hibernate.query.sqm.spi.ParameterDeclarationContext;"
  },
  {
    "name": "[Lorg.hibernate.query.sqm.sql.FromClauseIndex;"
  },
  {
    "name": "[Lorg.hibernate.sql.ast.Clause;"
  },
  {
    "name": "[Lorg.hibernate.sql.ast.spi.SqlAstProcessingState;"
  },
  {
    "name": "[Lorg.hibernate.sql.ast.tree.Statement;"
  },
  {
    "name": "[Lorg.hibernate.sql.ast.tree.select.QueryPart;"
  },
  {
    "name": "[Lorg.hibernate.sql.results.jdbc.spi.JdbcValuesSourceProcessingState;"
  },
  {
    "name": "[Lorg.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure;"
  },
  {
    "name": "[Lorg.springframework.boot.context.config.ConfigDataLocation;"
  },
  {
    "name": "[Lorg.springframework.core.annotation.AnnotationAttributes;"
  },
  {
    "name": "[Lorg.springframework.core.annotation.TypeMappedAnnotation;"
  },
  {
    "name": "[Lorg.springframework.core.io.InputStreamSource;"
  },
  {
    "name": "[Lorg.springframework.core.io.Resource;",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "[Lorg.springframework.core.io.Resource;",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
  },
  {
    "name": "[Lorg.springframework.web.bind.annotation.RequestMethod;"
  },
  {
    "name": "[Lsun.security.pkcs.SignerInfo;"
  },
  {
    "name": "[S"
  },
  {
    "name": "[Z"
  },
  {
    "name": "boolean",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ],
    "name": "boolean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "brave.Tracer"
  },
  {
    "name": "byte[]"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "ch.qos.logback.classic.BasicConfigurator"
  },
  {
    "name": "ch.qos.logback.classic.LoggerContext"
  },
  {
    "name": "ch.qos.logback.classic.LoggerContext"
  },
  {
    "name": "ch.qos.logback.classic.filter.ThresholdFilter",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setLevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setLevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "ch.qos.logback.classic.filter.ThresholdFilter",
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "ch.qos.logback.classic.joran.SerializedModelConfigurator"
  },
  {
    "name": "ch.qos.logback.classic.pattern.DateConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "ch.qos.logback.classic.pattern.DateConverter"
  },
  {
    "name": "ch.qos.logback.classic.pattern.LevelConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "ch.qos.logback.classic.pattern.LevelConverter"
  },
  {
    "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter"
  },
  {
    "name": "ch.qos.logback.classic.pattern.LoggerConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "ch.qos.logback.classic.pattern.LoggerConverter"
  },
  {
    "name": "ch.qos.logback.classic.pattern.MarkerConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "ch.qos.logback.classic.pattern.MarkerConverter"
  },
  {
    "name": "ch.qos.logback.classic.pattern.MessageConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "ch.qos.logback.classic.pattern.MessageConverter"
  },
  {
    "name": "ch.qos.logback.classic.pattern.ThreadConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "ch.qos.logback.classic.pattern.ThreadConverter"
  },
  {
    "name": "ch.qos.logback.classic.spi.LogbackServiceProvider"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "ch.qos.logback.classic.util.DefaultJoranConfigurator"
  },
  {
    "name": "ch.qos.logback.core.ConsoleAppender",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "ch.qos.logback.core.ConsoleAppender",
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "ch.qos.logback.core.FileAppender"
  },
  {
    "name": "ch.qos.logback.core.OutputStreamAppender",
    "methods": [
      {
        "name": "setEncoder",
        "parameterTypes": [
          "ch.qos.logback.core.encoder.Encoder"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "setEncoder",
        "parameterTypes": [
          "ch.qos.logback.core.encoder.Encoder"
        ]
      }
    ],
    "name": "ch.qos.logback.core.OutputStreamAppender"
  },
  {
    "name": "ch.qos.logback.core.UnsynchronizedAppenderBase",
    "methods": [
      {
        "name": "addFilter",
        "parameterTypes": [
          "ch.qos.logback.core.filter.Filter"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "addFilter",
        "parameterTypes": [
          "ch.qos.logback.core.filter.Filter"
        ]
      }
    ],
    "name": "ch.qos.logback.core.UnsynchronizedAppenderBase"
  },
  {
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "ch.qos.logback.core.encoder.Encoder"
  },
  {
    "name": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
    "methods": [
      {
        "name": "setParent",
        "parameterTypes": [
          "ch.qos.logback.core.spi.ContextAware"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "setParent",
        "parameterTypes": [
          "ch.qos.logback.core.spi.ContextAware"
        ]
      }
    ],
    "name": "ch.qos.logback.core.encoder.LayoutWrappingEncoder"
  },
  {
    "methods": [
      {
        "name": "decide",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isStarted",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "ch.qos.logback.core.filter.Filter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
    "methods": [
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase"
  },
  {
    "name": "ch.qos.logback.core.pattern.ReplacingCompositeConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "ch.qos.logback.core.pattern.ReplacingCompositeConverter"
  },
  {
    "name": "ch.qos.logback.core.rolling.RollingFileAppender",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRollingPolicy",
        "parameterTypes": [
          "ch.qos.logback.core.rolling.RollingPolicy"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRollingPolicy",
        "parameterTypes": [
          "ch.qos.logback.core.rolling.RollingPolicy"
        ]
      }
    ],
    "name": "ch.qos.logback.core.rolling.RollingFileAppender",
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "ch.qos.logback.core.rolling.RollingPolicy"
  },
  {
    "name": "ch.qos.logback.core.rolling.RollingPolicyBase",
    "methods": [
      {
        "name": "setFileNamePattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "ch.qos.logback.core.FileAppender"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "setFileNamePattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "ch.qos.logback.core.FileAppender"
        ]
      }
    ],
    "name": "ch.qos.logback.core.rolling.RollingPolicyBase"
  },
  {
    "name": "ch.qos.logback.core.rolling.TimeBasedRollingPolicy",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMaxHistory",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMaxHistory",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "ch.qos.logback.core.rolling.TimeBasedRollingPolicy",
    "queryAllPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "ch.qos.logback.core.rolling.helper.DateTokenConverter"
  },
  {
    "name": "ch.qos.logback.core.spi.ContextAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "updateMarkersFilter",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "ch.qos.logback.core.spi.ContextAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "addError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addError",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "addInfo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addInfo",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "addStatus",
        "parameterTypes": [
          "ch.qos.logback.core.status.Status"
        ]
      },
      {
        "name": "addWarn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addWarn",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "getContext",
        "parameterTypes": []
      },
      {
        "name": "getStatusManager",
        "parameterTypes": []
      },
      {
        "name": "setContext",
        "parameterTypes": [
          "ch.qos.logback.core.Context"
        ]
      }
    ],
    "name": "ch.qos.logback.core.spi.ContextAwareBase",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "ch.qos.logback.core.spi.LifeCycle",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "updateMarkersFilter",
        "parameterTypes": []
      }
    ],
    "name": "ch.qos.logback.core.spi.LifeCycle",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "char",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Character"
        ]
      }
    ],
    "name": "char",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "co.elastic.clients.elasticsearch.ElasticsearchClient"
  },
  {
    "name": "co.elastic.clients.transport.ElasticsearchTransport"
  },
  {
    "name": "com.couchbase.client.java.Bucket"
  },
  {
    "name": "com.couchbase.client.java.Cluster"
  },
  {
    "name": "com.datastax.oss.driver.api.core.CqlSession"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JacksonAnnotation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonFormat",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonFormat$Shape"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonIgnore",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "com.fasterxml.jackson.annotation.JsonIgnore",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonIgnoreProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "com.fasterxml.jackson.annotation.JsonIgnoreProperties",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonInclude",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonInclude$Include"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonPropertyOrder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonSetter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.JsonGenerator"
  },
  {
    "methods": [
      {
        "name": "getJsonFactory",
        "parameterTypes": []
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      }
    ],
    "name": "com.fasterxml.jackson.core.ObjectCodec",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.TreeCodec",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.Versioned",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.DeserializationFeature",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.DeserializationFeatureEditor"
  },
  {
    "methods": [
      {
        "name": "getDependencies",
        "parameterTypes": []
      }
    ],
    "name": "com.fasterxml.jackson.databind.Module",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "createArrayNode",
        "parameterTypes": []
      },
      {
        "name": "createObjectNode",
        "parameterTypes": []
      },
      {
        "name": "getFactory",
        "parameterTypes": []
      },
      {
        "name": "missingNode",
        "parameterTypes": []
      },
      {
        "name": "nullNode",
        "parameterTypes": []
      },
      {
        "name": "readTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "treeAsTokens",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "treeToValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode",
          "java.lang.Class"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      },
      {
        "name": "writeTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "writeValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "java.lang.Object"
        ]
      }
    ],
    "name": "com.fasterxml.jackson.databind.ObjectMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.PropertyNamingStrategies",
    "fields": [
      {
        "name": "KEBAB_CASE"
      },
      {
        "name": "UPPER_CAMEL_CASE"
      },
      {
        "name": "LOWER_DOT_CASE"
      },
      {
        "name": "LOWER_CASE"
      },
      {
        "name": "SNAKE_CASE"
      },
      {
        "name": "LOWER_CAMEL_CASE"
      },
      {
        "name": "UPPER_SNAKE_CASE"
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.SerializationFeature",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.SerializationFeatureEditor"
  },
  {
    "name": "com.fasterxml.jackson.databind.annotation.JacksonStdImpl",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.annotation.JsonDeserialize",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.annotation.JsonSerialize",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.deser.NullValueProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl"
  },
  {
    "name": "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "addAbstractTypeMapping",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "addDeserializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonDeserializer"
        ]
      },
      {
        "name": "addKeyDeserializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.KeyDeserializer"
        ]
      },
      {
        "name": "addKeySerializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addSerializer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addSerializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addValueInstantiator",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.deser.ValueInstantiator"
        ]
      },
      {
        "name": "getModuleName",
        "parameterTypes": []
      },
      {
        "name": "getTypeId",
        "parameterTypes": []
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.jsontype.NamedType[]"
        ]
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "java.lang.Class[]"
        ]
      },
      {
        "name": "setAbstractTypes",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
        ]
      },
      {
        "name": "setDeserializerModifier",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
        ]
      },
      {
        "name": "setDeserializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleDeserializers"
        ]
      },
      {
        "name": "setKeyDeserializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
        ]
      },
      {
        "name": "setKeySerializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleSerializers"
        ]
      },
      {
        "name": "setMixInAnnotation",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "setSerializerModifier",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
        ]
      },
      {
        "name": "setSerializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleSerializers"
        ]
      },
      {
        "name": "setValueInstantiators",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
        ]
      },
      {
        "name": "setupModule",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.Module$SetupContext"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      }
    ],
    "name": "com.fasterxml.jackson.databind.module.SimpleModule",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.dataformat.cbor$CBORFactory"
  },
  {
    "name": "com.fasterxml.jackson.dataformat.cbor.CBORFactory"
  },
  {
    "name": "com.fasterxml.jackson.dataformat.smile$SmileFactory"
  },
  {
    "name": "com.fasterxml.jackson.dataformat.smile.SmileFactory"
  },
  {
    "name": "com.fasterxml.jackson.dataformat.xml$XmlMapper"
  },
  {
    "name": "com.fasterxml.jackson.dataformat.xml.XmlMapper"
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module"
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule"
  },
  {
    "name": "com.fasterxml.jackson.module.kotlin$KotlinModule"
  },
  {
    "name": "com.fasterxml.jackson.module.kotlin.KotlinModule"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setupModule",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.Module$SetupContext"
        ]
      }
    ],
    "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.gargoylesoftware.htmlunit.BrowserVersionFeatures",
    "fields": [
      {
        "name": "ANCHOR_EMPTY_HREF_NO_FILENAME"
      },
      {
        "name": "ANCHOR_SEND_PING_REQUEST"
      },
      {
        "name": "CONTENT_SECURITY_POLICY_IGNORED"
      },
      {
        "name": "CSS_BACKGROUND_INITIAL"
      },
      {
        "name": "CSS_BACKGROUND_RGBA"
      },
      {
        "name": "CSS_CSSTEXT_IE_STYLE"
      },
      {
        "name": "CSS_DIALOG_NONE"
      },
      {
        "name": "CSS_DISPLAY_BLOCK"
      },
      {
        "name": "CSS_DISPLAY_BLOCK2"
      },
      {
        "name": "CSS_LENGTH_INITIAL"
      },
      {
        "name": "CSS_NOSCRIPT_DISPLAY_INLINE"
      },
      {
        "name": "CSS_OUTLINE_WIDTH_UNIT_NOT_REQUIRED"
      },
      {
        "name": "CSS_PROGRESS_DISPLAY_INLINE"
      },
      {
        "name": "CSS_PSEUDO_SELECTOR_MS_PLACEHHOLDER"
      },
      {
        "name": "CSS_PSEUDO_SELECTOR_PLACEHOLDER_SHOWN"
      },
      {
        "name": "CSS_RP_DISPLAY_NONE"
      },
      {
        "name": "CSS_RT_DISPLAY_RUBY_TEXT_ALWAYS"
      },
      {
        "name": "CSS_RUBY_DISPLAY_INLINE"
      },
      {
        "name": "CSS_SET_NULL_THROWS"
      },
      {
        "name": "CSS_STYLE_PROP_DISCONNECTED_IS_EMPTY"
      },
      {
        "name": "CSS_STYLE_PROP_FONT_DISCONNECTED_IS_EMPTY"
      },
      {
        "name": "CSS_VERTICAL_ALIGN_SUPPORTS_AUTO"
      },
      {
        "name": "CSS_ZINDEX_TYPE_INTEGER"
      },
      {
        "name": "DIALOGWINDOW_REFERER"
      },
      {
        "name": "DOM_NORMALIZE_REMOVE_CHILDREN"
      },
      {
        "name": "EVENT_BEFORE_UNLOAD_RETURN_VALUE_IS_HTML5_LIKE"
      },
      {
        "name": "EVENT_FOCUS_FOCUS_IN_BLUR_OUT"
      },
      {
        "name": "EVENT_FOCUS_IN_FOCUS_OUT_BLUR"
      },
      {
        "name": "EVENT_FOCUS_ON_LOAD"
      },
      {
        "name": "EVENT_HANDLER_NULL_RETURN_IS_MEANINGFUL"
      },
      {
        "name": "EVENT_MOUSE_ON_DISABLED"
      },
      {
        "name": "EVENT_ONANIMATION_DOCUMENT_CREATE_NOT_SUPPORTED"
      },
      {
        "name": "EVENT_ONCHANGE_AFTER_ONCLICK"
      },
      {
        "name": "EVENT_ONCLICK_FOR_SELECT_ONLY"
      },
      {
        "name": "EVENT_ONCLICK_POINTEREVENT_DETAIL_0"
      },
      {
        "name": "EVENT_ONCLICK_USES_POINTEREVENT"
      },
      {
        "name": "EVENT_ONCLOSE_DOCUMENT_CREATE_NOT_SUPPORTED"
      },
      {
        "name": "EVENT_ONDOUBLECLICK_USES_POINTEREVENT"
      },
      {
        "name": "EVENT_ONLOAD_INTERNAL_JAVASCRIPT"
      },
      {
        "name": "EVENT_ONMESSAGE_DEFAULT_DATA_NULL"
      },
      {
        "name": "EVENT_ONMOUSEDOWN_FOR_SELECT_OPTION_TRIGGERS_ADDITIONAL_DOWN_FOR_SELECT"
      },
      {
        "name": "EVENT_ONMOUSEDOWN_NOT_FOR_SELECT_OPTION"
      },
      {
        "name": "EVENT_ONMOUSEOVER_FOR_DISABLED_OPTION"
      },
      {
        "name": "EVENT_ONMOUSEOVER_NEVER_FOR_SELECT_OPTION"
      },
      {
        "name": "EVENT_ONMOUSEUP_FOR_SELECT_OPTION_TRIGGERS_ADDITIONAL_UP_FOR_SELECT"
      },
      {
        "name": "EVENT_ONMOUSEUP_NOT_FOR_SELECT_OPTION"
      },
      {
        "name": "EVENT_ONPOPSTATE_DOCUMENT_CREATE_NOT_SUPPORTED"
      },
      {
        "name": "EVENT_TYPE_BEFOREUNLOADEVENT"
      },
      {
        "name": "EVENT_TYPE_HASHCHANGEEVENT"
      },
      {
        "name": "EVENT_TYPE_MOUSEWHEELEVENT"
      },
      {
        "name": "EVENT_TYPE_POINTEREVENT"
      },
      {
        "name": "EVENT_TYPE_PROGRESSEVENT"
      },
      {
        "name": "EVENT_TYPE_WHEELEVENT"
      },
      {
        "name": "FOCUS_BODY_ELEMENT_AT_START"
      },
      {
        "name": "FORMFIELD_REACHABLE_BY_NEW_NAMES"
      },
      {
        "name": "FORMFIELD_REACHABLE_BY_ORIGINAL_NAME"
      },
      {
        "name": "FORM_FORM_ATTRIBUTE_SUPPORTED"
      },
      {
        "name": "FORM_PARAMETRS_NOT_SUPPORTED_FOR_IMAGE"
      },
      {
        "name": "FORM_SUBMISSION_DOWNLOWDS_ALSO_IF_ONLY_HASH_CHANGED"
      },
      {
        "name": "FORM_SUBMISSION_FORM_ATTRIBUTE"
      },
      {
        "name": "FORM_SUBMISSION_HEADER_CACHE_CONTROL_MAX_AGE"
      },
      {
        "name": "FORM_SUBMISSION_HEADER_CACHE_CONTROL_NO_CACHE"
      },
      {
        "name": "FORM_SUBMISSION_HEADER_ORIGIN"
      },
      {
        "name": "FORM_SUBMISSION_URL_WITHOUT_HASH"
      },
      {
        "name": "FRAME_LOCATION_ABOUT_BLANK_FOR_ABOUT_SCHEME"
      },
      {
        "name": "HTMLABBREVIATED"
      },
      {
        "name": "HTMLALLCOLLECTION_DO_NOT_CONVERT_STRINGS_TO_NUMBER"
      },
      {
        "name": "HTMLALLCOLLECTION_INTEGER_INDEX"
      },
      {
        "name": "HTMLALLCOLLECTION_NO_COLLECTION_FOR_MANY_HITS"
      },
      {
        "name": "HTMLALLCOLLECTION_NULL_IF_NAMED_ITEM_NOT_FOUND"
      },
      {
        "name": "HTMLBASEFONT_END_TAG_FORBIDDEN"
      },
      {
        "name": "HTMLBASE_HREF_DEFAULT_EMPTY"
      },
      {
        "name": "HTMLBUTTON_SUBMIT_IGNORES_DISABLED_STATE"
      },
      {
        "name": "HTMLBUTTON_WILL_VALIDATE_IGNORES_READONLY"
      },
      {
        "name": "HTMLCOLLECTION_ITEM_FUNCT_SUPPORTS_DOUBLE_INDEX_ALSO"
      },
      {
        "name": "HTMLCOLLECTION_ITEM_SUPPORTS_DOUBLE_INDEX_ALSO"
      },
      {
        "name": "HTMLCOLLECTION_ITEM_SUPPORTS_ID_SEARCH_ALSO"
      },
      {
        "name": "HTMLCOLLECTION_NAMED_ITEM_ID_FIRST"
      },
      {
        "name": "HTMLCOLLECTION_NULL_IF_NOT_FOUND"
      },
      {
        "name": "HTMLCOLLECTION_SUPPORTS_PARANTHESES"
      },
      {
        "name": "HTMLDOCUMENT_CHARSET_LOWERCASE"
      },
      {
        "name": "HTMLDOCUMENT_COLOR"
      },
      {
        "name": "HTMLDOCUMENT_COOKIES_IGNORE_BLANK"
      },
      {
        "name": "HTMLDOCUMENT_ELEMENTS_BY_NAME_EMPTY"
      },
      {
        "name": "HTMLDOCUMENT_FUNCTION_DETACHED"
      },
      {
        "name": "HTMLDOCUMENT_GET_ALSO_FRAMES"
      },
      {
        "name": "HTMLDOCUMENT_GET_FOR_ID_AND_OR_NAME"
      },
      {
        "name": "HTMLDOCUMENT_GET_PREFERS_STANDARD_FUNCTIONS"
      },
      {
        "name": "HTMLELEMENT_ALIGN_INVALID"
      },
      {
        "name": "HTMLELEMENT_DETACH_ACTIVE_TRIGGERS_NO_KEYUP_EVENT"
      },
      {
        "name": "HTMLELEMENT_REMOVE_ACTIVE_TRIGGERS_BLUR_EVENT"
      },
      {
        "name": "HTMLIMAGE_BLANK_SRC_AS_EMPTY"
      },
      {
        "name": "HTMLIMAGE_EMPTY_SRC_DISPLAY_FALSE"
      },
      {
        "name": "HTMLIMAGE_HTMLELEMENT"
      },
      {
        "name": "HTMLIMAGE_HTMLUNKNOWNELEMENT"
      },
      {
        "name": "HTMLIMAGE_INVISIBLE_NO_SRC"
      },
      {
        "name": "HTMLIMAGE_NAME_VALUE_PARAMS"
      },
      {
        "name": "HTMLINPUT_ATTRIBUTE_MIN_MAX_LENGTH_SUPPORTED"
      },
      {
        "name": "HTMLINPUT_CHECKBOX_DOES_NOT_CLICK_SURROUNDING_ANCHOR"
      },
      {
        "name": "HTMLINPUT_DOES_NOT_CLICK_SURROUNDING_ANCHOR"
      },
      {
        "name": "HTMLINPUT_FILES_UNDEFINED"
      },
      {
        "name": "HTMLINPUT_FILE_SELECTION_START_END_NULL"
      },
      {
        "name": "HTMLINPUT_TYPE_COLOR_NOT_SUPPORTED"
      },
      {
        "name": "HTMLINPUT_TYPE_DATETIME_LOCAL_SUPPORTED"
      },
      {
        "name": "HTMLINPUT_TYPE_DATETIME_SUPPORTED"
      },
      {
        "name": "HTMLINPUT_TYPE_IMAGE_IGNORES_CUSTOM_VALIDITY"
      },
      {
        "name": "HTMLINPUT_TYPE_MONTH_SUPPORTED"
      },
      {
        "name": "HTMLINPUT_TYPE_WEEK_SUPPORTED"
      },
      {
        "name": "HTMLKEYGEN_END_TAG_FORBIDDEN"
      },
      {
        "name": "HTMLLINK_CHECK_TYPE_FOR_STYLESHEET"
      },
      {
        "name": "HTMLOPTION_PREVENT_DISABLED"
      },
      {
        "name": "HTMLOPTION_REMOVE_SELECTED_ATTRIB_DESELECTS"
      },
      {
        "name": "HTMLSCRIPT_TRIM_TYPE"
      },
      {
        "name": "HTMLSELECT_WILL_VALIDATE_ALWAYS_TRUE"
      },
      {
        "name": "HTMLSELECT_WILL_VALIDATE_IGNORES_READONLY"
      },
      {
        "name": "HTMLTEXTAREA_SET_DEFAULT_VALUE_UPDATES_VALUE"
      },
      {
        "name": "HTMLTEXTAREA_USE_ALL_TEXT_CHILDREN"
      },
      {
        "name": "HTMLTEXTAREA_WILL_VALIDATE_IGNORES_READONLY"
      },
      {
        "name": "HTMLTRACK_END_TAG_FORBIDDEN"
      },
      {
        "name": "HTML_ATTRIBUTE_LOWER_CASE"
      },
      {
        "name": "HTML_COLOR_EXPAND_ZERO"
      },
      {
        "name": "HTML_COLOR_RESTRICT"
      },
      {
        "name": "HTML_COLOR_TO_LOWER"
      },
      {
        "name": "HTML_COMMAND_TAG"
      },
      {
        "name": "HTML_ISINDEX_TAG"
      },
      {
        "name": "HTML_MAIN_TAG"
      },
      {
        "name": "HTML_OBJECT_CLASSID"
      },
      {
        "name": "HTTP_COOKIE_EXTENDED_DATE_PATTERNS_1"
      },
      {
        "name": "HTTP_COOKIE_EXTENDED_DATE_PATTERNS_2"
      },
      {
        "name": "HTTP_COOKIE_EXTRACT_PATH_FROM_LOCATION"
      },
      {
        "name": "HTTP_COOKIE_REMOVE_DOT_FROM_ROOT_DOMAINS"
      },
      {
        "name": "HTTP_COOKIE_START_DATE_1970"
      },
      {
        "name": "HTTP_HEADER_CH_UA"
      },
      {
        "name": "HTTP_HEADER_SEC_FETCH"
      },
      {
        "name": "HTTP_HEADER_UPGRADE_INSECURE_REQUEST"
      },
      {
        "name": "HTTP_REDIRECT_WITHOUT_HASH"
      },
      {
        "name": "JS_ALIGN_ACCEPTS_ARBITRARY_VALUES"
      },
      {
        "name": "JS_ALIGN_FOR_INPUT_IGNORES_VALUES"
      },
      {
        "name": "JS_ANCHORS_REQUIRES_NAME_OR_ID"
      },
      {
        "name": "JS_ANCHOR_HOSTNAME_IGNORE_BLANK"
      },
      {
        "name": "JS_ANCHOR_PATHNAME_DETECT_WIN_DRIVES_URL"
      },
      {
        "name": "JS_ANCHOR_PATHNAME_NONE_FOR_BROKEN_URL"
      },
      {
        "name": "JS_ANCHOR_PATHNAME_NONE_FOR_NONE_HTTP_URL"
      },
      {
        "name": "JS_ANCHOR_PATHNAME_PREFIX_WIN_DRIVES_URL"
      },
      {
        "name": "JS_ANCHOR_PROTOCOL_COLON_FOR_BROKEN_URL"
      },
      {
        "name": "JS_ANCHOR_PROTOCOL_COLON_UPPER_CASE_DRIVE_LETTERS"
      },
      {
        "name": "JS_ANCHOR_PROTOCOL_HTTP_FOR_BROKEN_URL"
      },
      {
        "name": "JS_ANCHOR_PROTOCOL_INVALID_THROWS"
      },
      {
        "name": "JS_API_FETCH"
      },
      {
        "name": "JS_API_PROXY"
      },
      {
        "name": "JS_AREA_WITHOUT_HREF_FOCUSABLE"
      },
      {
        "name": "JS_ARGUMENTS_READ_ONLY_ACCESSED_FROM_FUNCTION"
      },
      {
        "name": "JS_ARRAY_FROM"
      },
      {
        "name": "JS_ATTR_FIRST_LAST_CHILD_RETURNS_NULL"
      },
      {
        "name": "JS_AUDIO_PROCESSING_EVENT_CTOR"
      },
      {
        "name": "JS_BGSOUND_AS_UNKNOWN"
      },
      {
        "name": "JS_BLOB_CONTENT_TYPE_CASE_SENSITIVE"
      },
      {
        "name": "JS_BLOB_EVENT_REQUIRES_DATA"
      },
      {
        "name": "JS_BODY_MARGINS_8"
      },
      {
        "name": "JS_BOUNDINGCLIENTRECT_THROWS_IF_DISCONNECTED"
      },
      {
        "name": "JS_CANVAS_DATA_URL_CHROME_PNG"
      },
      {
        "name": "JS_CANVAS_DATA_URL_IE_PNG"
      },
      {
        "name": "JS_CLEAR_RESTRICT"
      },
      {
        "name": "JS_CLIENTHEIGHT_INPUT_17"
      },
      {
        "name": "JS_CLIENTHEIGHT_INPUT_18"
      },
      {
        "name": "JS_CLIENTHEIGHT_RADIO_CHECKBOX_10"
      },
      {
        "name": "JS_CLIENTRECTLIST_THROWS_IF_ITEM_NOT_FOUND"
      },
      {
        "name": "JS_CLIENTWIDTH_INPUT_TEXT_143"
      },
      {
        "name": "JS_CLIENTWIDTH_INPUT_TEXT_173"
      },
      {
        "name": "JS_CLIENTWIDTH_RADIO_CHECKBOX_10"
      },
      {
        "name": "JS_CONSOLE_TIMESTAMP"
      },
      {
        "name": "JS_CSSRULELIST_ENUM_ITEM_LENGTH"
      },
      {
        "name": "JS_CSS_OBJECT"
      },
      {
        "name": "JS_DATE_LOCALE_DATE_SHORT"
      },
      {
        "name": "JS_DATE_WITH_LEFT_TO_RIGHT_MARK"
      },
      {
        "name": "JS_DOCTYPE_ENTITIES_NULL"
      },
      {
        "name": "JS_DOCTYPE_NOTATIONS_NULL"
      },
      {
        "name": "JS_DOCUMENT_CREATE_ATTRUBUTE_LOWER_CASE"
      },
      {
        "name": "JS_DOCUMENT_DESIGN_MODE_INHERIT"
      },
      {
        "name": "JS_DOCUMENT_FORMS_FUNCTION_SUPPORTED"
      },
      {
        "name": "JS_DOCUMENT_OPEN_OVERWRITES_ABOUT_BLANK_LOCATION"
      },
      {
        "name": "JS_DOCUMENT_SELECTION_RANGE_COUNT"
      },
      {
        "name": "JS_DOCUMENT_SETTING_DOMAIN_THROWS_FOR_ABOUT_BLANK"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_CREATE_HTMLDOCOMENT_REQUIRES_TITLE"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CORE_3"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS2_1"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS2_3"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS3_1"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS3_2"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS3_3"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS_1"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS_2"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS_3"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_EVENTS_1"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_KEYBOARDEVENTS"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_LS"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_MUTATIONNAMEEVENTS"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_RANGE_1"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_RANGE_3"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_STYLESHEETS"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_SVG_BASICSTRUCTURE_1_2"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_TEXTEVENTS"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_UIEVENTS_2"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_VALIDATION"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_VIEWS_1"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_VIEWS_3"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_XPATH"
      },
      {
        "name": "JS_DOMPARSER_EMPTY_STRING_IS_ERROR"
      },
      {
        "name": "JS_DOMPARSER_EXCEPTION_ON_ERROR"
      },
      {
        "name": "JS_DOMPARSER_PARSERERROR_ON_ERROR"
      },
      {
        "name": "JS_DOMTOKENLIST_CONTAINS_RETURNS_FALSE_FOR_BLANK"
      },
      {
        "name": "JS_DOMTOKENLIST_ENHANCED_WHITESPACE_CHARS"
      },
      {
        "name": "JS_DOMTOKENLIST_GET_NULL_IF_OUTSIDE"
      },
      {
        "name": "JS_DOMTOKENLIST_LENGTH_IGNORES_DUPLICATES"
      },
      {
        "name": "JS_DOMTOKENLIST_REMOVE_WHITESPACE_CHARS_ON_ADD"
      },
      {
        "name": "JS_DOMTOKENLIST_REMOVE_WHITESPACE_CHARS_ON_REMOVE"
      },
      {
        "name": "JS_DOM_CDATA_DELETE_THROWS_NEGATIVE_COUNT"
      },
      {
        "name": "JS_ELEMENT_GET_ATTRIBUTE_RETURNS_EMPTY"
      },
      {
        "name": "JS_ERROR_CAPTURE_STACK_TRACE"
      },
      {
        "name": "JS_ERROR_STACK_TRACE_LIMIT"
      },
      {
        "name": "JS_EVENT_INPUT_CTOR_INPUTTYPE"
      },
      {
        "name": "JS_EVENT_KEYBOARD_CTOR_WHICH"
      },
      {
        "name": "JS_EVENT_LOAD_SUPPRESSED_BY_CONTENT_SECURIRY_POLICY"
      },
      {
        "name": "JS_FILEREADER_CONTENT_TYPE"
      },
      {
        "name": "JS_FILEREADER_EMPTY_NULL"
      },
      {
        "name": "JS_FORM_ACTION_EXPANDURL_NOT_DEFINED"
      },
      {
        "name": "JS_FORM_DATA_CONTENT_TYPE_PLAIN_IF_FILE_TYPE_UNKNOWN"
      },
      {
        "name": "JS_FORM_DATA_ITERATOR_SIMPLE_NAME"
      },
      {
        "name": "JS_FORM_DISPATCHEVENT_SUBMITS"
      },
      {
        "name": "JS_FORM_REJECT_INVALID_ENCODING"
      },
      {
        "name": "JS_FORM_SUBMIT_FORCES_DOWNLOAD"
      },
      {
        "name": "JS_FORM_USABLE_AS_FUNCTION"
      },
      {
        "name": "JS_FRAME_CONTENT_DOCUMENT_ACCESS_DENIED_THROWS"
      },
      {
        "name": "JS_GLOBAL_THIS"
      },
      {
        "name": "JS_GROUPINGRULE_INSERTRULE_INDEX_OPTIONAL"
      },
      {
        "name": "JS_HTML_HYPHEN_ELEMENT_CLASS_NAME"
      },
      {
        "name": "JS_HTML_OBJECT_VALIDITYSTATE_ISVALID_IGNORES_CUSTOM_ERROR"
      },
      {
        "name": "JS_HTML_RUBY_ELEMENT_CLASS_NAME"
      },
      {
        "name": "JS_IFRAME_ALWAYS_EXECUTE_ONLOAD"
      },
      {
        "name": "JS_IGNORES_LAST_LINE_CONTAINING_UNCOMMENTED"
      },
      {
        "name": "JS_IGNORES_UTF8_BOM_SOMETIMES"
      },
      {
        "name": "JS_IMAGE_COMPLETE_RETURNS_TRUE_FOR_NO_REQUEST"
      },
      {
        "name": "JS_IMAGE_WIDTH_HEIGHT_EMPTY_SOURCE_RETURNS_0x0"
      },
      {
        "name": "JS_IMAGE_WIDTH_HEIGHT_RETURNS_16x16_0x0"
      },
      {
        "name": "JS_IMAGE_WIDTH_HEIGHT_RETURNS_24x24_0x0"
      },
      {
        "name": "JS_IMAGE_WIDTH_HEIGHT_RETURNS_28x30_28x30"
      },
      {
        "name": "JS_INNER_HTML_ADD_CHILD_FOR_NULL_VALUE"
      },
      {
        "name": "JS_INNER_HTML_LF"
      },
      {
        "name": "JS_INNER_TEXT_SCRIPT"
      },
      {
        "name": "JS_INNER_TEXT_SVG_NL"
      },
      {
        "name": "JS_INNER_TEXT_SVG_TITLE"
      },
      {
        "name": "JS_INNER_TEXT_VALUE_NULL"
      },
      {
        "name": "JS_INPUT_IGNORE_NEGATIVE_SELECTION_START"
      },
      {
        "name": "JS_INPUT_NUMBER_ACCEPT_ALL"
      },
      {
        "name": "JS_INPUT_NUMBER_DOT_AT_END_IS_DOUBLE"
      },
      {
        "name": "JS_INPUT_NUMBER_SELECTION_START_END_NULL"
      },
      {
        "name": "JS_INPUT_SET_TYPE_LOWERCASE"
      },
      {
        "name": "JS_INPUT_SET_UNSUPORTED_TYPE_EXCEPTION"
      },
      {
        "name": "JS_INPUT_SET_VALUE_DATE_SUPPORTED"
      },
      {
        "name": "JS_INPUT_SET_VALUE_EMAIL_TRIMMED"
      },
      {
        "name": "JS_INPUT_SET_VALUE_MOVE_SELECTION_TO_START"
      },
      {
        "name": "JS_INPUT_SET_VALUE_URL_TRIMMED"
      },
      {
        "name": "JS_INTL_NAMED_OBJECT"
      },
      {
        "name": "JS_INTL_V8_BREAK_ITERATOR"
      },
      {
        "name": "JS_IS_SEARCH_PROVIDER_INSTALLED_ZERO"
      },
      {
        "name": "JS_LABEL_FORM_OF_SELF"
      },
      {
        "name": "JS_LOCATION_HASH_HASH_IS_ENCODED"
      },
      {
        "name": "JS_LOCATION_HASH_IS_DECODED"
      },
      {
        "name": "JS_LOCATION_HASH_RETURNS_HASH_FOR_EMPTY_DEFINED"
      },
      {
        "name": "JS_LOCATION_HREF_HASH_IS_ENCODED"
      },
      {
        "name": "JS_LOCATION_RELOAD_REFERRER"
      },
      {
        "name": "JS_MEDIA_LIST_ALL"
      },
      {
        "name": "JS_MEDIA_LIST_EMPTY_STRING"
      },
      {
        "name": "JS_MENU_TYPE_EMPTY"
      },
      {
        "name": "JS_MENU_TYPE_PASS"
      },
      {
        "name": "JS_NATIVE_FUNCTION_TOSTRING_COMPACT"
      },
      {
        "name": "JS_NATIVE_FUNCTION_TOSTRING_NEW_LINE"
      },
      {
        "name": "JS_NATIVE_FUNCTION_TOSTRING_NL"
      },
      {
        "name": "JS_NAVIGATOR_DO_NOT_TRACK_UNSPECIFIED"
      },
      {
        "name": "JS_NODE_CONTAINS_RETURNS_FALSE_FOR_INVALID_ARG"
      },
      {
        "name": "JS_NODE_INSERT_BEFORE_REF_OPTIONAL"
      },
      {
        "name": "JS_OBJECT_GET_OWN_PROPERTY_SYMBOLS"
      },
      {
        "name": "JS_OFFSET_PARENT_NULL_IF_FIXED"
      },
      {
        "name": "JS_OUTER_HTML_NULL_AS_STRING"
      },
      {
        "name": "JS_OUTER_HTML_REMOVES_CHILDREN_FOR_DETACHED"
      },
      {
        "name": "JS_OUTER_HTML_THROWS_FOR_DETACHED"
      },
      {
        "name": "JS_PAGERULE_SELECTORTEXT_EMPTY"
      },
      {
        "name": "JS_PHRASE_COMMON_CLASS_NAME"
      },
      {
        "name": "JS_POP_STATE_EVENT_CLONE_STATE"
      },
      {
        "name": "JS_PRE_WIDTH_STRING"
      },
      {
        "name": "JS_PROMISE"
      },
      {
        "name": "JS_PROPERTY_DESCRIPTOR_NAME"
      },
      {
        "name": "JS_PROPERTY_DESCRIPTOR_NEW_LINE"
      },
      {
        "name": "JS_REFLECT"
      },
      {
        "name": "JS_REGEXP_EMPTY_LASTPAREN_IF_TOO_MANY_GROUPS"
      },
      {
        "name": "JS_REGEXP_GROUP0_RETURNS_WHOLE_MATCH"
      },
      {
        "name": "JS_SCRIPT_HANDLE_204_AS_ERROR"
      },
      {
        "name": "JS_SCRIPT_SUPPORTS_FOR_AND_EVENT_WINDOW"
      },
      {
        "name": "JS_SELECTOR_TEXT_LOWERCASE"
      },
      {
        "name": "JS_SELECT_FILE_THROWS"
      },
      {
        "name": "JS_SELECT_OPTIONS_HAS_SELECT_CLASS_NAME"
      },
      {
        "name": "JS_SELECT_OPTIONS_IGNORE_NEGATIVE_LENGTH"
      },
      {
        "name": "JS_SELECT_OPTIONS_IN_ALWAYS_TRUE"
      },
      {
        "name": "JS_SELECT_OPTIONS_NULL_FOR_OUTSIDE"
      },
      {
        "name": "JS_SELECT_OPTIONS_REMOVE_IGNORE_IF_INDEX_NEGATIVE"
      },
      {
        "name": "JS_SELECT_OPTIONS_REMOVE_THROWS_IF_NEGATIV"
      },
      {
        "name": "JS_SELECT_REMOVE_IGNORE_IF_INDEX_OUTSIDE"
      },
      {
        "name": "JS_SELECT_SET_VALUES_CHECKS_ONLY_VALUE_ATTRIBUTE"
      },
      {
        "name": "JS_STORAGE_GET_FROM_ITEMS"
      },
      {
        "name": "JS_STORAGE_PRESERVED_INCLUDED"
      },
      {
        "name": "JS_STYLESHEETLIST_ACTIVE_ONLY"
      },
      {
        "name": "JS_STYLE_UNSUPPORTED_PROPERTY_GETTER"
      },
      {
        "name": "JS_STYLE_WORD_SPACING_ACCEPTS_PERCENT"
      },
      {
        "name": "JS_STYLE_WRONG_INDEX_RETURNS_UNDEFINED"
      },
      {
        "name": "JS_SYMBOL"
      },
      {
        "name": "JS_TABLE_CELL_HEIGHT_DOES_NOT_RETURN_NEGATIVE_VALUES"
      },
      {
        "name": "JS_TABLE_CELL_OFFSET_INCLUDES_BORDER"
      },
      {
        "name": "JS_TABLE_CELL_WIDTH_DOES_NOT_RETURN_NEGATIVE_VALUES"
      },
      {
        "name": "JS_TABLE_COLUMN_WIDTH_NO_NEGATIVE_VALUES"
      },
      {
        "name": "JS_TABLE_COLUMN_WIDTH_NULL_STRING"
      },
      {
        "name": "JS_TABLE_ROW_DELETE_CELL_REQUIRES_INDEX"
      },
      {
        "name": "JS_TABLE_SPAN_SET_ZERO_IF_INVALID"
      },
      {
        "name": "JS_TABLE_SPAN_THROWS_EXCEPTION_IF_INVALID"
      },
      {
        "name": "JS_TABLE_VALIGN_SUPPORTS_IE_VALUES"
      },
      {
        "name": "JS_TEXT_AREA_GET_MAXLENGTH_MAX_INT"
      },
      {
        "name": "JS_TEXT_AREA_SET_COLS_NEGATIVE_THROWS_EXCEPTION"
      },
      {
        "name": "JS_TEXT_AREA_SET_COLS_THROWS_EXCEPTION"
      },
      {
        "name": "JS_TEXT_AREA_SET_MAXLENGTH_NEGATIVE_THROWS_EXCEPTION"
      },
      {
        "name": "JS_TEXT_AREA_SET_ROWS_NEGATIVE_THROWS_EXCEPTION"
      },
      {
        "name": "JS_TEXT_AREA_SET_ROWS_THROWS_EXCEPTION"
      },
      {
        "name": "JS_TEXT_AREA_SET_VALUE_NULL"
      },
      {
        "name": "JS_TREEWALKER_EXPAND_ENTITY_REFERENCES_FALSE"
      },
      {
        "name": "JS_TREEWALKER_FILTER_FUNCTION_ONLY"
      },
      {
        "name": "JS_TYPE_ACCEPTS_ARBITRARY_VALUES"
      },
      {
        "name": "JS_URL_SEARCH_PARMS_ITERATOR_SIMPLE_NAME"
      },
      {
        "name": "JS_VALIGN_CONVERTS_TO_LOWERCASE"
      },
      {
        "name": "JS_WEBGL_CONTEXT_EVENT_CONSTANTS"
      },
      {
        "name": "JS_WIDTH_HEIGHT_ACCEPTS_ARBITRARY_VALUES"
      },
      {
        "name": "JS_WINDOW_ACTIVEXOBJECT_HIDDEN"
      },
      {
        "name": "JS_WINDOW_CHANGE_OPENER_ONLY_WINDOW_OBJECT"
      },
      {
        "name": "JS_WINDOW_COMPUTED_STYLE_PSEUDO_ACCEPT_WITHOUT_COLON"
      },
      {
        "name": "JS_WINDOW_FORMFIELDS_ACCESSIBLE_BY_NAME"
      },
      {
        "name": "JS_WINDOW_FRAMES_ACCESSIBLE_BY_ID"
      },
      {
        "name": "JS_WINDOW_FRAME_BY_ID_RETURNS_WINDOW"
      },
      {
        "name": "JS_WINDOW_INSTALL_TRIGGER_NULL"
      },
      {
        "name": "JS_WINDOW_OUTER_INNER_HEIGHT_DIFF_131"
      },
      {
        "name": "JS_WINDOW_OUTER_INNER_HEIGHT_DIFF_133"
      },
      {
        "name": "JS_WINDOW_OUTER_INNER_HEIGHT_DIFF_86"
      },
      {
        "name": "JS_WINDOW_OUTER_INNER_HEIGHT_DIFF_91"
      },
      {
        "name": "JS_WINDOW_SELECTION_NULL_IF_INVISIBLE"
      },
      {
        "name": "JS_WINDOW_TOP_WRITABLE"
      },
      {
        "name": "JS_WORKER_IMPORT_SCRIPTS_ACCEPTS_ALL"
      },
      {
        "name": "JS_XML"
      },
      {
        "name": "JS_XML_GET_ELEMENTS_BY_TAG_NAME_LOCAL"
      },
      {
        "name": "JS_XML_GET_ELEMENT_BY_ID__ANY_ELEMENT"
      },
      {
        "name": "JS_XML_SERIALIZER_BLANK_BEFORE_SELF_CLOSING"
      },
      {
        "name": "JS_XML_SERIALIZER_HTML_DOCUMENT_FRAGMENT_ALWAYS_EMPTY"
      },
      {
        "name": "JS_XML_SERIALIZER_ROOT_CDATA_AS_ESCAPED_TEXT"
      },
      {
        "name": "JS_XML_SUPPORT_VIA_ACTIVEXOBJECT"
      },
      {
        "name": "JS_XSLT_TRANSFORM_INDENT"
      },
      {
        "name": "KEYBOARD_EVENT_SPECIAL_KEYPRESS"
      },
      {
        "name": "KEYGEN_AS_BLOCK"
      },
      {
        "name": "META_X_UA_COMPATIBLE"
      },
      {
        "name": "MULTICOL_BLOCK"
      },
      {
        "name": "PAGE_SELECTION_RANGE_FROM_SELECTABLE_TEXT_INPUT"
      },
      {
        "name": "QUERYSELECTORALL_NOT_IN_QUIRKS"
      },
      {
        "name": "QUERYSELECTOR_CSS3_PSEUDO_REQUIRE_ATTACHED_NODE"
      },
      {
        "name": "RESETINPUT_DEFAULT_VALUE_IF_VALUE_NOT_DEFINED"
      },
      {
        "name": "SLOT_CONTENTS"
      },
      {
        "name": "STRING_INCLUDES"
      },
      {
        "name": "STRING_REPEAT"
      },
      {
        "name": "STRING_STARTS_ENDS_WITH"
      },
      {
        "name": "STRING_TRIM_LEFT_RIGHT"
      },
      {
        "name": "STYLESHEET_ADD_RULE_RETURNS_POS"
      },
      {
        "name": "STYLESHEET_HREF_EMPTY_IS_NULL"
      },
      {
        "name": "SUBMITINPUT_DEFAULT_VALUE_IF_VALUE_NOT_DEFINED"
      },
      {
        "name": "SVG_UNKNOWN_ARE_DOM"
      },
      {
        "name": "URL_ABOUT_BLANK_HAS_BLANK_PATH"
      },
      {
        "name": "URL_AUTH_CREDENTIALS"
      },
      {
        "name": "URL_MINIMAL_QUERY_ENCODING"
      },
      {
        "name": "URL_MISSING_SLASHES"
      },
      {
        "name": "WEBSOCKET_ORIGIN_SET"
      },
      {
        "name": "WINDOW_EXECUTE_EVENTS"
      },
      {
        "name": "XHR_ALL_RESPONSE_HEADERS_APPEND_SEPARATOR"
      },
      {
        "name": "XHR_ALL_RESPONSE_HEADERS_SEPARATE_BY_LF"
      },
      {
        "name": "XHR_FIRE_STATE_OPENED_AGAIN_IN_ASYNC_MODE"
      },
      {
        "name": "XHR_HANDLE_SYNC_NETWORK_ERRORS"
      },
      {
        "name": "XHR_LENGTH_COMPUTABLE"
      },
      {
        "name": "XHR_LOAD_ALWAYS_AFTER_DONE"
      },
      {
        "name": "XHR_LOAD_START_ASYNC"
      },
      {
        "name": "XHR_NO_CROSS_ORIGIN_TO_ABOUT"
      },
      {
        "name": "XHR_OPEN_ALLOW_EMTPY_URL"
      },
      {
        "name": "XHR_PROGRESS_ON_NETWORK_ERROR_ASYNC"
      },
      {
        "name": "XHR_RESPONSE_TEXT_EMPTY_UNSENT"
      },
      {
        "name": "XHR_RESPONSE_TYPE_THROWS_UNSENT"
      },
      {
        "name": "XHR_SEND_IGNORES_BLOB_MIMETYPE_AS_CONTENTTYPE"
      },
      {
        "name": "XHR_SEND_NETWORK_ERROR_IF_ABORTED"
      },
      {
        "name": "XHR_USE_CONTENT_CHARSET"
      },
      {
        "name": "XPATH_SELECTION_NAMESPACES"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "ANCHOR_EMPTY_HREF_NO_FILENAME"
      },
      {
        "name": "ANCHOR_SEND_PING_REQUEST"
      },
      {
        "name": "CONTENT_SECURITY_POLICY_IGNORED"
      },
      {
        "name": "CSS_BACKGROUND_INITIAL"
      },
      {
        "name": "CSS_BACKGROUND_RGBA"
      },
      {
        "name": "CSS_CSSTEXT_IE_STYLE"
      },
      {
        "name": "CSS_DIALOG_NONE"
      },
      {
        "name": "CSS_DISPLAY_BLOCK"
      },
      {
        "name": "CSS_DISPLAY_BLOCK2"
      },
      {
        "name": "CSS_LENGTH_INITIAL"
      },
      {
        "name": "CSS_NOSCRIPT_DISPLAY_INLINE"
      },
      {
        "name": "CSS_OUTLINE_WIDTH_UNIT_NOT_REQUIRED"
      },
      {
        "name": "CSS_PROGRESS_DISPLAY_INLINE"
      },
      {
        "name": "CSS_PSEUDO_SELECTOR_MS_PLACEHHOLDER"
      },
      {
        "name": "CSS_PSEUDO_SELECTOR_PLACEHOLDER_SHOWN"
      },
      {
        "name": "CSS_RP_DISPLAY_NONE"
      },
      {
        "name": "CSS_RT_DISPLAY_RUBY_TEXT_ALWAYS"
      },
      {
        "name": "CSS_RUBY_DISPLAY_INLINE"
      },
      {
        "name": "CSS_SET_NULL_THROWS"
      },
      {
        "name": "CSS_STYLE_PROP_DISCONNECTED_IS_EMPTY"
      },
      {
        "name": "CSS_STYLE_PROP_FONT_DISCONNECTED_IS_EMPTY"
      },
      {
        "name": "CSS_VERTICAL_ALIGN_SUPPORTS_AUTO"
      },
      {
        "name": "CSS_ZINDEX_TYPE_INTEGER"
      },
      {
        "name": "DIALOGWINDOW_REFERER"
      },
      {
        "name": "DOM_NORMALIZE_REMOVE_CHILDREN"
      },
      {
        "name": "EVENT_BEFORE_UNLOAD_RETURN_VALUE_IS_HTML5_LIKE"
      },
      {
        "name": "EVENT_FOCUS_FOCUS_IN_BLUR_OUT"
      },
      {
        "name": "EVENT_FOCUS_IN_FOCUS_OUT_BLUR"
      },
      {
        "name": "EVENT_FOCUS_ON_LOAD"
      },
      {
        "name": "EVENT_HANDLER_NULL_RETURN_IS_MEANINGFUL"
      },
      {
        "name": "EVENT_MOUSE_ON_DISABLED"
      },
      {
        "name": "EVENT_ONANIMATION_DOCUMENT_CREATE_NOT_SUPPORTED"
      },
      {
        "name": "EVENT_ONCHANGE_AFTER_ONCLICK"
      },
      {
        "name": "EVENT_ONCLICK_FOR_SELECT_ONLY"
      },
      {
        "name": "EVENT_ONCLICK_POINTEREVENT_DETAIL_0"
      },
      {
        "name": "EVENT_ONCLICK_USES_POINTEREVENT"
      },
      {
        "name": "EVENT_ONCLOSE_DOCUMENT_CREATE_NOT_SUPPORTED"
      },
      {
        "name": "EVENT_ONDOUBLECLICK_USES_POINTEREVENT"
      },
      {
        "name": "EVENT_ONLOAD_INTERNAL_JAVASCRIPT"
      },
      {
        "name": "EVENT_ONMESSAGE_DEFAULT_DATA_NULL"
      },
      {
        "name": "EVENT_ONMOUSEDOWN_FOR_SELECT_OPTION_TRIGGERS_ADDITIONAL_DOWN_FOR_SELECT"
      },
      {
        "name": "EVENT_ONMOUSEDOWN_NOT_FOR_SELECT_OPTION"
      },
      {
        "name": "EVENT_ONMOUSEOVER_FOR_DISABLED_OPTION"
      },
      {
        "name": "EVENT_ONMOUSEOVER_NEVER_FOR_SELECT_OPTION"
      },
      {
        "name": "EVENT_ONMOUSEUP_FOR_SELECT_OPTION_TRIGGERS_ADDITIONAL_UP_FOR_SELECT"
      },
      {
        "name": "EVENT_ONMOUSEUP_NOT_FOR_SELECT_OPTION"
      },
      {
        "name": "EVENT_ONPOPSTATE_DOCUMENT_CREATE_NOT_SUPPORTED"
      },
      {
        "name": "EVENT_TYPE_BEFOREUNLOADEVENT"
      },
      {
        "name": "EVENT_TYPE_HASHCHANGEEVENT"
      },
      {
        "name": "EVENT_TYPE_MOUSEWHEELEVENT"
      },
      {
        "name": "EVENT_TYPE_POINTEREVENT"
      },
      {
        "name": "EVENT_TYPE_PROGRESSEVENT"
      },
      {
        "name": "EVENT_TYPE_WHEELEVENT"
      },
      {
        "name": "FOCUS_BODY_ELEMENT_AT_START"
      },
      {
        "name": "FORMFIELD_REACHABLE_BY_NEW_NAMES"
      },
      {
        "name": "FORMFIELD_REACHABLE_BY_ORIGINAL_NAME"
      },
      {
        "name": "FORM_FORM_ATTRIBUTE_SUPPORTED"
      },
      {
        "name": "FORM_PARAMETRS_NOT_SUPPORTED_FOR_IMAGE"
      },
      {
        "name": "FORM_SUBMISSION_DOWNLOWDS_ALSO_IF_ONLY_HASH_CHANGED"
      },
      {
        "name": "FORM_SUBMISSION_FORM_ATTRIBUTE"
      },
      {
        "name": "FORM_SUBMISSION_HEADER_CACHE_CONTROL_MAX_AGE"
      },
      {
        "name": "FORM_SUBMISSION_HEADER_CACHE_CONTROL_NO_CACHE"
      },
      {
        "name": "FORM_SUBMISSION_HEADER_ORIGIN"
      },
      {
        "name": "FORM_SUBMISSION_URL_WITHOUT_HASH"
      },
      {
        "name": "FRAME_LOCATION_ABOUT_BLANK_FOR_ABOUT_SCHEME"
      },
      {
        "name": "HTMLABBREVIATED"
      },
      {
        "name": "HTMLALLCOLLECTION_DO_NOT_CONVERT_STRINGS_TO_NUMBER"
      },
      {
        "name": "HTMLALLCOLLECTION_INTEGER_INDEX"
      },
      {
        "name": "HTMLALLCOLLECTION_NO_COLLECTION_FOR_MANY_HITS"
      },
      {
        "name": "HTMLALLCOLLECTION_NULL_IF_NAMED_ITEM_NOT_FOUND"
      },
      {
        "name": "HTMLBASEFONT_END_TAG_FORBIDDEN"
      },
      {
        "name": "HTMLBASE_HREF_DEFAULT_EMPTY"
      },
      {
        "name": "HTMLBUTTON_SUBMIT_IGNORES_DISABLED_STATE"
      },
      {
        "name": "HTMLBUTTON_WILL_VALIDATE_IGNORES_READONLY"
      },
      {
        "name": "HTMLCOLLECTION_ITEM_FUNCT_SUPPORTS_DOUBLE_INDEX_ALSO"
      },
      {
        "name": "HTMLCOLLECTION_ITEM_SUPPORTS_DOUBLE_INDEX_ALSO"
      },
      {
        "name": "HTMLCOLLECTION_ITEM_SUPPORTS_ID_SEARCH_ALSO"
      },
      {
        "name": "HTMLCOLLECTION_NAMED_ITEM_ID_FIRST"
      },
      {
        "name": "HTMLCOLLECTION_NULL_IF_NOT_FOUND"
      },
      {
        "name": "HTMLCOLLECTION_SUPPORTS_PARANTHESES"
      },
      {
        "name": "HTMLDOCUMENT_CHARSET_LOWERCASE"
      },
      {
        "name": "HTMLDOCUMENT_COLOR"
      },
      {
        "name": "HTMLDOCUMENT_COOKIES_IGNORE_BLANK"
      },
      {
        "name": "HTMLDOCUMENT_ELEMENTS_BY_NAME_EMPTY"
      },
      {
        "name": "HTMLDOCUMENT_FUNCTION_DETACHED"
      },
      {
        "name": "HTMLDOCUMENT_GET_ALSO_FRAMES"
      },
      {
        "name": "HTMLDOCUMENT_GET_FOR_ID_AND_OR_NAME"
      },
      {
        "name": "HTMLDOCUMENT_GET_PREFERS_STANDARD_FUNCTIONS"
      },
      {
        "name": "HTMLELEMENT_ALIGN_INVALID"
      },
      {
        "name": "HTMLELEMENT_DETACH_ACTIVE_TRIGGERS_NO_KEYUP_EVENT"
      },
      {
        "name": "HTMLELEMENT_REMOVE_ACTIVE_TRIGGERS_BLUR_EVENT"
      },
      {
        "name": "HTMLIMAGE_BLANK_SRC_AS_EMPTY"
      },
      {
        "name": "HTMLIMAGE_EMPTY_SRC_DISPLAY_FALSE"
      },
      {
        "name": "HTMLIMAGE_HTMLELEMENT"
      },
      {
        "name": "HTMLIMAGE_HTMLUNKNOWNELEMENT"
      },
      {
        "name": "HTMLIMAGE_INVISIBLE_NO_SRC"
      },
      {
        "name": "HTMLIMAGE_NAME_VALUE_PARAMS"
      },
      {
        "name": "HTMLINPUT_ATTRIBUTE_MIN_MAX_LENGTH_SUPPORTED"
      },
      {
        "name": "HTMLINPUT_CHECKBOX_DOES_NOT_CLICK_SURROUNDING_ANCHOR"
      },
      {
        "name": "HTMLINPUT_DOES_NOT_CLICK_SURROUNDING_ANCHOR"
      },
      {
        "name": "HTMLINPUT_FILES_UNDEFINED"
      },
      {
        "name": "HTMLINPUT_FILE_SELECTION_START_END_NULL"
      },
      {
        "name": "HTMLINPUT_TYPE_COLOR_NOT_SUPPORTED"
      },
      {
        "name": "HTMLINPUT_TYPE_DATETIME_LOCAL_SUPPORTED"
      },
      {
        "name": "HTMLINPUT_TYPE_DATETIME_SUPPORTED"
      },
      {
        "name": "HTMLINPUT_TYPE_IMAGE_IGNORES_CUSTOM_VALIDITY"
      },
      {
        "name": "HTMLINPUT_TYPE_MONTH_SUPPORTED"
      },
      {
        "name": "HTMLINPUT_TYPE_WEEK_SUPPORTED"
      },
      {
        "name": "HTMLKEYGEN_END_TAG_FORBIDDEN"
      },
      {
        "name": "HTMLLINK_CHECK_TYPE_FOR_STYLESHEET"
      },
      {
        "name": "HTMLOPTION_PREVENT_DISABLED"
      },
      {
        "name": "HTMLOPTION_REMOVE_SELECTED_ATTRIB_DESELECTS"
      },
      {
        "name": "HTMLSCRIPT_TRIM_TYPE"
      },
      {
        "name": "HTMLSELECT_WILL_VALIDATE_ALWAYS_TRUE"
      },
      {
        "name": "HTMLSELECT_WILL_VALIDATE_IGNORES_READONLY"
      },
      {
        "name": "HTMLTEXTAREA_SET_DEFAULT_VALUE_UPDATES_VALUE"
      },
      {
        "name": "HTMLTEXTAREA_USE_ALL_TEXT_CHILDREN"
      },
      {
        "name": "HTMLTEXTAREA_WILL_VALIDATE_IGNORES_READONLY"
      },
      {
        "name": "HTMLTRACK_END_TAG_FORBIDDEN"
      },
      {
        "name": "HTML_ATTRIBUTE_LOWER_CASE"
      },
      {
        "name": "HTML_COLOR_EXPAND_ZERO"
      },
      {
        "name": "HTML_COLOR_RESTRICT"
      },
      {
        "name": "HTML_COLOR_TO_LOWER"
      },
      {
        "name": "HTML_COMMAND_TAG"
      },
      {
        "name": "HTML_ISINDEX_TAG"
      },
      {
        "name": "HTML_MAIN_TAG"
      },
      {
        "name": "HTML_OBJECT_CLASSID"
      },
      {
        "name": "HTTP_COOKIE_EXTENDED_DATE_PATTERNS_1"
      },
      {
        "name": "HTTP_COOKIE_EXTENDED_DATE_PATTERNS_2"
      },
      {
        "name": "HTTP_COOKIE_EXTRACT_PATH_FROM_LOCATION"
      },
      {
        "name": "HTTP_COOKIE_REMOVE_DOT_FROM_ROOT_DOMAINS"
      },
      {
        "name": "HTTP_COOKIE_START_DATE_1970"
      },
      {
        "name": "HTTP_HEADER_CH_UA"
      },
      {
        "name": "HTTP_HEADER_SEC_FETCH"
      },
      {
        "name": "HTTP_HEADER_UPGRADE_INSECURE_REQUEST"
      },
      {
        "name": "HTTP_REDIRECT_WITHOUT_HASH"
      },
      {
        "name": "JS_ALIGN_ACCEPTS_ARBITRARY_VALUES"
      },
      {
        "name": "JS_ALIGN_FOR_INPUT_IGNORES_VALUES"
      },
      {
        "name": "JS_ANCHORS_REQUIRES_NAME_OR_ID"
      },
      {
        "name": "JS_ANCHOR_HOSTNAME_IGNORE_BLANK"
      },
      {
        "name": "JS_ANCHOR_PATHNAME_DETECT_WIN_DRIVES_URL"
      },
      {
        "name": "JS_ANCHOR_PATHNAME_NONE_FOR_BROKEN_URL"
      },
      {
        "name": "JS_ANCHOR_PATHNAME_NONE_FOR_NONE_HTTP_URL"
      },
      {
        "name": "JS_ANCHOR_PATHNAME_PREFIX_WIN_DRIVES_URL"
      },
      {
        "name": "JS_ANCHOR_PROTOCOL_COLON_FOR_BROKEN_URL"
      },
      {
        "name": "JS_ANCHOR_PROTOCOL_COLON_UPPER_CASE_DRIVE_LETTERS"
      },
      {
        "name": "JS_ANCHOR_PROTOCOL_HTTP_FOR_BROKEN_URL"
      },
      {
        "name": "JS_ANCHOR_PROTOCOL_INVALID_THROWS"
      },
      {
        "name": "JS_API_FETCH"
      },
      {
        "name": "JS_API_PROXY"
      },
      {
        "name": "JS_AREA_WITHOUT_HREF_FOCUSABLE"
      },
      {
        "name": "JS_ARGUMENTS_READ_ONLY_ACCESSED_FROM_FUNCTION"
      },
      {
        "name": "JS_ARRAY_FROM"
      },
      {
        "name": "JS_ATTR_FIRST_LAST_CHILD_RETURNS_NULL"
      },
      {
        "name": "JS_AUDIO_PROCESSING_EVENT_CTOR"
      },
      {
        "name": "JS_BGSOUND_AS_UNKNOWN"
      },
      {
        "name": "JS_BLOB_CONTENT_TYPE_CASE_SENSITIVE"
      },
      {
        "name": "JS_BLOB_EVENT_REQUIRES_DATA"
      },
      {
        "name": "JS_BODY_MARGINS_8"
      },
      {
        "name": "JS_BOUNDINGCLIENTRECT_THROWS_IF_DISCONNECTED"
      },
      {
        "name": "JS_CANVAS_DATA_URL_CHROME_PNG"
      },
      {
        "name": "JS_CANVAS_DATA_URL_IE_PNG"
      },
      {
        "name": "JS_CLEAR_RESTRICT"
      },
      {
        "name": "JS_CLIENTHEIGHT_INPUT_17"
      },
      {
        "name": "JS_CLIENTHEIGHT_INPUT_18"
      },
      {
        "name": "JS_CLIENTHEIGHT_RADIO_CHECKBOX_10"
      },
      {
        "name": "JS_CLIENTRECTLIST_THROWS_IF_ITEM_NOT_FOUND"
      },
      {
        "name": "JS_CLIENTWIDTH_INPUT_TEXT_143"
      },
      {
        "name": "JS_CLIENTWIDTH_INPUT_TEXT_173"
      },
      {
        "name": "JS_CLIENTWIDTH_RADIO_CHECKBOX_10"
      },
      {
        "name": "JS_CONSOLE_TIMESTAMP"
      },
      {
        "name": "JS_CSSRULELIST_ENUM_ITEM_LENGTH"
      },
      {
        "name": "JS_CSS_OBJECT"
      },
      {
        "name": "JS_DATE_LOCALE_DATE_SHORT"
      },
      {
        "name": "JS_DATE_WITH_LEFT_TO_RIGHT_MARK"
      },
      {
        "name": "JS_DOCTYPE_ENTITIES_NULL"
      },
      {
        "name": "JS_DOCTYPE_NOTATIONS_NULL"
      },
      {
        "name": "JS_DOCUMENT_CREATE_ATTRUBUTE_LOWER_CASE"
      },
      {
        "name": "JS_DOCUMENT_DESIGN_MODE_INHERIT"
      },
      {
        "name": "JS_DOCUMENT_FORMS_FUNCTION_SUPPORTED"
      },
      {
        "name": "JS_DOCUMENT_OPEN_OVERWRITES_ABOUT_BLANK_LOCATION"
      },
      {
        "name": "JS_DOCUMENT_SELECTION_RANGE_COUNT"
      },
      {
        "name": "JS_DOCUMENT_SETTING_DOMAIN_THROWS_FOR_ABOUT_BLANK"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_CREATE_HTMLDOCOMENT_REQUIRES_TITLE"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CORE_3"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS2_1"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS2_3"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS3_1"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS3_2"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS3_3"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS_1"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS_2"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS_3"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_EVENTS_1"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_KEYBOARDEVENTS"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_LS"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_MUTATIONNAMEEVENTS"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_RANGE_1"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_RANGE_3"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_STYLESHEETS"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_SVG_BASICSTRUCTURE_1_2"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_TEXTEVENTS"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_UIEVENTS_2"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_VALIDATION"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_VIEWS_1"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_VIEWS_3"
      },
      {
        "name": "JS_DOMIMPLEMENTATION_FEATURE_XPATH"
      },
      {
        "name": "JS_DOMPARSER_EMPTY_STRING_IS_ERROR"
      },
      {
        "name": "JS_DOMPARSER_EXCEPTION_ON_ERROR"
      },
      {
        "name": "JS_DOMPARSER_PARSERERROR_ON_ERROR"
      },
      {
        "name": "JS_DOMTOKENLIST_CONTAINS_RETURNS_FALSE_FOR_BLANK"
      },
      {
        "name": "JS_DOMTOKENLIST_ENHANCED_WHITESPACE_CHARS"
      },
      {
        "name": "JS_DOMTOKENLIST_GET_NULL_IF_OUTSIDE"
      },
      {
        "name": "JS_DOMTOKENLIST_LENGTH_IGNORES_DUPLICATES"
      },
      {
        "name": "JS_DOMTOKENLIST_REMOVE_WHITESPACE_CHARS_ON_ADD"
      },
      {
        "name": "JS_DOMTOKENLIST_REMOVE_WHITESPACE_CHARS_ON_REMOVE"
      },
      {
        "name": "JS_DOM_CDATA_DELETE_THROWS_NEGATIVE_COUNT"
      },
      {
        "name": "JS_ELEMENT_GET_ATTRIBUTE_RETURNS_EMPTY"
      },
      {
        "name": "JS_ERROR_CAPTURE_STACK_TRACE"
      },
      {
        "name": "JS_ERROR_STACK_TRACE_LIMIT"
      },
      {
        "name": "JS_EVENT_INPUT_CTOR_INPUTTYPE"
      },
      {
        "name": "JS_EVENT_KEYBOARD_CTOR_WHICH"
      },
      {
        "name": "JS_EVENT_LOAD_SUPPRESSED_BY_CONTENT_SECURIRY_POLICY"
      },
      {
        "name": "JS_FILEREADER_CONTENT_TYPE"
      },
      {
        "name": "JS_FILEREADER_EMPTY_NULL"
      },
      {
        "name": "JS_FORM_ACTION_EXPANDURL_NOT_DEFINED"
      },
      {
        "name": "JS_FORM_DATA_CONTENT_TYPE_PLAIN_IF_FILE_TYPE_UNKNOWN"
      },
      {
        "name": "JS_FORM_DATA_ITERATOR_SIMPLE_NAME"
      },
      {
        "name": "JS_FORM_DISPATCHEVENT_SUBMITS"
      },
      {
        "name": "JS_FORM_REJECT_INVALID_ENCODING"
      },
      {
        "name": "JS_FORM_SUBMIT_FORCES_DOWNLOAD"
      },
      {
        "name": "JS_FORM_USABLE_AS_FUNCTION"
      },
      {
        "name": "JS_FRAME_CONTENT_DOCUMENT_ACCESS_DENIED_THROWS"
      },
      {
        "name": "JS_GLOBAL_THIS"
      },
      {
        "name": "JS_GROUPINGRULE_INSERTRULE_INDEX_OPTIONAL"
      },
      {
        "name": "JS_HTML_HYPHEN_ELEMENT_CLASS_NAME"
      },
      {
        "name": "JS_HTML_OBJECT_VALIDITYSTATE_ISVALID_IGNORES_CUSTOM_ERROR"
      },
      {
        "name": "JS_HTML_RUBY_ELEMENT_CLASS_NAME"
      },
      {
        "name": "JS_IFRAME_ALWAYS_EXECUTE_ONLOAD"
      },
      {
        "name": "JS_IGNORES_LAST_LINE_CONTAINING_UNCOMMENTED"
      },
      {
        "name": "JS_IGNORES_UTF8_BOM_SOMETIMES"
      },
      {
        "name": "JS_IMAGE_COMPLETE_RETURNS_TRUE_FOR_NO_REQUEST"
      },
      {
        "name": "JS_IMAGE_WIDTH_HEIGHT_EMPTY_SOURCE_RETURNS_0x0"
      },
      {
        "name": "JS_IMAGE_WIDTH_HEIGHT_RETURNS_16x16_0x0"
      },
      {
        "name": "JS_IMAGE_WIDTH_HEIGHT_RETURNS_24x24_0x0"
      },
      {
        "name": "JS_IMAGE_WIDTH_HEIGHT_RETURNS_28x30_28x30"
      },
      {
        "name": "JS_INNER_HTML_ADD_CHILD_FOR_NULL_VALUE"
      },
      {
        "name": "JS_INNER_HTML_LF"
      },
      {
        "name": "JS_INNER_TEXT_SCRIPT"
      },
      {
        "name": "JS_INNER_TEXT_SVG_NL"
      },
      {
        "name": "JS_INNER_TEXT_SVG_TITLE"
      },
      {
        "name": "JS_INNER_TEXT_VALUE_NULL"
      },
      {
        "name": "JS_INPUT_IGNORE_NEGATIVE_SELECTION_START"
      },
      {
        "name": "JS_INPUT_NUMBER_ACCEPT_ALL"
      },
      {
        "name": "JS_INPUT_NUMBER_DOT_AT_END_IS_DOUBLE"
      },
      {
        "name": "JS_INPUT_NUMBER_SELECTION_START_END_NULL"
      },
      {
        "name": "JS_INPUT_SET_TYPE_LOWERCASE"
      },
      {
        "name": "JS_INPUT_SET_UNSUPORTED_TYPE_EXCEPTION"
      },
      {
        "name": "JS_INPUT_SET_VALUE_DATE_SUPPORTED"
      },
      {
        "name": "JS_INPUT_SET_VALUE_EMAIL_TRIMMED"
      },
      {
        "name": "JS_INPUT_SET_VALUE_MOVE_SELECTION_TO_START"
      },
      {
        "name": "JS_INPUT_SET_VALUE_URL_TRIMMED"
      },
      {
        "name": "JS_INTL_NAMED_OBJECT"
      },
      {
        "name": "JS_INTL_V8_BREAK_ITERATOR"
      },
      {
        "name": "JS_IS_SEARCH_PROVIDER_INSTALLED_ZERO"
      },
      {
        "name": "JS_LABEL_FORM_OF_SELF"
      },
      {
        "name": "JS_LOCATION_HASH_HASH_IS_ENCODED"
      },
      {
        "name": "JS_LOCATION_HASH_IS_DECODED"
      },
      {
        "name": "JS_LOCATION_HASH_RETURNS_HASH_FOR_EMPTY_DEFINED"
      },
      {
        "name": "JS_LOCATION_HREF_HASH_IS_ENCODED"
      },
      {
        "name": "JS_LOCATION_RELOAD_REFERRER"
      },
      {
        "name": "JS_MEDIA_LIST_ALL"
      },
      {
        "name": "JS_MEDIA_LIST_EMPTY_STRING"
      },
      {
        "name": "JS_MENU_TYPE_EMPTY"
      },
      {
        "name": "JS_MENU_TYPE_PASS"
      },
      {
        "name": "JS_NATIVE_FUNCTION_TOSTRING_COMPACT"
      },
      {
        "name": "JS_NATIVE_FUNCTION_TOSTRING_NEW_LINE"
      },
      {
        "name": "JS_NATIVE_FUNCTION_TOSTRING_NL"
      },
      {
        "name": "JS_NAVIGATOR_DO_NOT_TRACK_UNSPECIFIED"
      },
      {
        "name": "JS_NODE_CONTAINS_RETURNS_FALSE_FOR_INVALID_ARG"
      },
      {
        "name": "JS_NODE_INSERT_BEFORE_REF_OPTIONAL"
      },
      {
        "name": "JS_OBJECT_GET_OWN_PROPERTY_SYMBOLS"
      },
      {
        "name": "JS_OFFSET_PARENT_NULL_IF_FIXED"
      },
      {
        "name": "JS_OUTER_HTML_NULL_AS_STRING"
      },
      {
        "name": "JS_OUTER_HTML_REMOVES_CHILDREN_FOR_DETACHED"
      },
      {
        "name": "JS_OUTER_HTML_THROWS_FOR_DETACHED"
      },
      {
        "name": "JS_PAGERULE_SELECTORTEXT_EMPTY"
      },
      {
        "name": "JS_PHRASE_COMMON_CLASS_NAME"
      },
      {
        "name": "JS_POP_STATE_EVENT_CLONE_STATE"
      },
      {
        "name": "JS_PRE_WIDTH_STRING"
      },
      {
        "name": "JS_PROMISE"
      },
      {
        "name": "JS_PROPERTY_DESCRIPTOR_NAME"
      },
      {
        "name": "JS_PROPERTY_DESCRIPTOR_NEW_LINE"
      },
      {
        "name": "JS_REFLECT"
      },
      {
        "name": "JS_REGEXP_EMPTY_LASTPAREN_IF_TOO_MANY_GROUPS"
      },
      {
        "name": "JS_REGEXP_GROUP0_RETURNS_WHOLE_MATCH"
      },
      {
        "name": "JS_SCRIPT_HANDLE_204_AS_ERROR"
      },
      {
        "name": "JS_SCRIPT_SUPPORTS_FOR_AND_EVENT_WINDOW"
      },
      {
        "name": "JS_SELECTOR_TEXT_LOWERCASE"
      },
      {
        "name": "JS_SELECT_FILE_THROWS"
      },
      {
        "name": "JS_SELECT_OPTIONS_HAS_SELECT_CLASS_NAME"
      },
      {
        "name": "JS_SELECT_OPTIONS_IGNORE_NEGATIVE_LENGTH"
      },
      {
        "name": "JS_SELECT_OPTIONS_IN_ALWAYS_TRUE"
      },
      {
        "name": "JS_SELECT_OPTIONS_NULL_FOR_OUTSIDE"
      },
      {
        "name": "JS_SELECT_OPTIONS_REMOVE_IGNORE_IF_INDEX_NEGATIVE"
      },
      {
        "name": "JS_SELECT_OPTIONS_REMOVE_THROWS_IF_NEGATIV"
      },
      {
        "name": "JS_SELECT_REMOVE_IGNORE_IF_INDEX_OUTSIDE"
      },
      {
        "name": "JS_SELECT_SET_VALUES_CHECKS_ONLY_VALUE_ATTRIBUTE"
      },
      {
        "name": "JS_STORAGE_GET_FROM_ITEMS"
      },
      {
        "name": "JS_STORAGE_PRESERVED_INCLUDED"
      },
      {
        "name": "JS_STYLESHEETLIST_ACTIVE_ONLY"
      },
      {
        "name": "JS_STYLE_UNSUPPORTED_PROPERTY_GETTER"
      },
      {
        "name": "JS_STYLE_WORD_SPACING_ACCEPTS_PERCENT"
      },
      {
        "name": "JS_STYLE_WRONG_INDEX_RETURNS_UNDEFINED"
      },
      {
        "name": "JS_SYMBOL"
      },
      {
        "name": "JS_TABLE_CELL_HEIGHT_DOES_NOT_RETURN_NEGATIVE_VALUES"
      },
      {
        "name": "JS_TABLE_CELL_OFFSET_INCLUDES_BORDER"
      },
      {
        "name": "JS_TABLE_CELL_WIDTH_DOES_NOT_RETURN_NEGATIVE_VALUES"
      },
      {
        "name": "JS_TABLE_COLUMN_WIDTH_NO_NEGATIVE_VALUES"
      },
      {
        "name": "JS_TABLE_COLUMN_WIDTH_NULL_STRING"
      },
      {
        "name": "JS_TABLE_ROW_DELETE_CELL_REQUIRES_INDEX"
      },
      {
        "name": "JS_TABLE_SPAN_SET_ZERO_IF_INVALID"
      },
      {
        "name": "JS_TABLE_SPAN_THROWS_EXCEPTION_IF_INVALID"
      },
      {
        "name": "JS_TABLE_VALIGN_SUPPORTS_IE_VALUES"
      },
      {
        "name": "JS_TEXT_AREA_GET_MAXLENGTH_MAX_INT"
      },
      {
        "name": "JS_TEXT_AREA_SET_COLS_NEGATIVE_THROWS_EXCEPTION"
      },
      {
        "name": "JS_TEXT_AREA_SET_COLS_THROWS_EXCEPTION"
      },
      {
        "name": "JS_TEXT_AREA_SET_MAXLENGTH_NEGATIVE_THROWS_EXCEPTION"
      },
      {
        "name": "JS_TEXT_AREA_SET_ROWS_NEGATIVE_THROWS_EXCEPTION"
      },
      {
        "name": "JS_TEXT_AREA_SET_ROWS_THROWS_EXCEPTION"
      },
      {
        "name": "JS_TEXT_AREA_SET_VALUE_NULL"
      },
      {
        "name": "JS_TREEWALKER_EXPAND_ENTITY_REFERENCES_FALSE"
      },
      {
        "name": "JS_TREEWALKER_FILTER_FUNCTION_ONLY"
      },
      {
        "name": "JS_TYPE_ACCEPTS_ARBITRARY_VALUES"
      },
      {
        "name": "JS_URL_SEARCH_PARMS_ITERATOR_SIMPLE_NAME"
      },
      {
        "name": "JS_VALIGN_CONVERTS_TO_LOWERCASE"
      },
      {
        "name": "JS_WEBGL_CONTEXT_EVENT_CONSTANTS"
      },
      {
        "name": "JS_WIDTH_HEIGHT_ACCEPTS_ARBITRARY_VALUES"
      },
      {
        "name": "JS_WINDOW_ACTIVEXOBJECT_HIDDEN"
      },
      {
        "name": "JS_WINDOW_CHANGE_OPENER_ONLY_WINDOW_OBJECT"
      },
      {
        "name": "JS_WINDOW_COMPUTED_STYLE_PSEUDO_ACCEPT_WITHOUT_COLON"
      },
      {
        "name": "JS_WINDOW_FORMFIELDS_ACCESSIBLE_BY_NAME"
      },
      {
        "name": "JS_WINDOW_FRAMES_ACCESSIBLE_BY_ID"
      },
      {
        "name": "JS_WINDOW_FRAME_BY_ID_RETURNS_WINDOW"
      },
      {
        "name": "JS_WINDOW_INSTALL_TRIGGER_NULL"
      },
      {
        "name": "JS_WINDOW_OUTER_INNER_HEIGHT_DIFF_131"
      },
      {
        "name": "JS_WINDOW_OUTER_INNER_HEIGHT_DIFF_133"
      },
      {
        "name": "JS_WINDOW_OUTER_INNER_HEIGHT_DIFF_86"
      },
      {
        "name": "JS_WINDOW_OUTER_INNER_HEIGHT_DIFF_91"
      },
      {
        "name": "JS_WINDOW_SELECTION_NULL_IF_INVISIBLE"
      },
      {
        "name": "JS_WINDOW_TOP_WRITABLE"
      },
      {
        "name": "JS_WORKER_IMPORT_SCRIPTS_ACCEPTS_ALL"
      },
      {
        "name": "JS_XML"
      },
      {
        "name": "JS_XML_GET_ELEMENTS_BY_TAG_NAME_LOCAL"
      },
      {
        "name": "JS_XML_GET_ELEMENT_BY_ID__ANY_ELEMENT"
      },
      {
        "name": "JS_XML_SERIALIZER_BLANK_BEFORE_SELF_CLOSING"
      },
      {
        "name": "JS_XML_SERIALIZER_HTML_DOCUMENT_FRAGMENT_ALWAYS_EMPTY"
      },
      {
        "name": "JS_XML_SERIALIZER_ROOT_CDATA_AS_ESCAPED_TEXT"
      },
      {
        "name": "JS_XML_SUPPORT_VIA_ACTIVEXOBJECT"
      },
      {
        "name": "JS_XSLT_TRANSFORM_INDENT"
      },
      {
        "name": "KEYBOARD_EVENT_SPECIAL_KEYPRESS"
      },
      {
        "name": "KEYGEN_AS_BLOCK"
      },
      {
        "name": "META_X_UA_COMPATIBLE"
      },
      {
        "name": "MULTICOL_BLOCK"
      },
      {
        "name": "PAGE_SELECTION_RANGE_FROM_SELECTABLE_TEXT_INPUT"
      },
      {
        "name": "QUERYSELECTORALL_NOT_IN_QUIRKS"
      },
      {
        "name": "QUERYSELECTOR_CSS3_PSEUDO_REQUIRE_ATTACHED_NODE"
      },
      {
        "name": "RESETINPUT_DEFAULT_VALUE_IF_VALUE_NOT_DEFINED"
      },
      {
        "name": "SLOT_CONTENTS"
      },
      {
        "name": "STRING_INCLUDES"
      },
      {
        "name": "STRING_REPEAT"
      },
      {
        "name": "STRING_STARTS_ENDS_WITH"
      },
      {
        "name": "STRING_TRIM_LEFT_RIGHT"
      },
      {
        "name": "STYLESHEET_ADD_RULE_RETURNS_POS"
      },
      {
        "name": "STYLESHEET_HREF_EMPTY_IS_NULL"
      },
      {
        "name": "SUBMITINPUT_DEFAULT_VALUE_IF_VALUE_NOT_DEFINED"
      },
      {
        "name": "SVG_UNKNOWN_ARE_DOM"
      },
      {
        "name": "URL_ABOUT_BLANK_HAS_BLANK_PATH"
      },
      {
        "name": "URL_AUTH_CREDENTIALS"
      },
      {
        "name": "URL_MINIMAL_QUERY_ENCODING"
      },
      {
        "name": "URL_MISSING_SLASHES"
      },
      {
        "name": "WEBSOCKET_ORIGIN_SET"
      },
      {
        "name": "WINDOW_EXECUTE_EVENTS"
      },
      {
        "name": "XHR_ALL_RESPONSE_HEADERS_APPEND_SEPARATOR"
      },
      {
        "name": "XHR_ALL_RESPONSE_HEADERS_SEPARATE_BY_LF"
      },
      {
        "name": "XHR_FIRE_STATE_OPENED_AGAIN_IN_ASYNC_MODE"
      },
      {
        "name": "XHR_HANDLE_SYNC_NETWORK_ERRORS"
      },
      {
        "name": "XHR_LENGTH_COMPUTABLE"
      },
      {
        "name": "XHR_LOAD_ALWAYS_AFTER_DONE"
      },
      {
        "name": "XHR_LOAD_START_ASYNC"
      },
      {
        "name": "XHR_NO_CROSS_ORIGIN_TO_ABOUT"
      },
      {
        "name": "XHR_OPEN_ALLOW_EMTPY_URL"
      },
      {
        "name": "XHR_PROGRESS_ON_NETWORK_ERROR_ASYNC"
      },
      {
        "name": "XHR_RESPONSE_TEXT_EMPTY_UNSENT"
      },
      {
        "name": "XHR_RESPONSE_TYPE_THROWS_UNSENT"
      },
      {
        "name": "XHR_SEND_IGNORES_BLOB_MIMETYPE_AS_CONTENTTYPE"
      },
      {
        "name": "XHR_SEND_NETWORK_ERROR_IF_ABORTED"
      },
      {
        "name": "XHR_USE_CONTENT_CHARSET"
      },
      {
        "name": "XPATH_SELECTION_NAMESPACES"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.BrowserVersionFeatures"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgAltGlyph",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgAltGlyph"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgAltGlyphDef",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgAltGlyphDef"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgAltGlyphItem",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgAltGlyphItem"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgAnchor",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgAnchor"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgAnimate",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgAnimate"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgAnimateColor",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgAnimateColor"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgAnimateMotion",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgAnimateMotion"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgAnimateTransform",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgAnimateTransform"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgCircle",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgCircle"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgClipPath",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgClipPath"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgColorProfile",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgColorProfile"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgCursor",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgCursor"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgDefs",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgDefs"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgDesc",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgDesc"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgEllipse",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgEllipse"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeBlend",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeBlend"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeColorMatrix",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeColorMatrix"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeComponentTransfer",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeComponentTransfer"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeComposite",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeComposite"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeConvolveMatrix",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeConvolveMatrix"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeDiffuseLighting",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeDiffuseLighting"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeDisplacementMap",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeDisplacementMap"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeDistantLight",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeDistantLight"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeFlood",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeFlood"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeFuncA",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeFuncA"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeFuncB",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeFuncB"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeFuncG",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeFuncG"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeFuncR",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeFuncR"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeGaussianBlur",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeGaussianBlur"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeImage",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeImage"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeMerge",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeMerge"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeMergeNode",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeMergeNode"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeMorphology",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeMorphology"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeOffset",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeOffset"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFePointLight",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFePointLight"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeSpecularLighting",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeSpecularLighting"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeSpotLight",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeSpotLight"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeTile",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeTile"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeTurbulence",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFeTurbulence"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFilter",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFilter"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFont",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFont"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFontFace",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFontFace"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFontFaceFormat",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFontFaceFormat"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFontFaceName",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFontFaceName"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFontFaceSrc",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFontFaceSrc"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFontFaceURI",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgFontFaceURI"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgForeignObject",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgForeignObject"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgGlyph",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgGlyph"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgGlyphRef",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgGlyphRef"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgGroup",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgGroup"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgHKern",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgHKern"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgImage",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgImage"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgLine",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgLine"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgLinearGradient",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgLinearGradient"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgMPath",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgMPath"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgMarker",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgMarker"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgMask",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgMask"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgMetadata",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgMetadata"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgMissingGlyph",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgMissingGlyph"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgPath",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgPath"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgPattern",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgPattern"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgPolygon",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgPolygon"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgPolyline",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgPolyline"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgRadialGradient",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgRadialGradient"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgRect",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgRect"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgScript",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgScript"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgSet",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgSet"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgStop",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgStop"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgStyle",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgStyle"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgSwitch",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgSwitch"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgSymbol",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgSymbol"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgTRef",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgTRef"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgTSpan",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgTSpan"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgText",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgText"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgTextPath",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgTextPath"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgTitle",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgTitle"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgUse",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgUse"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgVKern",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgVKern"
  },
  {
    "name": "com.gargoylesoftware.htmlunit.svg.SvgView",
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TAG_NAME"
      }
    ],
    "name": "com.gargoylesoftware.htmlunit.svg.SvgView"
  },
  {
    "name": "com.github.benmanes.caffeine.cache.Cache"
  },
  {
    "name": "com.github.benmanes.caffeine.cache.UnboundedLocalCache",
    "fields": [
      {
        "name": "refreshes"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "refreshes"
      }
    ],
    "name": "com.github.benmanes.caffeine.cache.UnboundedLocalCache"
  },
  {
    "name": "com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect"
  },
  {
    "name": "com.google.common.base.Optional"
  },
  {
    "name": "com.google.common.cache.ElementTypesAreNonnullByDefault",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.google.common.collect.Multimap"
  },
  {
    "name": "com.google.errorprone.annotations.CheckReturnValue",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "com.google.gson.Gson",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.google.gson.GsonBuilder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.hazelcast.core.Hazelcast"
  },
  {
    "name": "com.hazelcast.core.HazelcastInstance"
  },
  {
    "name": "com.hazelcast.spring.cache.HazelcastCache"
  },
  {
    "name": "com.ibm.icu.text.Collator"
  },
  {
    "name": "com.ibm.lang.management.OperatingSystemMXBean"
  },
  {
    "name": "com.ibm.websphere.wsoc$WsWsocServerContainer"
  },
  {
    "name": "com.ibm.websphere.wsoc.WsWsocServerContainer"
  },
  {
    "methods": [
      {
        "name": "premain",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.instrument.Instrumentation"
        ]
      }
    ],
    "name": "com.intellij.rt.execution.application.AppMainV2$Agent"
  },
  {
    "name": "com.mongodb.MongoClientSettings"
  },
  {
    "name": "com.mongodb.client.MongoClient"
  },
  {
    "name": "com.mongodb.reactivestreams.client.MongoClient"
  },
  {
    "name": "com.querydsl.core.types$Predicate"
  },
  {
    "name": "com.querydsl.core.types.Predicate"
  },
  {
    "name": "com.rabbitmq.client.Channel"
  },
  {
    "name": "com.rabbitmq.client.ConnectionFactory"
  },
  {
    "name": "com.rometools.rome.feed$WireFeed"
  },
  {
    "name": "com.rometools.rome.feed.WireFeed"
  },
  {
    "name": "com.samskivert.mustache$Template"
  },
  {
    "name": "com.samskivert.mustache.Mustache"
  },
  {
    "name": "com.samskivert.mustache.Template"
  },
  {
    "name": "com.sendgrid.SendGrid"
  },
  {
    "name": "com.sun.crypto.provider.AESCipher$General",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "com.sun.crypto.provider.AESCipher$General"
  },
  {
    "name": "com.sun.crypto.provider.ARCFOURCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "com.sun.crypto.provider.ARCFOURCipher"
  },
  {
    "name": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305"
  },
  {
    "name": "com.sun.crypto.provider.DESCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "com.sun.crypto.provider.DESCipher"
  },
  {
    "name": "com.sun.crypto.provider.DESedeCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "com.sun.crypto.provider.DESedeCipher"
  },
  {
    "name": "com.sun.crypto.provider.DHParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "com.sun.crypto.provider.DHParameters"
  },
  {
    "name": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "com.sun.crypto.provider.GaloisCounterMode$AESGCM"
  },
  {
    "name": "com.sun.crypto.provider.HmacCore$HmacSHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "com.sun.crypto.provider.HmacCore$HmacSHA384"
  },
  {
    "name": "com.sun.crypto.provider.PBKDF2Core$HmacSHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "com.sun.crypto.provider.PBKDF2Core$HmacSHA256"
  },
  {
    "name": "com.sun.crypto.provider.TlsKeyMaterialGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "com.sun.crypto.provider.TlsKeyMaterialGenerator"
  },
  {
    "name": "com.sun.crypto.provider.TlsMasterSecretGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "com.sun.crypto.provider.TlsMasterSecretGenerator"
  },
  {
    "name": "com.sun.crypto.provider.TlsPrfGenerator$V12",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "com.sun.crypto.provider.TlsPrfGenerator$V12"
  },
  {
    "name": "com.sun.management.GarbageCollectionNotificationInfo"
  },
  {
    "name": "com.sun.management.GarbageCollectorMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.GcInfo",
    "queryAllPublicMethods": true,
    "fields": [
      {
        "name": "builder"
      },
      {
        "name": "extAttributes"
      }
    ],
    "methods": [
      {
        "name": "getMemoryUsageBeforeGc",
        "parameterTypes": []
      }
    ]
  },
  {
    "fields": [
      {
        "name": "builder"
      },
      {
        "name": "extAttributes"
      }
    ],
    "methods": [
      {
        "name": "getMemoryUsageBeforeGc",
        "parameterTypes": []
      }
    ],
    "name": "com.sun.management.GcInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.HotSpotDiagnosticMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.OperatingSystemMXBean",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getCpuLoad",
        "parameterTypes": []
      },
      {
        "name": "getProcessCpuLoad",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getCpuLoad",
        "parameterTypes": []
      },
      {
        "name": "getProcessCpuLoad",
        "parameterTypes": []
      },
      {
        "name": "getProcessCpuTime",
        "parameterTypes": []
      }
    ],
    "name": "com.sun.management.OperatingSystemMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.ThreadMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.UnixOperatingSystemMXBean"
  },
  {
    "name": "com.sun.management.VMOption",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.internal.GarbageCollectorExtImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.HotSpotDiagnostic",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.HotSpotThreadImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.OperatingSystemImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl"
  },
  {
    "name": "com.unboundid.ldap.listener.InMemoryDirectoryServer"
  },
  {
    "name": "com.wavefront.sdk.common.WavefrontSender"
  },
  {
    "name": "com.wavefront.sdk.common.application.ApplicationTags"
  },
  {
    "name": "com.zaxxer.hikari.HikariConfig",
    "methods": [
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": []
      },
      {
        "name": "setAutoCommit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getKeepaliveTime",
        "parameterTypes": []
      },
      {
        "name": "getLeakDetectionThreshold",
        "parameterTypes": []
      },
      {
        "name": "getTransactionIsolation",
        "parameterTypes": []
      },
      {
        "name": "setCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAutoCommit",
        "parameterTypes": []
      },
      {
        "name": "setInitializationFailTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setDataSourceJNDI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMetricsTrackerFactory",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getMaximumPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "getMinimumIdle",
        "parameterTypes": []
      },
      {
        "name": "setConnectionInitSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isIsolateInternalQueries",
        "parameterTypes": []
      },
      {
        "name": "setDataSourceProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "getHealthCheckProperties",
        "parameterTypes": []
      },
      {
        "name": "setHealthCheckProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "setValidationTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getDataSourceJNDI",
        "parameterTypes": []
      },
      {
        "name": "setAllowPoolSuspension",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPoolName",
        "parameterTypes": []
      },
      {
        "name": "getThreadFactory",
        "parameterTypes": []
      },
      {
        "name": "getValidationTimeout",
        "parameterTypes": []
      },
      {
        "name": "setKeepaliveTime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setConnectionTestQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExceptionOverrideClassName",
        "parameterTypes": []
      },
      {
        "name": "getCatalog",
        "parameterTypes": []
      },
      {
        "name": "isRegisterMbeans",
        "parameterTypes": []
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setScheduledExecutor",
        "parameterTypes": [
          "java.util.concurrent.ScheduledExecutorService"
        ]
      },
      {
        "name": "setIsolateInternalQueries",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLeakDetectionThreshold",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "setMinimumIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getMetricRegistry",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTestQuery",
        "parameterTypes": []
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "setTransactionIsolation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRegisterMbeans",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExceptionOverrideClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getHealthCheckRegistry",
        "parameterTypes": []
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getInitializationFailTimeout",
        "parameterTypes": []
      },
      {
        "name": "getScheduledExecutor",
        "parameterTypes": []
      },
      {
        "name": "isAllowPoolSuspension",
        "parameterTypes": []
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": []
      },
      {
        "name": "setPoolName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDataSourceProperties",
        "parameterTypes": []
      },
      {
        "name": "getConnectionInitSql",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariConfigMXBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.zaxxer.hikari.pool.HikariProxyConnection",
    "methods": [
      {
        "name": "getSchema",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getSchema",
        "parameterTypes": []
      }
    ],
    "name": "com.zaxxer.hikari.pool.HikariProxyConnection"
  },
  {
    "fields": [
      {
        "name": "catalog"
      }
    ],
    "name": "com.zaxxer.hikari.pool.PoolBase"
  },
  {
    "fields": [
      {
        "name": "state"
      }
    ],
    "name": "com.zaxxer.hikari.pool.PoolEntry"
  },
  {
    "name": "float",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "freemarker.template$Configuration"
  },
  {
    "name": "freemarker.template.Configuration"
  },
  {
    "name": "graphql.GraphQL"
  },
  {
    "name": "groovy.lang$MetaClass"
  },
  {
    "name": "groovy.lang.MetaClass"
  },
  {
    "name": "groovy.text$TemplateEngine"
  },
  {
    "name": "groovy.text.TemplateEngine"
  },
  {
    "name": "groovy.text.markup.MarkupTemplateEngine"
  },
  {
    "name": "io.lettuce.core.metrics.MicrometerCommandLatencyRecorder"
  },
  {
    "name": "io.micrometer.appoptics.AppOpticsMeterRegistry"
  },
  {
    "name": "io.micrometer.atlas.AtlasMeterRegistry"
  },
  {
    "name": "io.micrometer.common.lang.NonNullApi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.common.lang.NonNullFields",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.common.lang.Nullable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.context$ContextSnapshot"
  },
  {
    "name": "io.micrometer.context.ContextSnapshot"
  },
  {
    "name": "io.micrometer.core.annotation.Timed"
  },
  {
    "name": "io.micrometer.core.instrument.Clock",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "monotonicTime",
        "parameterTypes": []
      },
      {
        "name": "wallTime",
        "parameterTypes": []
      }
    ],
    "name": "io.micrometer.core.instrument.Clock$1",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.MeterRegistry",
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "config",
        "parameterTypes": []
      },
      {
        "name": "counter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "counter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "forEachMeter",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.lang.Number"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.lang.Object",
          "java.util.function.ToDoubleFunction"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Number"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.util.function.ToDoubleFunction"
        ]
      },
      {
        "name": "gaugeCollectionSize",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.util.Collection"
        ]
      },
      {
        "name": "gaugeMapSize",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.util.Map"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMeters",
        "parameterTypes": []
      },
      {
        "name": "isClosed",
        "parameterTypes": []
      },
      {
        "name": "more",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter"
        ]
      },
      {
        "name": "removeByPreFilterId",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "summary",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "summary",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "timer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "timer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      }
    ],
    "name": "io.micrometer.core.instrument.MeterRegistry",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.MeterBinder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jersey.server.MetricsApplicationEventListener"
  },
  {
    "name": "io.micrometer.core.instrument.binder.jetty.JettyServerThreadPoolMetrics"
  },
  {
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ],
    "name": "io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics"
  },
  {
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ],
    "name": "io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      }
    ],
    "name": "io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      }
    ],
    "name": "io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ],
    "name": "io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ],
    "name": "io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ],
    "name": "io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics"
  },
  {
    "name": "io.micrometer.core.instrument.binder.logging.Log4j2Metrics"
  },
  {
    "name": "io.micrometer.core.instrument.binder.logging.LogbackMetrics",
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      }
    ],
    "name": "io.micrometer.core.instrument.binder.logging.LogbackMetrics",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ],
    "name": "io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ],
    "name": "io.micrometer.core.instrument.binder.system.ProcessorMetrics",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ],
    "name": "io.micrometer.core.instrument.binder.system.UptimeMetrics",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.tomcat.TomcatMetrics"
  },
  {
    "name": "io.micrometer.core.instrument.composite.CompositeMeterRegistry"
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "map",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "map",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      }
    ],
    "name": "io.micrometer.core.instrument.config.MeterFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "accept",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id",
          "io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
        ]
      }
    ],
    "name": "io.micrometer.core.instrument.config.MeterFilter$9",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterRegistryConfig",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "requireValid",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "requireValid",
        "parameterTypes": []
      }
    ],
    "name": "io.micrometer.core.instrument.config.MeterRegistryConfig",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "fields": [
      {
        "name": "rotating"
      }
    ],
    "name": "io.micrometer.core.instrument.distribution.TimeWindowMax"
  },
  {
    "fields": [
      {
        "name": "rotating"
      }
    ],
    "name": "io.micrometer.core.instrument.distribution.TimeWindowSum"
  },
  {
    "methods": [
      {
        "name": "onEvent",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Event",
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onStart",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onStop",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      }
    ],
    "name": "io.micrometer.core.instrument.observation.DefaultMeterObservationHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.observation.MeterObservationHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "supportsContext",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "supportsContext",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      }
    ],
    "name": "io.micrometer.core.instrument.observation.MeterObservationHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.simple.SimpleConfig",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "validate",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "validate",
        "parameterTypes": []
      }
    ],
    "name": "io.micrometer.core.instrument.simple.SimpleConfig",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.simple.SimpleMeterRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.datadog.DatadogMeterRegistry"
  },
  {
    "name": "io.micrometer.dynatrace.DynatraceMeterRegistry"
  },
  {
    "name": "io.micrometer.elastic.ElasticMeterRegistry"
  },
  {
    "name": "io.micrometer.ganglia.GangliaMeterRegistry"
  },
  {
    "name": "io.micrometer.graphite.GraphiteMeterRegistry"
  },
  {
    "name": "io.micrometer.humio.HumioMeterRegistry"
  },
  {
    "name": "io.micrometer.influx.InfluxMeterRegistry"
  },
  {
    "name": "io.micrometer.jmx.JmxMeterRegistry"
  },
  {
    "name": "io.micrometer.kairos.KairosMeterRegistry"
  },
  {
    "name": "io.micrometer.newrelic.NewRelicMeterRegistry"
  },
  {
    "name": "io.micrometer.observation.Observation"
  },
  {
    "name": "io.micrometer.observation.ObservationFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "onError",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onScopeClosed",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onScopeOpened",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "onError",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onScopeClosed",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onScopeOpened",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onScopeReset",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      }
    ],
    "name": "io.micrometer.observation.ObservationHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationPredicate",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getCurrentObservation",
        "parameterTypes": []
      },
      {
        "name": "getCurrentObservationScope",
        "parameterTypes": []
      },
      {
        "name": "isNoop",
        "parameterTypes": []
      },
      {
        "name": "observationConfig",
        "parameterTypes": []
      },
      {
        "name": "setCurrentObservationScope",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Scope"
        ]
      }
    ],
    "name": "io.micrometer.observation.SimpleObservationRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.aop.ObservedAspect",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.prometheus.PrometheusMeterRegistry"
  },
  {
    "name": "io.micrometer.registry.otlp.OtlpMeterRegistry"
  },
  {
    "name": "io.micrometer.signalfx.SignalFxMeterRegistry"
  },
  {
    "name": "io.micrometer.stackdriver.StackdriverMeterRegistry"
  },
  {
    "name": "io.micrometer.statsd.StatsdMeterRegistry"
  },
  {
    "name": "io.micrometer.tracing.Tracer"
  },
  {
    "name": "io.micrometer.tracing.otel.bridge.OtelTracer"
  },
  {
    "name": "io.netty.buffer.PooledByteBufAllocator"
  },
  {
    "name": "io.netty.util.NettyRuntime"
  },
  {
    "name": "io.r2dbc.pool.ConnectionPool"
  },
  {
    "name": "io.r2dbc.spi.ConnectionFactory"
  },
  {
    "name": "io.reactivex.rxjava3.core$Flowable"
  },
  {
    "name": "io.reactivex.rxjava3.core.Flowable"
  },
  {
    "name": "io.rsocket.RSocket"
  },
  {
    "name": "io.rsocket.core.RSocketServer"
  },
  {
    "name": "io.smallrye.mutiny$Multi"
  },
  {
    "name": "io.smallrye.mutiny.Multi"
  },
  {
    "name": "io.undertow.Undertow"
  },
  {
    "name": "io.undertow.websockets.jsr$ServerWebSocketContainer"
  },
  {
    "name": "io.undertow.websockets.jsr.Bootstrap"
  },
  {
    "name": "io.undertow.websockets.jsr.ServerWebSocketContainer"
  },
  {
    "name": "io.vavr.control$Option"
  },
  {
    "name": "io.vavr.control$Try"
  },
  {
    "name": "io.vavr.control.Option"
  },
  {
    "name": "io.vavr.control.Try"
  },
  {
    "name": "jakarta.activation.MimeType"
  },
  {
    "name": "jakarta.annotation.ManagedBean"
  },
  {
    "name": "jakarta.annotation.PostConstruct",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.annotation.PreDestroy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.ejb$Asynchronous"
  },
  {
    "name": "jakarta.ejb$EJB"
  },
  {
    "name": "jakarta.ejb$TransactionAttribute"
  },
  {
    "name": "jakarta.ejb.Asynchronous"
  },
  {
    "name": "jakarta.ejb.EJB"
  },
  {
    "name": "jakarta.ejb.TransactionAttribute"
  },
  {
    "name": "jakarta.enterprise.concurrent$Asynchronous"
  },
  {
    "name": "jakarta.enterprise.concurrent$ManagedExecutorService"
  },
  {
    "name": "jakarta.enterprise.concurrent$ManagedScheduledExecutorService"
  },
  {
    "name": "jakarta.enterprise.concurrent.Asynchronous"
  },
  {
    "name": "jakarta.enterprise.concurrent.ManagedExecutorService"
  },
  {
    "name": "jakarta.enterprise.concurrent.ManagedScheduledExecutorService"
  },
  {
    "name": "jakarta.faces.context$FacesContext"
  },
  {
    "name": "jakarta.faces.context.FacesContext"
  },
  {
    "name": "jakarta.inject.Inject"
  },
  {
    "name": "jakarta.inject.Inject"
  },
  {
    "name": "jakarta.inject.Named"
  },
  {
    "name": "jakarta.inject.Provider"
  },
  {
    "name": "jakarta.inject.Qualifier"
  },
  {
    "name": "jakarta.inject.Qualifier"
  },
  {
    "name": "jakarta.jms.ConnectionFactory"
  },
  {
    "name": "jakarta.jms.Message"
  },
  {
    "name": "jakarta.json.bind$Jsonb"
  },
  {
    "name": "jakarta.json.bind.Jsonb"
  },
  {
    "name": "jakarta.mail.internet.MimeMessage"
  },
  {
    "name": "jakarta.persistence.AttributeConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.persistence.Column",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "updatable",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "jakarta.persistence.Column",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.Convert",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "jakarta.persistence.Convert",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.Converter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.Entity",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "jakarta.persistence.Entity",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.EntityManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNamedStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaDelete"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaQuery"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaUpdate"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "detach",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object",
          "jakarta.persistence.LockModeType"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object",
          "jakarta.persistence.LockModeType",
          "java.util.Map"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      },
      {
        "name": "getDelegate",
        "parameterTypes": []
      },
      {
        "name": "getEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityGraphs",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getEntityManagerFactory",
        "parameterTypes": []
      },
      {
        "name": "getFlushMode",
        "parameterTypes": []
      },
      {
        "name": "getLockMode",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getMetamodel",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getReference",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "getTransaction",
        "parameterTypes": []
      },
      {
        "name": "isJoinedToTransaction",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": []
      },
      {
        "name": "joinTransaction",
        "parameterTypes": []
      },
      {
        "name": "lock",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType"
        ]
      },
      {
        "name": "lock",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType",
          "java.util.Map"
        ]
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "persist",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType",
          "java.util.Map"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setFlushMode",
        "parameterTypes": [
          "jakarta.persistence.FlushModeType"
        ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy164"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNamedStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaDelete"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaQuery"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaUpdate"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "detach",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object",
          "jakarta.persistence.LockModeType"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object",
          "jakarta.persistence.LockModeType",
          "java.util.Map"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy164"
        ]
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      },
      {
        "name": "getDelegate",
        "parameterTypes": []
      },
      {
        "name": "getEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityGraphs",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getEntityManagerFactory",
        "parameterTypes": []
      },
      {
        "name": "getFlushMode",
        "parameterTypes": []
      },
      {
        "name": "getLockMode",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getMetamodel",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getReference",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "getTransaction",
        "parameterTypes": []
      },
      {
        "name": "isJoinedToTransaction",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": []
      },
      {
        "name": "joinTransaction",
        "parameterTypes": []
      },
      {
        "name": "lock",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType"
        ]
      },
      {
        "name": "lock",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType",
          "java.util.Map"
        ]
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy164"
        ]
      },
      {
        "name": "persist",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType",
          "java.util.Map"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setFlushMode",
        "parameterTypes": [
          "jakarta.persistence.FlushModeType"
        ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy164"
        ]
      }
    ],
    "name": "jakarta.persistence.EntityManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.persistence.EntityManagerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addNamedEntityGraph",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.persistence.EntityGraph"
        ]
      },
      {
        "name": "addNamedQuery",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.persistence.Query"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": []
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "jakarta.persistence.SynchronizationType"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "jakarta.persistence.SynchronizationType",
          "java.util.Map"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      },
      {
        "name": "getMetamodel",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitUtil",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": []
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy161"
        ]
      },
      {
        "name": "addNamedEntityGraph",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.persistence.EntityGraph"
        ]
      },
      {
        "name": "addNamedQuery",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.persistence.Query"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": []
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "jakarta.persistence.SynchronizationType"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "jakarta.persistence.SynchronizationType",
          "java.util.Map"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy161"
        ]
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      },
      {
        "name": "getMetamodel",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitUtil",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy161"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy161"
        ]
      }
    ],
    "name": "jakarta.persistence.EntityManagerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.persistence.Enumerated",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "jakarta.persistence.Enumerated",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.ForeignKey",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.GeneratedValue",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "jakarta.persistence.GeneratedValue",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.Id",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "jakarta.persistence.Id",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.Index",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.JoinColumn",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.ManyToOne",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "optional",
        "parameterTypes": []
      },
      {
        "name": "targetEntity",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "jakarta.persistence.ManyToOne",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.OneToMany",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "targetEntity",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "jakarta.persistence.OneToMany",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.OneToOne",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "mappedBy",
        "parameterTypes": []
      },
      {
        "name": "targetEntity",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "jakarta.persistence.OneToOne",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.Persistence",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUtil",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUtil",
        "parameterTypes": []
      }
    ],
    "name": "jakarta.persistence.Persistence"
  },
  {
    "name": "jakarta.persistence.PersistenceContext",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.PersistenceProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.Query",
    "methods": [
      {
        "name": "getParameters",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getParameters",
        "parameterTypes": []
      }
    ],
    "name": "jakarta.persistence.Query"
  },
  {
    "name": "jakarta.persistence.SequenceGenerator",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "jakarta.persistence.SequenceGenerator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.Table",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "jakarta.persistence.Table",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.Transient",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.UniqueConstraint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.Filter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x000001c54ddbb1f0"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x000001c54ddbb1f0"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x000001c54ddbb1f0"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x000001c54ddbb1f0"
        ]
      }
    ],
    "name": "jakarta.servlet.Filter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.servlet.GenericFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getInitParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInitParameterNames",
        "parameterTypes": []
      },
      {
        "name": "getServletConfig",
        "parameterTypes": []
      },
      {
        "name": "getServletContext",
        "parameterTypes": []
      },
      {
        "name": "getServletInfo",
        "parameterTypes": []
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      }
    ],
    "name": "jakarta.servlet.GenericServlet",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.MultipartConfigElement",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.servlet.Servlet"
  },
  {
    "name": "jakarta.servlet.Servlet",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.servlet.ServletConfig",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.servlet.ServletContext",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.servlet.ServletRegistration"
  },
  {
    "name": "jakarta.servlet.ServletRequest"
  },
  {
    "methods": [
      {
        "name": "init",
        "parameterTypes": [
          "jakarta.servlet.ServletConfig"
        ]
      },
      {
        "name": "service",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse"
        ]
      }
    ],
    "name": "jakarta.servlet.http.HttpServlet",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.http.PushBuilder"
  },
  {
    "name": "jakarta.servlet.jsp.jstl.core.Config"
  },
  {
    "name": "jakarta.transaction.Transaction"
  },
  {
    "name": "jakarta.transaction.TransactionManager"
  },
  {
    "name": "jakarta.transaction.Transactional"
  },
  {
    "name": "jakarta.validation.Constraint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.validation.ConstraintViolation"
  },
  {
    "name": "jakarta.validation.Validator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.validation.ValidatorFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.validation.bootstrap.GenericBootstrap"
  },
  {
    "name": "jakarta.validation.constraints.NotEmpty",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "groups",
        "parameterTypes": []
      },
      {
        "name": "message",
        "parameterTypes": []
      },
      {
        "name": "payload",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.validation.constraints.NotNull",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "groups",
        "parameterTypes": []
      },
      {
        "name": "message",
        "parameterTypes": []
      },
      {
        "name": "payload",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "groups",
        "parameterTypes": []
      },
      {
        "name": "message",
        "parameterTypes": []
      },
      {
        "name": "payload",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "jakarta.validation.constraints.NotNull",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.validation.executable.ExecutableValidator"
  },
  {
    "name": "jakarta.websocket.Endpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.websocket.server.ServerContainer"
  },
  {
    "name": "jakarta.xml.bind.Binder"
  },
  {
    "name": "jakarta.xml.bind.annotation.XmlAccessType"
  },
  {
    "name": "jakarta.xml.bind.annotation.XmlAccessorType",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.xml.bind.annotation.XmlAccessorType",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.xml.bind.annotation.XmlElement",
    "methods": [
      {
        "name": "type",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "type",
        "parameterTypes": []
      }
    ],
    "name": "jakarta.xml.bind.annotation.XmlElement"
  },
  {
    "name": "jakarta.xml.bind.annotation.XmlNs",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.xml.bind.annotation.XmlNsForm"
  },
  {
    "name": "jakarta.xml.bind.annotation.XmlRootElement",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.xml.bind.annotation.XmlSchema",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "jakarta.xml.bind.annotation.XmlSchema",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.xml.bind.annotation.XmlSeeAlso",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "jakarta.xml.bind.annotation.XmlSeeAlso",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.xml.bind.annotation.XmlType",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "factoryClass",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "factoryClass",
        "parameterTypes": []
      }
    ],
    "name": "jakarta.xml.bind.annotation.XmlType",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
    "methods": [
      {
        "name": "type",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "type",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter"
  },
  {
    "name": "jakarta.xml.ws.WebServiceRef"
  },
  {
    "name": "java.io.Closeable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.io.File"
  },
  {
    "name": "java.io.FilePermission"
  },
  {
    "name": "java.io.InputStream"
  },
  {
    "name": "java.io.Serializable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.io.Serializable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.AutoCloseable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.AutoCloseable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Boolean"
  },
  {
    "fields": [
      {
        "name": "TYPE"
      }
    ],
    "methods": [
      {
        "name": "toboolean",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.Boolean"
  },
  {
    "name": "java.lang.Boolean",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Byte",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TYPE"
      }
    ],
    "name": "java.lang.Byte"
  },
  {
    "name": "java.lang.Character",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TYPE"
      }
    ],
    "methods": [
      {
        "name": "tochar",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.Character"
  },
  {
    "name": "java.lang.Class"
  },
  {
    "name": "java.lang.Class",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAnnotatedInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getAnnotatedSuperclass",
        "parameterTypes": []
      },
      {
        "name": "getDeclaredMethod",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "getMethod",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "getModule",
        "parameterTypes": []
      },
      {
        "name": "getNestHost",
        "parameterTypes": []
      },
      {
        "name": "getNestMembers",
        "parameterTypes": []
      },
      {
        "name": "getPermittedSubclasses",
        "parameterTypes": []
      },
      {
        "name": "getRecordComponents",
        "parameterTypes": []
      },
      {
        "name": "isNestmateOf",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isRecord",
        "parameterTypes": []
      },
      {
        "name": "isSealed",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAnnotatedInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getAnnotatedSuperclass",
        "parameterTypes": []
      },
      {
        "name": "getModule",
        "parameterTypes": []
      },
      {
        "name": "getNestHost",
        "parameterTypes": []
      },
      {
        "name": "getNestMembers",
        "parameterTypes": []
      },
      {
        "name": "getPermittedSubclasses",
        "parameterTypes": []
      },
      {
        "name": "getRecordComponents",
        "parameterTypes": []
      },
      {
        "name": "isNestmateOf",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isRecord",
        "parameterTypes": []
      },
      {
        "name": "isSealed",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "java.lang.Class",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.ClassLoader",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "defineClass",
        "parameterTypes": [
          "java.lang.String",
          "byte[]",
          "int",
          "int",
          "java.security.ProtectionDomain"
        ]
      },
      {
        "name": "getUnnamedModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "fields": [
      {
        "name": "classLoaderValueMap"
      }
    ],
    "methods": [
      {
        "name": "defineClass",
        "parameterTypes": [
          "java.lang.String",
          "byte[]",
          "int",
          "int",
          "java.security.ProtectionDomain"
        ]
      },
      {
        "name": "getUnnamedModule",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.ClassLoader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Deprecated",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Double",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Double"
  },
  {
    "name": "java.lang.Float",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Float"
  },
  {
    "fields": [
      {
        "name": "TYPE"
      }
    ],
    "name": "java.lang.Float"
  },
  {
    "name": "java.lang.Integer",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Integer"
  },
  {
    "fields": [
      {
        "name": "TYPE"
      }
    ],
    "name": "java.lang.Integer"
  },
  {
    "name": "java.lang.Iterable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.Iterable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Long",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Long"
  },
  {
    "fields": [
      {
        "name": "TYPE"
      }
    ],
    "name": "java.lang.Long"
  },
  {
    "name": "java.lang.Module",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addExports",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Module"
        ]
      },
      {
        "name": "isExported",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isNamed",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "addExports",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Module"
        ]
      },
      {
        "name": "isExported",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isNamed",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.Module",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Record"
  },
  {
    "name": "java.lang.Runtime",
    "methods": [
      {
        "name": "version",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "version",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.Runtime"
  },
  {
    "name": "java.lang.Runtime$Version",
    "methods": [
      {
        "name": "major",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "major",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.Runtime$Version"
  },
  {
    "name": "java.lang.RuntimePermission"
  },
  {
    "name": "java.lang.Short",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "TYPE"
      }
    ],
    "name": "java.lang.Short"
  },
  {
    "name": "java.lang.StackTraceElement",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.String",
    "queryAllDeclaredMethods": true
  },
  {
    "fields": [
      {
        "name": "TYPE"
      }
    ],
    "name": "java.lang.String",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.String[]"
  },
  {
    "name": "java.lang.System",
    "methods": [
      {
        "name": "getSecurityManager",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getSecurityManager",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.System"
  },
  {
    "fields": [
      {
        "name": "threadLocalRandomProbe"
      }
    ],
    "methods": [
      {
        "name": "ofVirtual",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.Thread"
  },
  {
    "methods": [
      {
        "name": "name",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "start",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ],
    "name": "java.lang.Thread$Builder"
  },
  {
    "name": "java.lang.Void",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Void"
  },
  {
    "fields": [
      {
        "name": "TYPE"
      }
    ],
    "name": "java.lang.Void"
  },
  {
    "name": "java.lang.WrongThreadException"
  },
  {
    "name": "java.lang.annotation.Annotation",
    "methods": [
      {
        "name": "annotationType",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "annotationType",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.annotation.Annotation"
  },
  {
    "name": "java.lang.annotation.Documented",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Inherited",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Repeatable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Retention",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Target",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.constant.Constable",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.constant.Constable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.constant.ConstantDesc",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "privateLookupIn",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.invoke.MethodHandles$Lookup"
        ]
      }
    ],
    "name": "java.lang.invoke.MethodHandles"
  },
  {
    "name": "java.lang.invoke.MethodHandles",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "privateLookupIn",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.invoke.MethodHandles$Lookup"
        ]
      }
    ]
  },
  {
    "name": "java.lang.invoke.MethodHandles$Lookup",
    "methods": [
      {
        "name": "defineClass",
        "parameterTypes": [
          "byte[]"
        ]
      },
      {
        "name": "lookupClass",
        "parameterTypes": []
      },
      {
        "name": "lookupModes",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "defineClass",
        "parameterTypes": [
          "byte[]"
        ]
      },
      {
        "name": "lookupClass",
        "parameterTypes": []
      },
      {
        "name": "lookupModes",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.invoke.MethodHandles$Lookup"
  },
  {
    "name": "java.lang.invoke.TypeDescriptor$OfField",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.BufferPoolMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ClassLoadingMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.CompilationMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.LockInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ManagementFactory",
    "methods": [
      {
        "name": "getRuntimeMXBean",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getRuntimeMXBean",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.management.ManagementFactory"
  },
  {
    "name": "java.lang.management.ManagementPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "java.lang.management.ManagementPermission"
  },
  {
    "name": "java.lang.management.MemoryMXBean",
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getHeapMemoryUsage",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.management.MemoryMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryManagerMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryPoolMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryUsage",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "from",
        "parameterTypes": [
          "javax.management.openmbean.CompositeData"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "from",
        "parameterTypes": [
          "javax.management.openmbean.CompositeData"
        ]
      },
      {
        "name": "getCommitted",
        "parameterTypes": []
      },
      {
        "name": "getInit",
        "parameterTypes": []
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "getUsed",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.management.MemoryUsage",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MonitorInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.PlatformLoggingMXBean",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getLoggerLevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoggerNames",
        "parameterTypes": []
      },
      {
        "name": "getParentLoggerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoggerLevel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getLoggerLevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoggerNames",
        "parameterTypes": []
      },
      {
        "name": "getParentLoggerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoggerLevel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "java.lang.management.PlatformLoggingMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.RuntimeMXBean",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getInputArguments",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getInputArguments",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.management.RuntimeMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ThreadInfo"
  },
  {
    "name": "java.lang.management.ThreadInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.AnnotatedArrayType",
    "methods": [
      {
        "name": "getAnnotatedGenericComponentType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.AnnotatedElement",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.AnnotatedParameterizedType",
    "methods": [
      {
        "name": "getAnnotatedActualTypeArguments",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.AnnotatedType",
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.reflect.AnnotatedType"
  },
  {
    "name": "java.lang.reflect.Executable",
    "methods": [
      {
        "name": "getAnnotatedExceptionTypes",
        "parameterTypes": []
      },
      {
        "name": "getAnnotatedParameterTypes",
        "parameterTypes": []
      },
      {
        "name": "getAnnotatedReceiverType",
        "parameterTypes": []
      },
      {
        "name": "getParameterCount",
        "parameterTypes": []
      },
      {
        "name": "getParameters",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getAnnotatedParameterTypes",
        "parameterTypes": []
      },
      {
        "name": "getAnnotatedReceiverType",
        "parameterTypes": []
      },
      {
        "name": "getParameterCount",
        "parameterTypes": []
      },
      {
        "name": "getParameters",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.reflect.Executable"
  },
  {
    "methods": [
      {
        "name": "getGenericComponentType",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.reflect.GenericArrayType"
  },
  {
    "name": "java.lang.reflect.GenericDeclaration",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.Method",
    "methods": [
      {
        "name": "getAnnotatedReturnType",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getAnnotatedReturnType",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.reflect.Method"
  },
  {
    "name": "java.lang.reflect.Parameter",
    "methods": [
      {
        "name": "getModifiers",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isNamePresent",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getModifiers",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isNamePresent",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.reflect.Parameter"
  },
  {
    "name": "java.lang.reflect.ParameterizedType",
    "methods": [
      {
        "name": "getActualTypeArguments",
        "parameterTypes": []
      },
      {
        "name": "getOwnerType",
        "parameterTypes": []
      },
      {
        "name": "getRawType",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getActualTypeArguments",
        "parameterTypes": []
      },
      {
        "name": "getOwnerType",
        "parameterTypes": []
      },
      {
        "name": "getRawType",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.reflect.ParameterizedType"
  },
  {
    "name": "java.lang.reflect.Proxy",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getAccessor",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.reflect.RecordComponent"
  },
  {
    "name": "java.lang.reflect.Type",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.TypeVariable",
    "methods": [
      {
        "name": "getBounds",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getBounds",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.reflect.TypeVariable"
  },
  {
    "name": "java.lang.reflect.WildcardType",
    "methods": [
      {
        "name": "getLowerBounds",
        "parameterTypes": []
      },
      {
        "name": "getUpperBounds",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getLowerBounds",
        "parameterTypes": []
      },
      {
        "name": "getUpperBounds",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.reflect.WildcardType"
  },
  {
    "name": "java.math.BigDecimal"
  },
  {
    "name": "java.math.BigInteger"
  },
  {
    "name": "java.math.BigInteger"
  },
  {
    "name": "java.net.InetAddressEditor"
  },
  {
    "name": "java.net.InetSocketAddress"
  },
  {
    "name": "java.net.NetPermission"
  },
  {
    "name": "java.net.SocketPermission"
  },
  {
    "name": "java.net.URI"
  },
  {
    "name": "java.net.URL"
  },
  {
    "name": "java.net.URLClassLoader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.net.URLPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "java.net.URLPermission"
  },
  {
    "name": "java.net.UnixDomainSocketAddress",
    "methods": [
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "java.net.UnixDomainSocketAddress"
  },
  {
    "name": "java.nio.channels.ServerSocketChannel",
    "methods": [
      {
        "name": "open",
        "parameterTypes": [
          "java.net.ProtocolFamily"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "open",
        "parameterTypes": [
          "java.net.ProtocolFamily"
        ]
      }
    ],
    "name": "java.nio.channels.ServerSocketChannel"
  },
  {
    "name": "java.nio.channels.SocketChannel",
    "methods": [
      {
        "name": "open",
        "parameterTypes": [
          "java.net.ProtocolFamily"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "open",
        "parameterTypes": [
          "java.net.ProtocolFamily"
        ]
      }
    ],
    "name": "java.nio.channels.SocketChannel"
  },
  {
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "java.nio.charset.Charset"
  },
  {
    "name": "java.rmi.dgc.Lease"
  },
  {
    "name": "java.rmi.dgc.VMID"
  },
  {
    "name": "java.rmi.server.ObjID"
  },
  {
    "name": "java.rmi.server.UID"
  },
  {
    "name": "java.security.AccessController",
    "methods": [
      {
        "name": "doPrivileged",
        "parameterTypes": [
          "java.security.PrivilegedExceptionAction"
        ]
      }
    ]
  },
  {
    "name": "java.security.AccessController"
  },
  {
    "name": "java.security.AlgorithmParametersSpi"
  },
  {
    "name": "java.security.AllPermission"
  },
  {
    "name": "java.security.KeyStoreSpi"
  },
  {
    "name": "java.security.SecureClassLoader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.security.SecureRandomParameters"
  },
  {
    "name": "java.security.SecurityPermission"
  },
  {
    "name": "java.security.interfaces.ECPrivateKey"
  },
  {
    "name": "java.security.interfaces.ECPublicKey"
  },
  {
    "name": "java.security.interfaces.RSAPrivateKey"
  },
  {
    "name": "java.security.interfaces.RSAPublicKey"
  },
  {
    "name": "java.sql.Connection",
    "methods": [
      {
        "name": "createClob",
        "parameterTypes": []
      },
      {
        "name": "getMetaData",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getMetaData",
        "parameterTypes": []
      }
    ],
    "name": "java.sql.Connection"
  },
  {
    "name": "java.sql.Date"
  },
  {
    "name": "java.sql.Date",
    "condition": {
      "typeReachable": "java.sql.Date"
    },
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "toLocalDate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.sql.Driver"
  },
  {
    "name": "java.sql.DriverManager"
  },
  {
    "fields": [
      {
        "name": "next"
      }
    ],
    "name": "java.sql.SQLException"
  },
  {
    "name": "java.sql.Timestamp"
  },
  {
    "name": "java.sql.Timestamp"
  },
  {
    "name": "java.sql.Wrapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.text.ListFormat"
  },
  {
    "name": "java.time.Duration"
  },
  {
    "name": "java.time.DurationEditor"
  },
  {
    "name": "java.time.Instant"
  },
  {
    "name": "java.time.Instant"
  },
  {
    "name": "java.time.ZonedDateTime"
  },
  {
    "name": "java.util.ArrayList",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.ArrayList"
  },
  {
    "name": "java.util.Collection"
  },
  {
    "name": "java.util.Collection",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.Date"
  },
  {
    "name": "java.util.Enumeration"
  },
  {
    "name": "java.util.EventListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.HashMap",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.HashMap",
    "methods": [
      {
        "name": "isEmpty",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.HashSet"
  },
  {
    "name": "java.util.List",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.Locale"
  },
  {
    "name": "java.util.Locale$LanguageRange"
  },
  {
    "name": "java.util.Map"
  },
  {
    "name": "java.util.NavigableSet"
  },
  {
    "name": "java.util.Optional"
  },
  {
    "name": "java.util.PropertyPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "java.util.PropertyPermission"
  },
  {
    "name": "java.util.RandomAccess",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "load",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.ClassLoader"
        ]
      }
    ],
    "name": "java.util.ServiceLoader"
  },
  {
    "name": "java.util.Set"
  },
  {
    "name": "java.util.Set",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.concurrent.Callable",
    "methods": [
      {
        "name": "call",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "call",
        "parameterTypes": []
      }
    ],
    "name": "java.util.concurrent.Callable"
  },
  {
    "name": "java.util.concurrent.Executor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.concurrent.ScheduledExecutorService"
  },
  {
    "name": "java.util.concurrent.ThreadFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "fields": [
      {
        "name": "value"
      }
    ],
    "name": "java.util.concurrent.atomic.AtomicBoolean"
  },
  {
    "fields": [
      {
        "name": "pair"
      }
    ],
    "name": "java.util.concurrent.atomic.AtomicMarkableReference"
  },
  {
    "fields": [
      {
        "name": "value"
      }
    ],
    "name": "java.util.concurrent.atomic.AtomicReference"
  },
  {
    "fields": [
      {
        "name": "base"
      },
      {
        "name": "cellsBusy"
      }
    ],
    "name": "java.util.concurrent.atomic.Striped64"
  },
  {
    "fields": [
      {
        "name": "value"
      }
    ],
    "name": "java.util.concurrent.atomic.Striped64$Cell"
  },
  {
    "methods": [
      {
        "name": "and",
        "parameterTypes": [
          "java.util.function.BiPredicate"
        ]
      },
      {
        "name": "negate",
        "parameterTypes": []
      },
      {
        "name": "or",
        "parameterTypes": [
          "java.util.function.BiPredicate"
        ]
      }
    ],
    "name": "java.util.function.BiPredicate",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.function.Supplier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.logging.LogManager",
    "methods": [
      {
        "name": "getLoggingMXBean",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getLoggingMXBean",
        "parameterTypes": []
      }
    ],
    "name": "java.util.logging.LogManager"
  },
  {
    "name": "java.util.logging.LoggingMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.logging.SimpleFormatter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "java.util.logging.SimpleFormatter"
  },
  {
    "name": "java.util.regex.Pattern"
  },
  {
    "name": "java.util.stream.Stream"
  },
  {
    "name": "javafx.beans.value.ObservableValue"
  },
  {
    "name": "javax.annotation$PostConstruct"
  },
  {
    "name": "javax.annotation.Nonnull",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "javax.annotation.Nullable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "javax.annotation.PostConstruct"
  },
  {
    "name": "javax.annotation.meta.TypeQualifier",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "javax.annotation.meta.TypeQualifierDefault",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "javax.cache$Cache"
  },
  {
    "name": "javax.cache.Cache"
  },
  {
    "name": "javax.cache.CacheManager"
  },
  {
    "name": "javax.inject$Inject"
  },
  {
    "name": "javax.inject.Inject"
  },
  {
    "name": "javax.inject.Qualifier"
  },
  {
    "name": "javax.management.MBeanOperationInfo",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getSignature",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getSignature",
        "parameterTypes": []
      }
    ],
    "name": "javax.management.MBeanOperationInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "javax.management.MBeanServerBuilder",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "javax.management.MBeanServerBuilder"
  },
  {
    "name": "javax.management.NotificationEmitter"
  },
  {
    "name": "javax.management.ObjectName"
  },
  {
    "methods": [
      {
        "name": "cacheMBeanInfo",
        "parameterTypes": [
          "javax.management.MBeanInfo"
        ]
      },
      {
        "name": "getCachedMBeanInfo",
        "parameterTypes": []
      },
      {
        "name": "getMBeanInfo",
        "parameterTypes": []
      }
    ],
    "name": "javax.management.StandardEmitterMBean"
  },
  {
    "name": "javax.management.openmbean.CompositeData"
  },
  {
    "name": "javax.management.openmbean.OpenMBeanOperationInfoSupport"
  },
  {
    "name": "javax.management.openmbean.TabularData"
  },
  {
    "methods": [
      {
        "name": "addNotificationListener",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "java.rmi.MarshalledObject",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "addNotificationListeners",
        "parameterTypes": [
          "javax.management.ObjectName[]",
          "java.rmi.MarshalledObject[]",
          "javax.security.auth.Subject[]"
        ]
      },
      {
        "name": "createMBean",
        "parameterTypes": [
          "java.lang.String",
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "java.lang.String[]",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "createMBean",
        "parameterTypes": [
          "java.lang.String",
          "javax.management.ObjectName",
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "java.lang.String[]",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "createMBean",
        "parameterTypes": [
          "java.lang.String",
          "javax.management.ObjectName",
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "createMBean",
        "parameterTypes": [
          "java.lang.String",
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "fetchNotifications",
        "parameterTypes": [
          "long",
          "int",
          "long"
        ]
      },
      {
        "name": "getAttribute",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.lang.String",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "getAttributes",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.lang.String[]",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "getConnectionId",
        "parameterTypes": []
      },
      {
        "name": "getDefaultDomain",
        "parameterTypes": [
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "getDomains",
        "parameterTypes": [
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "getMBeanCount",
        "parameterTypes": [
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "getMBeanInfo",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "getObjectInstance",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.lang.String",
          "java.rmi.MarshalledObject",
          "java.lang.String[]",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "isInstanceOf",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.lang.String",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "isRegistered",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "queryMBeans",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "queryNames",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "removeNotificationListener",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "java.rmi.MarshalledObject",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "removeNotificationListener",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "removeNotificationListeners",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.lang.Integer[]",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "setAttribute",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "setAttributes",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "unregisterMBean",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      }
    ],
    "name": "javax.management.remote.rmi.RMIConnection",
    "queryAllPublicMethods": true
  },
  {
    "name": "javax.management.remote.rmi.RMIConnectionImpl_Skel"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.rmi.server.RemoteRef"
        ]
      }
    ],
    "name": "javax.management.remote.rmi.RMIConnectionImpl_Stub"
  },
  {
    "methods": [
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newClient",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "javax.management.remote.rmi.RMIServer",
    "queryAllPublicMethods": true
  },
  {
    "name": "javax.management.remote.rmi.RMIServerImpl_Skel"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.rmi.server.RemoteRef"
        ]
      }
    ],
    "name": "javax.management.remote.rmi.RMIServerImpl_Stub"
  },
  {
    "name": "javax.money$MonetaryAmount"
  },
  {
    "name": "javax.money.MonetaryAmount"
  },
  {
    "name": "javax.naming.InitialContext"
  },
  {
    "name": "javax.naming.Referenceable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getReference",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getReference",
        "parameterTypes": []
      }
    ],
    "name": "javax.naming.Referenceable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "javax.naming.ldap.LdapContext"
  },
  {
    "methods": [
      {
        "name": "callAs",
        "parameterTypes": [
          "javax.security.auth.Subject",
          "java.util.concurrent.Callable"
        ]
      }
    ],
    "name": "javax.security.auth.Subject"
  },
  {
    "name": "javax.security.auth.x500.X500Principal",
    "fields": [
      {
        "name": "thisX500Name"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "sun.security.x509.X500Name"
        ]
      }
    ]
  },
  {
    "fields": [
      {
        "name": "thisX500Name"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "sun.security.x509.X500Name"
        ]
      }
    ],
    "name": "javax.security.auth.x500.X500Principal"
  },
  {
    "name": "javax.smartcardio.CardPermission"
  },
  {
    "name": "javax.sql.CommonDataSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createShardingKeyBuilder",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "createShardingKeyBuilder",
        "parameterTypes": []
      }
    ],
    "name": "javax.sql.CommonDataSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "javax.sql.DataSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createConnectionBuilder",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "createConnectionBuilder",
        "parameterTypes": []
      }
    ],
    "name": "javax.sql.DataSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "javax.sql.XADataSource"
  },
  {
    "name": "jdk.crac.management.CRaCMXBean"
  },
  {
    "name": "jdk.internal.jrtfs.JrtFileSystemProvider"
  },
  {
    "name": "jdk.internal.loader.BuiltinClassLoader",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      }
    ],
    "name": "jdk.internal.loader.ClassLoaders$AppClassLoader",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      }
    ],
    "name": "jdk.internal.loader.ClassLoaders$PlatformClassLoader"
  },
  {
    "name": "jdk.internal.misc.Unsafe"
  },
  {
    "name": "jdk.management.jfr.ConfigurationInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.EventTypeInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.FlightRecorderMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.FlightRecorderMXBeanImpl",
    "queryAllPublicConstructors": true
  },
  {
    "methods": [
      {
        "name": "cacheMBeanInfo",
        "parameterTypes": [
          "javax.management.MBeanInfo"
        ]
      },
      {
        "name": "getCachedMBeanInfo",
        "parameterTypes": []
      },
      {
        "name": "getMBeanInfo",
        "parameterTypes": []
      },
      {
        "name": "getNotificationInfo",
        "parameterTypes": []
      }
    ],
    "name": "jdk.management.jfr.FlightRecorderMXBeanImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "jdk.management.jfr.RecordingInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.SettingDescriptorInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "kotlin.Metadata"
  },
  {
    "name": "kotlin.coroutines.Continuation"
  },
  {
    "name": "kotlin.jvm.JvmInline"
  },
  {
    "name": "kotlin.reflect.full$KClasses"
  },
  {
    "name": "kotlin.reflect.full.KClasses"
  },
  {
    "name": "kotlinx.coroutines.flow.Flow"
  },
  {
    "name": "kotlinx.coroutines.reactor$MonoKt"
  },
  {
    "name": "kotlinx.coroutines.reactor.MonoKt"
  },
  {
    "name": "kotlinx.serialization.cbor$Cbor"
  },
  {
    "name": "kotlinx.serialization.cbor.Cbor"
  },
  {
    "name": "kotlinx.serialization.json$Json"
  },
  {
    "name": "kotlinx.serialization.json.Json"
  },
  {
    "name": "kotlinx.serialization.protobuf$ProtoBuf"
  },
  {
    "name": "kotlinx.serialization.protobuf.ProtoBuf"
  },
  {
    "name": "liquibase.change.DatabaseChange"
  },
  {
    "name": "liquibase.integration.spring.SpringLiquibase"
  },
  {
    "name": "net.bytebuddy.asm.Advice$AllArguments",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "optional",
        "parameterTypes": []
      },
      {
        "name": "readOnly",
        "parameterTypes": []
      },
      {
        "name": "typing",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "net.bytebuddy.asm.Advice$Argument",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$Enter",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$Exit",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "declaringType",
        "parameterTypes": []
      },
      {
        "name": "readOnly",
        "parameterTypes": []
      },
      {
        "name": "typing",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "net.bytebuddy.asm.Advice$FieldValue",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$Local",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "inline",
        "parameterTypes": []
      },
      {
        "name": "prependLineNumber",
        "parameterTypes": []
      },
      {
        "name": "skipOn",
        "parameterTypes": []
      },
      {
        "name": "suppress",
        "parameterTypes": []
      }
    ],
    "name": "net.bytebuddy.asm.Advice$OnMethodEnter",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "backupArguments",
        "parameterTypes": []
      },
      {
        "name": "inline",
        "parameterTypes": []
      },
      {
        "name": "onThrowable",
        "parameterTypes": []
      },
      {
        "name": "repeatOn",
        "parameterTypes": []
      },
      {
        "name": "suppress",
        "parameterTypes": []
      }
    ],
    "name": "net.bytebuddy.asm.Advice$OnMethodExit",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$Origin",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "readOnly",
        "parameterTypes": []
      },
      {
        "name": "typing",
        "parameterTypes": []
      }
    ],
    "name": "net.bytebuddy.asm.Advice$Return",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "optional",
        "parameterTypes": []
      },
      {
        "name": "readOnly",
        "parameterTypes": []
      },
      {
        "name": "typing",
        "parameterTypes": []
      }
    ],
    "name": "net.bytebuddy.asm.Advice$This",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$Thrown",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.bytebuddy.description.method.MethodDescription$InDefinedShape$AbstractBase$Executable",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Parameter",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Executable",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDefinition$Sort$AnnotatedType",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableExceptionType$Dispatcher",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableParameterType$Dispatcher",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedMethodReturnType$Dispatcher",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForComponentType$AnnotatedParameterizedType",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeArgument$AnnotatedParameterizedType",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles$Lookup",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.AllArguments",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "includeSelf",
        "parameterTypes": []
      },
      {
        "name": "nullIfEmpty",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.AllArguments",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.Argument",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.BindingPriority",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.Default",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.DefaultCall",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.DefaultMethod",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.FieldValue",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "declaringType",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.FieldValue",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.Origin",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "cache",
        "parameterTypes": []
      },
      {
        "name": "privileged",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.Origin",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.StubValue",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.Super",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.SuperCall",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.SuperMethod",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.This",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "optional",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.This",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "net.bytebuddy.implementation.bytecode.assign.Assigner$Typing"
  },
  {
    "name": "net.bytebuddy.utility.Invoker",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.utility.Invoker$Dispatcher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "net.bytebuddy.utility.Invoker$Dispatcher"
  },
  {
    "name": "net.logstash.logback.encoder.LogstashEncoder",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setIncludeContext",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setIncludeContext",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "net.logstash.logback.encoder.LogstashEncoder",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.sf.jsqlparser.parser.JSqlParser"
  },
  {
    "name": "net.sourceforge.htmlunit.corejs.javascript.ScriptableObject",
    "methods": [
      {
        "name": "getExternalArrayLength",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getExternalArrayLength",
        "parameterTypes": []
      }
    ],
    "name": "net.sourceforge.htmlunit.corejs.javascript.ScriptableObject"
  },
  {
    "name": "nz.net.ultraq.thymeleaf.layoutdialect.LayoutDialect"
  },
  {
    "name": "okhttp3.OkHttpClient",
    "condition": {
      "typeReachable": "okhttp3.OkHttpClient"
    }
  },
  {
    "name": "oracle.jdbc.OracleConnection"
  },
  {
    "name": "oracle.ucp.jdbc.PoolDataSource"
  },
  {
    "name": "oracle.ucp.jdbc.PoolDataSourceImpl"
  },
  {
    "name": "org.aopalliance.aop.Advice",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.Interceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.MethodInterceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.catalina.Manager"
  },
  {
    "name": "org.apache.catalina.core.ApplicationContextFacade",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addFilter",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.servlet.Filter"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addJspFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "java.util.EventListener"
        ]
      },
      {
        "name": "addServlet",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.servlet.Servlet"
        ]
      },
      {
        "name": "addServlet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "addServlet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createFilter",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createListener",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createServlet",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "declareRoles",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttributeNames",
        "parameterTypes": []
      },
      {
        "name": "getClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getContext",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getContextPath",
        "parameterTypes": []
      },
      {
        "name": "getDefaultSessionTrackingModes",
        "parameterTypes": []
      },
      {
        "name": "getEffectiveMajorVersion",
        "parameterTypes": []
      },
      {
        "name": "getEffectiveMinorVersion",
        "parameterTypes": []
      },
      {
        "name": "getEffectiveSessionTrackingModes",
        "parameterTypes": []
      },
      {
        "name": "getFilterRegistration",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFilterRegistrations",
        "parameterTypes": []
      },
      {
        "name": "getInitParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInitParameterNames",
        "parameterTypes": []
      },
      {
        "name": "getJspConfigDescriptor",
        "parameterTypes": []
      },
      {
        "name": "getMajorVersion",
        "parameterTypes": []
      },
      {
        "name": "getMimeType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMinorVersion",
        "parameterTypes": []
      },
      {
        "name": "getNamedDispatcher",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRealPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRequestCharacterEncoding",
        "parameterTypes": []
      },
      {
        "name": "getRequestDispatcher",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResourceAsStream",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResourcePaths",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResponseCharacterEncoding",
        "parameterTypes": []
      },
      {
        "name": "getServerInfo",
        "parameterTypes": []
      },
      {
        "name": "getServletContextName",
        "parameterTypes": []
      },
      {
        "name": "getServletRegistration",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getServletRegistrations",
        "parameterTypes": []
      },
      {
        "name": "getSessionCookieConfig",
        "parameterTypes": []
      },
      {
        "name": "getSessionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getVirtualServerName",
        "parameterTypes": []
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "removeAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAttribute",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setInitParameter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "setRequestCharacterEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResponseCharacterEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSessionTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSessionTrackingModes",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "addFilter",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.servlet.Filter"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addJspFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "java.util.EventListener"
        ]
      },
      {
        "name": "addServlet",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.servlet.Servlet"
        ]
      },
      {
        "name": "addServlet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "addServlet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createFilter",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createListener",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createServlet",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "declareRoles",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttributeNames",
        "parameterTypes": []
      },
      {
        "name": "getClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getContext",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getContextPath",
        "parameterTypes": []
      },
      {
        "name": "getDefaultSessionTrackingModes",
        "parameterTypes": []
      },
      {
        "name": "getEffectiveMajorVersion",
        "parameterTypes": []
      },
      {
        "name": "getEffectiveMinorVersion",
        "parameterTypes": []
      },
      {
        "name": "getEffectiveSessionTrackingModes",
        "parameterTypes": []
      },
      {
        "name": "getFilterRegistration",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFilterRegistrations",
        "parameterTypes": []
      },
      {
        "name": "getInitParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInitParameterNames",
        "parameterTypes": []
      },
      {
        "name": "getJspConfigDescriptor",
        "parameterTypes": []
      },
      {
        "name": "getMajorVersion",
        "parameterTypes": []
      },
      {
        "name": "getMimeType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMinorVersion",
        "parameterTypes": []
      },
      {
        "name": "getNamedDispatcher",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRealPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRequestCharacterEncoding",
        "parameterTypes": []
      },
      {
        "name": "getRequestDispatcher",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResourceAsStream",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResourcePaths",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResponseCharacterEncoding",
        "parameterTypes": []
      },
      {
        "name": "getServerInfo",
        "parameterTypes": []
      },
      {
        "name": "getServletContextName",
        "parameterTypes": []
      },
      {
        "name": "getServletRegistration",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getServletRegistrations",
        "parameterTypes": []
      },
      {
        "name": "getSessionCookieConfig",
        "parameterTypes": []
      },
      {
        "name": "getSessionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getVirtualServerName",
        "parameterTypes": []
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "removeAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAttribute",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setInitParameter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "setRequestCharacterEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResponseCharacterEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSessionTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSessionTrackingModes",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "org.apache.catalina.core.ApplicationContextFacade",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.apache.catalina.loader.JdbcLeakPrevention",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "clearJdbcDriverRegistrations",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "clearJdbcDriverRegistrations",
        "parameterTypes": []
      }
    ],
    "name": "org.apache.catalina.loader.JdbcLeakPrevention"
  },
  {
    "name": "org.apache.catalina.startup.Tomcat"
  },
  {
    "name": "org.apache.catalina.util.CharsetMapper",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.apache.catalina.util.CharsetMapper"
  },
  {
    "name": "org.apache.commons.dbcp2.BasicDataSource"
  },
  {
    "name": "org.apache.coyote.AbstractProtocol",
    "methods": [
      {
        "name": "getAddress",
        "parameterTypes": []
      },
      {
        "name": "getLocalPort",
        "parameterTypes": []
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getAddress",
        "parameterTypes": []
      },
      {
        "name": "getLocalPort",
        "parameterTypes": []
      },
      {
        "name": "getProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "org.apache.coyote.AbstractProtocol"
  },
  {
    "name": "org.apache.coyote.UpgradeProtocol"
  },
  {
    "name": "org.apache.coyote.http11.AbstractHttp11Protocol",
    "methods": [
      {
        "name": "isSSLEnabled",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "isSSLEnabled",
        "parameterTypes": []
      }
    ],
    "name": "org.apache.coyote.http11.AbstractHttp11Protocol"
  },
  {
    "name": "org.apache.coyote.http11.Http11NioProtocol",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.el.ExpressionFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.apache.el.ExpressionFactoryImpl"
  },
  {
    "name": "org.apache.http.impl.client.HttpClientBuilder",
    "fields": [
      {
        "name": "connTimeToLive"
      },
      {
        "name": "connTimeToLiveTimeUnit"
      },
      {
        "name": "defaultConnectionConfig"
      },
      {
        "name": "defaultSocketConfig"
      },
      {
        "name": "dnsResolver"
      },
      {
        "name": "hostnameVerifier"
      },
      {
        "name": "maxConnPerRoute"
      },
      {
        "name": "maxConnTotal"
      },
      {
        "name": "publicSuffixMatcher"
      },
      {
        "name": "sslContext"
      },
      {
        "name": "sslSocketFactory"
      },
      {
        "name": "systemProperties"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "connTimeToLive"
      },
      {
        "name": "connTimeToLiveTimeUnit"
      },
      {
        "name": "defaultConnectionConfig"
      },
      {
        "name": "defaultSocketConfig"
      },
      {
        "name": "dnsResolver"
      },
      {
        "name": "hostnameVerifier"
      },
      {
        "name": "maxConnPerRoute"
      },
      {
        "name": "maxConnTotal"
      },
      {
        "name": "publicSuffixMatcher"
      },
      {
        "name": "sslContext"
      },
      {
        "name": "sslSocketFactory"
      },
      {
        "name": "systemProperties"
      }
    ],
    "name": "org.apache.http.impl.client.HttpClientBuilder"
  },
  {
    "name": "org.apache.logging.log4j.core.LoggerContext"
  },
  {
    "name": "org.apache.logging.log4j.core.impl$Log4jContextFactory"
  },
  {
    "name": "org.apache.logging.log4j.core.impl.Log4jContextFactory"
  },
  {
    "name": "org.apache.logging.log4j.spi.ExtendedLogger"
  },
  {
    "name": "org.apache.logging.log4j.util.EnvironmentPropertySource"
  },
  {
    "name": "org.apache.logging.log4j.util.SystemPropertiesPropertySource"
  },
  {
    "name": "org.apache.logging.slf4j.SLF4JProvider"
  },
  {
    "name": "org.apache.tomcat.jdbc.pool.DataSource"
  },
  {
    "name": "org.apache.tomcat.util.collections.LocalStrings"
  },
  {
    "name": "org.apache.tomcat.util.collections.LocalStrings_en"
  },
  {
    "name": "org.apache.tomcat.util.collections.LocalStrings_en_US"
  },
  {
    "name": "org.apache.tomcat.util.net.AbstractEndpoint",
    "methods": [
      {
        "name": "setBindOnInit",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "setBindOnInit",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "org.apache.tomcat.util.net.AbstractEndpoint"
  },
  {
    "name": "org.apache.tomcat.util.net.NioEndpoint",
    "queryAllPublicMethods": true
  },
  {
    "fields": [
      {
        "name": "readState"
      }
    ],
    "name": "org.apache.tomcat.websocket.WsFrameBase"
  },
  {
    "name": "org.apache.tomcat.websocket.server.DefaultServerEndpointConfigurator"
  },
  {
    "name": "org.apache.tomcat.websocket.server.WsFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.apache.tomcat.websocket.server.WsHttpUpgradeHandler"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.apache.tomcat.websocket.server.WsHttpUpgradeHandler"
  },
  {
    "name": "org.apache.tomcat.websocket.server.WsSci"
  },
  {
    "name": "org.apache.xerces.impl.dv.dtd.DTDDVFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.xerces.parsers.XIncludeAwareParserConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.xerces.stax.XMLEventFactoryImpl"
  },
  {
    "name": "org.aspectj.lang.annotation.Around",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.aspectj.lang.annotation.Aspect",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.cache2k.Cache2kBuilder"
  },
  {
    "name": "org.cache2k.extra.micrometer.Cache2kCacheMetrics"
  },
  {
    "name": "org.cache2k.extra.spring.SpringCache2kCache"
  },
  {
    "name": "org.crac.Core"
  },
  {
    "name": "org.eclipse.collections.api.list$ImmutableList"
  },
  {
    "name": "org.eclipse.collections.api.list.ImmutableList"
  },
  {
    "name": "org.eclipse.core.runtime$FileLocator"
  },
  {
    "name": "org.eclipse.core.runtime.FileLocator"
  },
  {
    "name": "org.eclipse.jetty.ee10.websocket.server.JettyWebSocketServerContainer"
  },
  {
    "name": "org.eclipse.jetty.server.Server"
  },
  {
    "name": "org.eclipse.jetty.util.Loader"
  },
  {
    "name": "org.eclipse.jetty.webapp.WebAppContext"
  },
  {
    "name": "org.eclipse.jetty.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer"
  },
  {
    "name": "org.eclipse.jetty.websocket.server$JettyWebSocketServerContainer"
  },
  {
    "name": "org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer"
  },
  {
    "name": "org.eclipse.persistence.internal.jpa.deployment$JavaSECMPInitializerAgent"
  },
  {
    "name": "org.eclipse.persistence.internal.jpa.deployment.JavaSECMPInitializerAgent"
  },
  {
    "name": "org.eclipse.persistence.jpa.JpaEntityManager"
  },
  {
    "name": "org.elasticsearch.client.RestClient"
  },
  {
    "name": "org.elasticsearch.client.RestClientBuilder"
  },
  {
    "name": "org.flywaydb.core.Flyway",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.flywaydb.core.api.migration.baseline.BaselineAppliedMigration"
  },
  {
    "name": "org.flywaydb.core.api.migration.baseline.BaselineMigrationResolver"
  },
  {
    "name": "org.flywaydb.core.api.migration.baseline.BaselineMigrationTypeResolver"
  },
  {
    "name": "org.flywaydb.core.api.migration.baseline.BaselineResourceTypeProvider"
  },
  {
    "name": "org.flywaydb.core.experimental.migration.CoreMigrationTypeResolver"
  },
  {
    "name": "org.flywaydb.core.extensibility.ConfigurationExtension",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flywaydb.core.extensibility.Plugin",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flywaydb.core.internal.configuration.resolvers.EnvironmentProvisionerNone"
  },
  {
    "name": "org.flywaydb.core.internal.configuration.resolvers.EnvironmentVariableResolver"
  },
  {
    "name": "org.flywaydb.core.internal.database.base.TestContainersDatabaseType"
  },
  {
    "name": "org.flywaydb.core.internal.database.h2.H2DatabaseType"
  },
  {
    "name": "org.flywaydb.core.internal.database.sqlite.SQLiteDatabaseType"
  },
  {
    "name": "org.flywaydb.core.internal.logging.slf4j.Slf4jLogCreator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.flywaydb.core.internal.logging.slf4j.Slf4jLogCreator"
  },
  {
    "name": "org.flywaydb.core.internal.proprietaryStubs.AuthCommandExtensionStub"
  },
  {
    "name": "org.flywaydb.core.internal.proprietaryStubs.CommandExtensionStub"
  },
  {
    "name": "org.flywaydb.core.internal.proprietaryStubs.DeployCommandExtensionStub"
  },
  {
    "name": "org.flywaydb.core.internal.proprietaryStubs.DiffApplyCommandExtensionStub"
  },
  {
    "name": "org.flywaydb.core.internal.proprietaryStubs.DiffCommandExtensionStub"
  },
  {
    "name": "org.flywaydb.core.internal.proprietaryStubs.DiffTextCommandExtensionStub"
  },
  {
    "name": "org.flywaydb.core.internal.proprietaryStubs.GenerateCommandExtensionStub"
  },
  {
    "name": "org.flywaydb.core.internal.proprietaryStubs.PrepareCommandExtensionStub"
  },
  {
    "name": "org.flywaydb.core.internal.resource.CoreResourceTypeProvider"
  },
  {
    "name": "org.flywaydb.core.internal.schemahistory.BaseAppliedMigration"
  },
  {
    "name": "org.glassfish.jaxb.core.v2.model.nav.ReflectionNavigator",
    "methods": [
      {
        "name": "getInstance",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getInstance",
        "parameterTypes": []
      }
    ],
    "name": "org.glassfish.jaxb.core.v2.model.nav.ReflectionNavigator"
  },
  {
    "name": "org.glassfish.jaxb.runtime.v2.JAXBContextFactory"
  },
  {
    "name": "org.glassfish.jaxb.runtime.v2.runtime.property.ArrayElementLeafProperty",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.glassfish.jaxb.runtime.v2.runtime.property.ArrayElementNodeProperty",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.glassfish.jaxb.runtime.v2.runtime.JAXBContextImpl",
          "org.glassfish.jaxb.runtime.v2.model.runtime.RuntimeElementPropertyInfo"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.glassfish.jaxb.runtime.v2.runtime.JAXBContextImpl",
          "org.glassfish.jaxb.runtime.v2.model.runtime.RuntimeElementPropertyInfo"
        ]
      }
    ],
    "name": "org.glassfish.jaxb.runtime.v2.runtime.property.ArrayElementNodeProperty",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.glassfish.jaxb.runtime.v2.runtime.property.ArrayReferenceNodeProperty",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.glassfish.jaxb.runtime.v2.runtime.property.SingleElementLeafProperty",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.glassfish.jaxb.runtime.v2.runtime.JAXBContextImpl",
          "org.glassfish.jaxb.runtime.v2.model.runtime.RuntimeElementPropertyInfo"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.glassfish.jaxb.runtime.v2.runtime.JAXBContextImpl",
          "org.glassfish.jaxb.runtime.v2.model.runtime.RuntimeElementPropertyInfo"
        ]
      }
    ],
    "name": "org.glassfish.jaxb.runtime.v2.runtime.property.SingleElementLeafProperty",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.glassfish.jaxb.runtime.v2.runtime.property.SingleElementNodeProperty",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.glassfish.jaxb.runtime.v2.runtime.JAXBContextImpl",
          "org.glassfish.jaxb.runtime.v2.model.runtime.RuntimeElementPropertyInfo"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.glassfish.jaxb.runtime.v2.runtime.JAXBContextImpl",
          "org.glassfish.jaxb.runtime.v2.model.runtime.RuntimeElementPropertyInfo"
        ]
      }
    ],
    "name": "org.glassfish.jaxb.runtime.v2.runtime.property.SingleElementNodeProperty",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.glassfish.jaxb.runtime.v2.runtime.property.SingleMapNodeProperty",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.glassfish.jaxb.runtime.v2.runtime.property.SingleReferenceNodeProperty",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.glassfish.jersey.server.ResourceConfig"
  },
  {
    "name": "org.glassfish.jersey.server.spring.SpringComponentProvider"
  },
  {
    "name": "org.glassfish.tyrus.servlet$TyrusHttpUpgradeHandler"
  },
  {
    "name": "org.glassfish.tyrus.servlet.TyrusHttpUpgradeHandler"
  },
  {
    "name": "org.graalvm.nativeimage.ImageInfo",
    "methods": [
      {
        "name": "inImageCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "inImageCode",
        "parameterTypes": []
      }
    ],
    "name": "org.graalvm.nativeimage.ImageInfo"
  },
  {
    "name": "org.h2.Driver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.h2.Driver"
  },
  {
    "name": "org.h2.jdbc.JdbcClob"
  },
  {
    "name": "org.h2.jdbc.JdbcLob",
    "methods": [
      {
        "name": "free",
        "parameterTypes": []
      }
    ]
  },
  {
    "fields": [
      {
        "name": "counter"
      }
    ],
    "name": "org.h2.mvstore.MVStore$TxCounter"
  },
  {
    "fields": [
      {
        "name": "pos"
      }
    ],
    "name": "org.h2.mvstore.Page"
  },
  {
    "fields": [
      {
        "name": "INSTANCE"
      }
    ],
    "name": "org.h2.mvstore.db.LobStorageMap$BlobMeta$Type"
  },
  {
    "fields": [
      {
        "name": "INSTANCE"
      }
    ],
    "name": "org.h2.mvstore.db.LobStorageMap$BlobReference$Type"
  },
  {
    "fields": [
      {
        "name": "INSTANCE"
      }
    ],
    "name": "org.h2.mvstore.db.NullValueDataType"
  },
  {
    "fields": [
      {
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.h2.mvstore.db.RowDataType$Factory"
  },
  {
    "fields": [
      {
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.h2.mvstore.tx.VersionedValueType$Factory"
  },
  {
    "fields": [
      {
        "name": "INSTANCE"
      }
    ],
    "name": "org.h2.mvstore.type.ByteArrayDataType"
  },
  {
    "fields": [
      {
        "name": "INSTANCE"
      }
    ],
    "name": "org.h2.mvstore.type.LongDataType"
  },
  {
    "name": "org.h2.server.web.JakartaWebServlet"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.h2.store.fs.async.FilePathAsync"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.h2.store.fs.mem.FilePathMem"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.h2.store.fs.mem.FilePathMemLZF"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.h2.store.fs.niomapped.FilePathNioMapped"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.h2.store.fs.niomem.FilePathNioMem"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.h2.store.fs.niomem.FilePathNioMemLZF"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.h2.store.fs.retry.FilePathRetryOnInterrupt"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.h2.store.fs.split.FilePathSplit"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.h2.store.fs.zip.FilePathZip"
  },
  {
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaDelete"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaQuery"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaUpdate"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "detach",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "disableFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "enableFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getEnabledFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityGraphs",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getFlushMode",
        "parameterTypes": []
      },
      {
        "name": "getReference",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "persist",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setFlushMode",
        "parameterTypes": [
          "jakarta.persistence.FlushModeType"
        ]
      }
    ],
    "name": "org.hibernate.Session",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.Session",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaDelete"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaQuery"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaUpdate"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "detach",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityGraphs",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getFlushMode",
        "parameterTypes": []
      },
      {
        "name": "getReference",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "load",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "persist",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setFlushMode",
        "parameterTypes": [
          "jakarta.persistence.FlushModeType"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.SessionFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": []
      },
      {
        "name": "openSession",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": []
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      }
    ],
    "name": "org.hibernate.SessionFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.SharedSessionContract",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "beginTransaction",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "createNamedStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureCall",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureCall",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "createStoredProcedureCall",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "doReturningWork",
        "parameterTypes": [
          "org.hibernate.jdbc.ReturningWork"
        ]
      },
      {
        "name": "doWork",
        "parameterTypes": [
          "org.hibernate.jdbc.Work"
        ]
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      },
      {
        "name": "getJdbcBatchSize",
        "parameterTypes": []
      },
      {
        "name": "getNamedProcedureCall",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTenantIdentifier",
        "parameterTypes": []
      },
      {
        "name": "getTransaction",
        "parameterTypes": []
      },
      {
        "name": "isConnected",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": []
      },
      {
        "name": "setJdbcBatchSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "beginTransaction",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureCall",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureCall",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "createStoredProcedureCall",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "doReturningWork",
        "parameterTypes": [
          "org.hibernate.jdbc.ReturningWork"
        ]
      },
      {
        "name": "doWork",
        "parameterTypes": [
          "org.hibernate.jdbc.Work"
        ]
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      },
      {
        "name": "getFactory",
        "parameterTypes": []
      },
      {
        "name": "getJdbcBatchSize",
        "parameterTypes": []
      },
      {
        "name": "getNamedProcedureCall",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTenantIdentifier",
        "parameterTypes": []
      },
      {
        "name": "getTenantIdentifierValue",
        "parameterTypes": []
      },
      {
        "name": "getTransaction",
        "parameterTypes": []
      },
      {
        "name": "isConnected",
        "parameterTypes": []
      },
      {
        "name": "isJoinedToTransaction",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": []
      },
      {
        "name": "joinTransaction",
        "parameterTypes": []
      },
      {
        "name": "setJdbcBatchSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "org.hibernate.SharedSessionContract",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.annotations.GenericGenerator",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "org.hibernate.annotations.GenericGenerator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.annotations.LazyCollection",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "org.hibernate.annotations.LazyCollection",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.annotations.OnDelete",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "org.hibernate.annotations.OnDelete",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.annotations.Parameter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.boot.archive.scan.internal.DisabledScanner",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.boot.archive.spi.ArchiveDescriptorFactory"
        ]
      }
    ],
    "name": "org.hibernate.boot.archive.scan.internal.DisabledScanner"
  },
  {
    "methods": [
      {
        "name": "activate",
        "parameterTypes": [
          "org.hibernate.boot.beanvalidation.ActivationContext"
        ]
      }
    ],
    "name": "org.hibernate.boot.beanvalidation.TypeSafeActivator"
  },
  {
    "name": "org.hibernate.boot.cfgxml.internal.CfgXmlAccessServiceImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.boot.internal.DefaultSessionFactoryBuilderService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.hibernate.boot.model.relational.ColumnOrderingStrategyStandard"
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$AreFieldsDirty",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$AreFieldsDirtyWithoutCollections",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$ClearDirtyAttributes",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$ClearDirtyAttributesWithoutCollections",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$ClearOwner",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$GetCollectionTrackerWithoutCollections",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$GetDirtyAttributes",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$GetDirtyAttributesWithoutCollections",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$InitializeLazyAttributeLoadingInterceptor",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$SetOwner",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$SuspendDirtyTracking",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$TrackChange",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.spi.interceptor.BytecodeInterceptorLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ],
    "name": "org.hibernate.bytecode.enhance.spi.interceptor.BytecodeInterceptorLogging_$logger"
  },
  {
    "name": "org.hibernate.bytecode.enhance.spi.interceptor.BytecodeInterceptorLogging_$logger_en"
  },
  {
    "name": "org.hibernate.bytecode.enhance.spi.interceptor.BytecodeInterceptorLogging_$logger_en_US"
  },
  {
    "name": "org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.bytecode.spi.ReflectionOptimizer$InstantiationOptimizer",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.cache.internal.DisabledCaching",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.cache.internal.NoCachingRegionFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.cfg.beanvalidation.TypeSafeActivator",
    "methods": [
      {
        "name": "activate",
        "parameterTypes": [
          "org.hibernate.cfg.beanvalidation.ActivationContext"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.collection.spi.LazyInitializable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.collection.spi.PersistentCollection",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ],
    "name": "org.hibernate.dialect.DialectLogging_$logger"
  },
  {
    "name": "org.hibernate.dialect.DialectLogging_$logger_en"
  },
  {
    "name": "org.hibernate.dialect.DialectLogging_$logger_en_US"
  },
  {
    "name": "org.hibernate.dialect.PostgreSQL95Dialect"
  },
  {
    "name": "org.hibernate.engine.config.internal.ConfigurationServiceImpl",
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ],
    "name": "org.hibernate.engine.jdbc.batch.JdbcBatchLogging_$logger"
  },
  {
    "name": "org.hibernate.engine.jdbc.batch.JdbcBatchLogging_$logger_en"
  },
  {
    "name": "org.hibernate.engine.jdbc.batch.JdbcBatchLogging_$logger_en_US"
  },
  {
    "name": "org.hibernate.engine.jdbc.batch.internal.BatchBuilderImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "setJndiService",
        "parameterTypes": [
          "org.hibernate.engine.jndi.spi.JndiService"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "setJndiService",
        "parameterTypes": [
          "org.hibernate.engine.jndi.spi.JndiService"
        ]
      }
    ],
    "name": "org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.internal.JdbcServicesImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.mutation.internal.StandardMutationExecutorService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.spi.SqlStatementLogger",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jndi.internal.JndiServiceImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.query.internal.NativeQueryInterpreterStandardImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.spi.PrimeAmongSecondarySupertypes",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.spi.PrimeAmongSecondarySupertypes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.engine.spi.SessionImplementor"
  },
  {
    "name": "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.id.Assigned",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.hibernate.id.Assigned"
  },
  {
    "name": "org.hibernate.id.enhanced.NoopOptimizer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class",
          "int"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class",
          "int"
        ]
      }
    ],
    "name": "org.hibernate.id.enhanced.NoopOptimizer"
  },
  {
    "name": "org.hibernate.id.enhanced.PooledOptimizer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class",
          "int"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class",
          "int"
        ]
      }
    ],
    "name": "org.hibernate.id.enhanced.PooledOptimizer"
  },
  {
    "name": "org.hibernate.id.enhanced.SequenceStyleGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.hibernate.id.enhanced.SequenceStyleGenerator"
  },
  {
    "name": "org.hibernate.id.enhanced.StandardNamingStrategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.hibernate.id.enhanced.StandardNamingStrategy"
  },
  {
    "name": "org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.internal.CoreMessageLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ],
    "name": "org.hibernate.internal.CoreMessageLogger_$logger"
  },
  {
    "name": "org.hibernate.internal.CoreMessageLogger_$logger_en"
  },
  {
    "name": "org.hibernate.internal.CoreMessageLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.internal.EntityManagerMessageLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ],
    "name": "org.hibernate.internal.EntityManagerMessageLogger_$logger"
  },
  {
    "name": "org.hibernate.internal.EntityManagerMessageLogger_$logger_en"
  },
  {
    "name": "org.hibernate.internal.EntityManagerMessageLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.internal.log.DeprecationLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.internal.log.DeprecationLogger_$logger_en"
  },
  {
    "name": "org.hibernate.internal.log.DeprecationLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.metamodel.mapping.MappingModelCreationLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.metamodel.mapping.MappingModelCreationLogger_$logger_en"
  },
  {
    "name": "org.hibernate.metamodel.mapping.MappingModelCreationLogger_$logger_en_US"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ],
    "name": "org.hibernate.metamodel.mapping.MappingModelCreationLogging_$logger"
  },
  {
    "name": "org.hibernate.metamodel.mapping.MappingModelCreationLogging_$logger_en"
  },
  {
    "name": "org.hibernate.metamodel.mapping.MappingModelCreationLogging_$logger_en_US"
  },
  {
    "name": "org.hibernate.metamodel.model.domain.JpaMetamodel"
  },
  {
    "name": "org.hibernate.persister.collection.BasicCollectionPersister",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.mapping.Collection",
          "org.hibernate.cache.spi.access.CollectionDataAccess",
          "org.hibernate.metamodel.spi.RuntimeModelCreationContext"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.mapping.Collection",
          "org.hibernate.cache.spi.access.CollectionDataAccess",
          "org.hibernate.metamodel.spi.RuntimeModelCreationContext"
        ]
      }
    ],
    "name": "org.hibernate.persister.collection.BasicCollectionPersister"
  },
  {
    "name": "org.hibernate.persister.entity.SingleTableEntityPersister",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.mapping.PersistentClass",
          "org.hibernate.cache.spi.access.EntityDataAccess",
          "org.hibernate.cache.spi.access.NaturalIdDataAccess",
          "org.hibernate.metamodel.spi.RuntimeModelCreationContext"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.mapping.PersistentClass",
          "org.hibernate.cache.spi.access.EntityDataAccess",
          "org.hibernate.cache.spi.access.NaturalIdDataAccess",
          "org.hibernate.metamodel.spi.RuntimeModelCreationContext"
        ]
      }
    ],
    "name": "org.hibernate.persister.entity.SingleTableEntityPersister"
  },
  {
    "name": "org.hibernate.persister.internal.PersisterFactoryImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.persister.internal.StandardPersisterClassResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.property.access.internal.PropertyAccessStrategyResolverStandardImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.proxy.HibernateProxy"
  },
  {
    "name": "org.hibernate.proxy.HibernateProxy",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getHibernateLazyInitializer",
        "parameterTypes": []
      },
      {
        "name": "writeReplace",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.proxy.ProxyConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.proxy.ProxyConfiguration$InterceptorDispatcher",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.query.Query",
    "methods": [
      {
        "name": "getResultList",
        "parameterTypes": []
      },
      {
        "name": "getSingleResult",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getResultList",
        "parameterTypes": []
      }
    ],
    "name": "org.hibernate.query.Query"
  },
  {
    "name": "org.hibernate.query.QueryLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ],
    "name": "org.hibernate.query.QueryLogging_$logger"
  },
  {
    "name": "org.hibernate.query.QueryLogging_$logger_en"
  },
  {
    "name": "org.hibernate.query.QueryLogging_$logger_en_US"
  },
  {
    "name": "org.hibernate.query.QueryProducer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaDelete"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaUpdate"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "org.hibernate.query.criteria.JpaCriteriaInsertSelect"
        ]
      },
      {
        "name": "createNamedMutationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedSelectionQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedSelectionQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNativeMutationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createSelectionQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaQuery"
        ]
      },
      {
        "name": "createSelectionQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createSelectionQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getNamedNativeQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNamedNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getNamedQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaDelete"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaUpdate"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "org.hibernate.query.criteria.JpaCriteriaInsert"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "org.hibernate.query.criteria.JpaCriteriaInsertSelect"
        ]
      },
      {
        "name": "createNamedMutationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedSelectionQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedSelectionQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNativeMutationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createSelectionQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaQuery"
        ]
      },
      {
        "name": "createSelectionQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createSelectionQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getNamedNativeQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNamedNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getNamedQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.hibernate.query.QueryProducer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.query.TypedParameterValue"
  },
  {
    "name": "org.hibernate.query.hql.HqlLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ],
    "name": "org.hibernate.query.hql.HqlLogging_$logger"
  },
  {
    "name": "org.hibernate.query.hql.HqlLogging_$logger_en"
  },
  {
    "name": "org.hibernate.query.hql.HqlLogging_$logger_en_US"
  },
  {
    "methods": [
      {
        "name": "setMaxResults",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "org.hibernate.query.hql.spi.SqmQueryImplementor"
  },
  {
    "name": "org.hibernate.query.sqm.mutation.internal.SqmMultiTableMutationStrategyProviderStandard",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.resource.beans.container.spi.BeanContainer"
  },
  {
    "name": "org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.sql.ast.internal.ParameterMarkerStrategyStandard",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ],
    "name": "org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger"
  },
  {
    "name": "org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger_en"
  },
  {
    "name": "org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.sql.exec.SqlExecLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ],
    "name": "org.hibernate.sql.exec.SqlExecLogger_$logger"
  },
  {
    "name": "org.hibernate.sql.exec.SqlExecLogger_$logger_en"
  },
  {
    "name": "org.hibernate.sql.exec.SqlExecLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.sql.results.LoadingLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ],
    "name": "org.hibernate.sql.results.LoadingLogger_$logger"
  },
  {
    "name": "org.hibernate.sql.results.LoadingLogger_$logger_en"
  },
  {
    "name": "org.hibernate.sql.results.LoadingLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.sql.results.ResultsLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ],
    "name": "org.hibernate.sql.results.ResultsLogger_$logger"
  },
  {
    "name": "org.hibernate.sql.results.ResultsLogger_$logger_en"
  },
  {
    "name": "org.hibernate.sql.results.ResultsLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.sql.results.jdbc.internal.JdbcValuesMappingProducerProviderStandard",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.stat.HibernateMetrics"
  },
  {
    "name": "org.hibernate.stat.internal.StatisticsImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.validator.HibernateValidator"
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.NotNullValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForCharSequence",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
    "methods": [
      {
        "name": "externalClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "externalClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      }
    ],
    "name": "org.hibernate.validator.internal.engine.AbstractConfigurationImpl"
  },
  {
    "name": "org.hibernate.validator.internal.engine.ConfigurationImpl"
  },
  {
    "name": "org.hibernate.validator.internal.engine.resolver.JPATraversableResolver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.hibernate.validator.internal.engine.resolver.JPATraversableResolver"
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Log_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ],
    "name": "org.hibernate.validator.internal.util.logging.Log_$logger"
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Log_$logger_en"
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Log_$logger_en_US"
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle",
    "fields": [
      {
        "name": "INSTANCE"
      }
    ]
  },
  {
    "fields": [
      {
        "name": "INSTANCE"
      }
    ],
    "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle"
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle_en"
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle_en_US"
  },
  {
    "name": "org.influxdb.InfluxDB"
  },
  {
    "name": "org.javers.core.JaversCore",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.diff.DiffFactory",
          "org.javers.core.metamodel.type.TypeMapper",
          "org.javers.core.json.JsonConverter",
          "org.javers.core.commit.CommitFactory",
          "org.javers.repository.api.JaversExtendedRepository",
          "org.javers.repository.jql.QueryRunner",
          "org.javers.core.metamodel.object.GlobalIdFactory",
          "org.javers.core.CoreConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.commit.CommitFactory",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.diff.DiffFactory",
          "org.javers.repository.api.JaversExtendedRepository",
          "org.javers.common.date.DateProvider",
          "org.javers.core.graph.LiveGraphFactory",
          "org.javers.core.snapshot.SnapshotFactory",
          "org.javers.core.snapshot.SnapshotGraphFactory",
          "org.javers.core.snapshot.ChangedCdoSnapshotsFactory",
          "org.javers.core.commit.CommitIdFactory"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.commit.CommitIdFactory",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.CoreConfiguration",
          "org.javers.repository.api.JaversExtendedRepository",
          "org.javers.core.commit.CommitSeqGenerator",
          "org.javers.core.commit.DistributedCommitSeqGenerator"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.commit.CommitSeqGenerator",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.javers.core.commit.DistributedCommitSeqGenerator",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.javers.core.diff.appenders.ArrayChangeAppender",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.diff.appenders.MapChangeAppender"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.diff.appenders.CollectionAsListChangeAppender",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.diff.appenders.MapChangeAppender"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.diff.appenders.MapChangeAppender",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.javers.core.diff.appenders.NewObjectAppender",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.javers.core.diff.appenders.ObjectRemovedAppender",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.javers.core.diff.appenders.OptionalChangeAppender",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.javers.core.diff.appenders.ReferenceChangeAppender",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.javers.core.diff.appenders.SetChangeAppender",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.javers.core.diff.appenders.SimpleListChangeAppender",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.diff.appenders.MapChangeAppender"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.diff.appenders.ValueChangeAppender",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.javers.core.graph.CollectionsCdoFactory",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.scanner.ClassScanner",
          "org.javers.core.graph.TailoredJaversMemberFactory",
          "org.javers.core.metamodel.type.TypeMapper"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.graph.LiveCdoFactory",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.object.GlobalIdFactory",
          "org.javers.core.graph.ObjectAccessHook",
          "org.javers.core.metamodel.type.TypeMapper",
          "org.javers.core.graph.ObjectHasher"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.graph.LiveGraphFactory",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.type.TypeMapper",
          "org.javers.core.graph.LiveCdoFactory",
          "org.javers.core.graph.CollectionsCdoFactory"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.graph.ObjectAccessHookDoNothingImpl",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.javers.core.graph.ObjectHasher",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.snapshot.SnapshotFactory",
          "org.javers.core.json.JsonConverter"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.graph.TailoredJaversFieldFactory",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.javers.core.json.JsonConverterBuilder",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.javers.core.json.typeadapter.change.ArrayChangeTypeAdapter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.type.TypeMapper"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.json.typeadapter.change.ChangeTypeAdapter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.type.TypeMapper"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.json.typeadapter.change.ListChangeTypeAdapter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.type.TypeMapper"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.json.typeadapter.change.MapChangeTypeAdapter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.type.TypeMapper"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.json.typeadapter.change.NewObjectTypeAdapter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.type.TypeMapper"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.json.typeadapter.change.ObjectRemovedTypeAdapter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.type.TypeMapper"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.json.typeadapter.change.ReferenceChangeTypeAdapter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.type.TypeMapper"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.json.typeadapter.change.SetChangeTypeAdapter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.type.TypeMapper"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.json.typeadapter.change.ValueChangeTypeAdapter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.type.TypeMapper"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.json.typeadapter.commit.CdoSnapshotStateTypeAdapter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.javers.core.json.typeadapter.commit.CdoSnapshotTypeAdapter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.type.TypeMapper"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.json.typeadapter.commit.CommitIdTypeAdapter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.javers.core.json.typeadapter.commit.CommitMetadataTypeAdapter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.javers.core.json.typeadapter.commit.GlobalIdTypeAdapter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.type.TypeMapper"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.json.typeadapter.commit.JsonElementFakeAdapter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.javers.core.metamodel.annotation.DiffIgnore",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.javers.core.metamodel.object.GlobalIdFactory",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.type.TypeMapper",
          "org.javers.core.graph.ObjectAccessHook"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.metamodel.scanner.AnnotationNamesProvider",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.javers.core.metamodel.scanner.ClassAnnotationsScanner",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.scanner.AnnotationNamesProvider"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.metamodel.scanner.ClassScanner",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.scanner.PropertyScanner",
          "org.javers.core.metamodel.scanner.ClassAnnotationsScanner"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.metamodel.scanner.FieldBasedPropertyScanner",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.scanner.AnnotationNamesProvider"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.metamodel.type.ListType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "org.javers.core.metamodel.type.TypeMapperLazy"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.metamodel.type.MapType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "org.javers.core.metamodel.type.TypeMapperLazy"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.metamodel.type.PrimitiveType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.reflect.Type"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.metamodel.type.TypeMapper",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.scanner.ClassScanner",
          "org.javers.core.CoreConfiguration",
          "org.javers.core.metamodel.type.DynamicMappingStrategy"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.snapshot.ChangedCdoSnapshotsFactory",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.snapshot.SnapshotFactory"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.snapshot.SnapshotDiffer",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.diff.DiffFactory",
          "org.javers.core.CoreConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.snapshot.SnapshotFactory",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.type.TypeMapper"
        ]
      }
    ]
  },
  {
    "name": "org.javers.core.snapshot.SnapshotGraphFactory",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.repository.api.JaversExtendedRepository"
        ]
      }
    ]
  },
  {
    "name": "org.javers.guava.MultimapChangeAppender",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.type.TypeMapper"
        ]
      }
    ]
  },
  {
    "name": "org.javers.guava.MultisetChangeAppender",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.javers.repository.jql.ChangesQueryRunner",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.repository.jql.QueryCompiler",
          "org.javers.repository.api.JaversExtendedRepository"
        ]
      }
    ]
  },
  {
    "name": "org.javers.repository.jql.QueryCompiler",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.metamodel.object.GlobalIdFactory",
          "org.javers.core.metamodel.type.TypeMapper",
          "org.javers.core.CoreConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.javers.repository.jql.QueryRunner",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.repository.jql.ChangesQueryRunner",
          "org.javers.repository.jql.SnapshotQueryRunner",
          "org.javers.repository.jql.ShadowStreamQueryRunner"
        ]
      }
    ]
  },
  {
    "name": "org.javers.repository.jql.ShadowQueryRunner",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.repository.jql.SnapshotQueryRunner",
          "org.javers.repository.api.JaversExtendedRepository",
          "org.javers.shadow.ShadowFactory",
          "org.javers.core.CoreConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.javers.repository.jql.ShadowStreamQueryRunner",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.repository.jql.ShadowQueryRunner",
          "org.javers.repository.jql.QueryCompiler"
        ]
      }
    ]
  },
  {
    "name": "org.javers.repository.jql.SnapshotQueryRunner",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.repository.jql.QueryCompiler",
          "org.javers.core.metamodel.object.GlobalIdFactory",
          "org.javers.repository.api.JaversExtendedRepository"
        ]
      }
    ]
  },
  {
    "name": "org.javers.shadow.ShadowFactory",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.javers.core.json.JsonConverter",
          "org.javers.core.metamodel.type.TypeMapper"
        ]
      }
    ]
  },
  {
    "name": "org.jboss.logging.Logger"
  },
  {
    "name": "org.jmolecules.ddd.annotation$Identity"
  },
  {
    "name": "org.jmolecules.ddd.annotation.Identity"
  },
  {
    "name": "org.jmolecules.ddd.types$Association"
  },
  {
    "name": "org.jmolecules.ddd.types.Association"
  },
  {
    "name": "org.joda.time.LocalDate"
  },
  {
    "name": "org.joda.time.ReadableInstant"
  },
  {
    "name": "org.jooq.DSLContext"
  },
  {
    "name": "org.locationtech.jts.geom.Geometry"
  },
  {
    "name": "org.neo4j.driver.Driver"
  },
  {
    "name": "org.nzbhydra.DevEndpoint$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.DevEndpoint$$SpringCGLIB$$0"
  },
  {
    "name": "org.nzbhydra.InstanceCounter",
    "fields": [
      {
        "name": "baseConfigHandler"
      },
      {
        "name": "configProvider"
      },
      {
        "name": "clientHttpRequestFactory"
      }
    ],
    "methods": [
      {
        "name": "downloadInstanceCounter",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.NzbHydra",
    "fields": [
      {
        "name": "browserOpener"
      },
      {
        "name": "debugInfosProvider"
      },
      {
        "name": "configProvider"
      },
      {
        "name": "applicationEventPublisher"
      },
      {
        "name": "baseConfigHandler"
      },
      {
        "name": "urlCalculator"
      },
      {
        "name": "genericStorage"
      }
    ],
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "warnIfSettingsOverwritten",
        "parameterTypes": []
      },
      {
        "name": "startupDone",
        "parameterTypes": [
          "org.springframework.boot.context.event.ApplicationReadyEvent"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCacheManager",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.NzbHydraNativeEntrypoint",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.NzbHydra__ApplicationContextInitializer",
    "condition": {
      "typeReachable": "org.nzbhydra.NzbHydra"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.NzbHydra__ApplicationContextInitializer"
  },
  {
    "name": "org.nzbhydra.api.CapsGenerator",
    "fields": [
      {
        "name": "configProvider"
      },
      {
        "name": "updateManager"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "convertToDatabaseColumn",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convertToEntityAttribute",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.nzbhydra.api.CategoryConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.api.ExternalApi",
    "fields": [
      {
        "name": "customQueryAndTitleMappingHandler"
      },
      {
        "name": "configProvider"
      },
      {
        "name": "searchRequestFactory"
      },
      {
        "name": "categoryProvider"
      },
      {
        "name": "fileHandler"
      },
      {
        "name": "newznabXmlTransformer"
      },
      {
        "name": "noApiKeyNeeded"
      },
      {
        "name": "mockSearch"
      },
      {
        "name": "newznabJsonTransformer"
      },
      {
        "name": "searcher"
      },
      {
        "name": "capsGenerator"
      }
    ],
    "methods": [
      {
        "name": "api",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.NewznabParameters",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "handler",
        "parameterTypes": [
          "org.nzbhydra.api.ExternalApiException"
        ]
      },
      {
        "name": "handleUnexpectedError",
        "parameterTypes": [
          "java.lang.Exception"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.api.MockSearch",
    "fields": [
      {
        "name": "newznabXmlTransformer"
      },
      {
        "name": "newznabJsonTransformer"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.api.NewznabJsonTransformer",
    "fields": [
      {
        "name": "nzbHandler"
      },
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.api.NewznabXmlTransformer",
    "fields": [
      {
        "name": "nzbHandler"
      },
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.api.stats.ExternalApiStats",
    "fields": [
      {
        "name": "indexerStatuses"
      },
      {
        "name": "configProvider"
      },
      {
        "name": "history"
      },
      {
        "name": "noApiKeyNeeded"
      },
      {
        "name": "stats"
      }
    ],
    "methods": [
      {
        "name": "apiHistoryDownloads",
        "parameterTypes": [
          "org.nzbhydra.api.stats.ApiHistoryRequest"
        ]
      },
      {
        "name": "apiHistorySearches",
        "parameterTypes": [
          "org.nzbhydra.api.stats.ApiHistoryRequest"
        ]
      },
      {
        "name": "indexerStatuses",
        "parameterTypes": [
          "org.nzbhydra.api.stats.ApiHistoryRequest"
        ]
      },
      {
        "name": "apiStats",
        "parameterTypes": [
          "org.nzbhydra.api.stats.ApiStatsRequest"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.AsyncSupportFilter",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.AsyncSupportFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.auth.AuthAndAccessEventHandler",
    "fields": [
      {
        "name": "attemptService"
      },
      {
        "name": "applicationEventPublisher"
      }
    ],
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.security.authentication.event.AuthenticationSuccessEvent"
        ]
      },
      {
        "name": "unAuthorised",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.AuthWeb",
    "fields": [
      {
        "name": "userInfos"
      }
    ],
    "methods": [
      {
        "name": "askForAdmin",
        "parameterTypes": [
          "jakarta.servlet.http.HttpSession",
          "java.security.Principal"
        ]
      },
      {
        "name": "askForPassword",
        "parameterTypes": [
          "jakarta.servlet.http.HttpSession",
          "java.security.Principal"
        ]
      },
      {
        "name": "userinfos",
        "parameterTypes": [
          "jakarta.servlet.http.HttpSession",
          "java.security.Principal"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.HydraAnonymousAuthenticationFilter",
    "methods": [
      {
        "name": "handleConfigChangedEvent",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigProvider"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigProvider"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      },
      {
        "name": "getAuthorities",
        "parameterTypes": []
      },
      {
        "name": "getPrincipal",
        "parameterTypes": []
      },
      {
        "name": "setAuthenticationDetailsSource",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationDetailsSource"
        ]
      }
    ],
    "name": "org.nzbhydra.auth.HydraAnonymousAuthenticationFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.auth.HydraEmbeddedServletContainer",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      }
    ],
    "name": "org.nzbhydra.auth.HydraEmbeddedServletContainer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.auth.HydraGlobalMethodSecurityConfiguration$$SpringCGLIB$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.HydraGlobalMethodSecurityConfiguration$$SpringCGLIB$$2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.HydraUserDetailsManager",
    "fields": [
      {
        "name": "attemptService"
      }
    ],
    "methods": [
      {
        "name": "handleConfigChangedEvent",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.LoginAndAccessAttemptService",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.LoginAndAccessAttemptService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.auth.PersistentLoginsEntity_"
  },
  {
    "name": "org.nzbhydra.auth.SecurityConfig$$SpringCGLIB$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.SecurityConfig$$SpringCGLIB$$2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.UserInfosProvider",
    "fields": [
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.package-info"
  },
  {
    "name": "org.nzbhydra.backup.BackupAndRestore$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.backup.BackupAndRestore$$SpringCGLIB$$0"
  },
  {
    "name": "org.nzbhydra.backup.BackupTask",
    "fields": [
      {
        "name": "genericStorage"
      },
      {
        "name": "backupAndRestore"
      },
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.backup.BackupWeb$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.backup.BackupWeb$$SpringCGLIB$$0"
  },
  {
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ],
    "name": "org.nzbhydra.cache.ImageCacheConfig",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ],
    "name": "org.nzbhydra.cache.ImageCacheConfig$$SpringCGLIB$$FastClass$$0"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ],
    "name": "org.nzbhydra.cache.ImageCacheConfig$$SpringCGLIB$$FastClass$$1"
  },
  {
    "name": "org.nzbhydra.cache.ImageCacheConfig$1",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.webaccess.HydraOkHttp3ClientHttpRequestFactory"
        ]
      }
    ],
    "name": "org.nzbhydra.cache.ProxyImagesWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.cache.ProxyImagesWeb$$SpringCGLIB$$0"
  },
  {
    "name": "org.nzbhydra.config.BaseConfigHandler",
    "fields": [
      {
        "name": "applicationEventPublisher"
      },
      {
        "name": "baseConfig"
      },
      {
        "name": "baseConfigValidator"
      }
    ],
    "methods": [
      {
        "name": "onShutdown",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.ConfigProvider",
    "fields": [
      {
        "name": "baseConfig"
      }
    ],
    "methods": [
      {
        "name": "handleNewConfig",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.ConfigSpringConfiguration$$SpringCGLIB$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.ConfigSpringConfiguration$$SpringCGLIB$$2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.ConfigWeb",
    "fields": [
      {
        "name": "baseConfigValidator"
      },
      {
        "name": "environment"
      },
      {
        "name": "baseConfigHandler"
      },
      {
        "name": "configProvider"
      },
      {
        "name": "fileSystemBrowser"
      },
      {
        "name": "indexerRepository"
      },
      {
        "name": "urlCalculator"
      }
    ],
    "methods": [
      {
        "name": "setConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig"
        ]
      },
      {
        "name": "getSafeConfig",
        "parameterTypes": []
      },
      {
        "name": "getApiHelp",
        "parameterTypes": [
          "jakarta.servlet.http.HttpSession"
        ]
      },
      {
        "name": "reloadConfig",
        "parameterTypes": []
      },
      {
        "name": "getDirectoryListing",
        "parameterTypes": [
          "org.nzbhydra.config.FileSystemBrowser$DirectoryListingRequest"
        ]
      },
      {
        "name": "getConfig",
        "parameterTypes": [
          "jakarta.servlet.http.HttpSession"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.FileSystemBrowser",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.FileSystemBrowser",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.config.RestartRequired",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.category.NewznabCategoriesDeserializer"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.category.NewznabCategoriesSerializer"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep003to004"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep004to005"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep005to006"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep006to007"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep007to008"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep008to009"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep009to010"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep010to011"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep011to012"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep012to013"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep013to014"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep014to015"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep015to016"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep016to017"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep017to018"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep018to019"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep019to020"
  },
  {
    "name": "org.nzbhydra.config.sensitive.SensitiveData",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.validation.AuthConfigValidator",
    "fields": [
      {
        "name": "userAuthConfigValidator"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.validation.BaseConfigValidator",
    "fields": [
      {
        "name": "configValidatorList"
      },
      {
        "name": "categoriesConfigValidator"
      },
      {
        "name": "searchingConfigValidator"
      },
      {
        "name": "indexerConfigValidator"
      },
      {
        "name": "mainConfigValidator"
      },
      {
        "name": "authConfigValidator"
      },
      {
        "name": "downloadingConfigValidator"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.validation.CategoriesConfigValidator",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.nzbhydra.config.validation.CategoriesConfigValidator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.validation.ConfigValidator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "initializeNewConfig",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "prepareForSaving",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      },
      {
        "name": "updateAfterLoading",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "initializeNewConfig",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "prepareForSaving",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      },
      {
        "name": "updateAfterLoading",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.nzbhydra.config.validation.ConfigValidator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.config.validation.DownloaderConfigValidator",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.nzbhydra.config.validation.DownloaderConfigValidator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.validation.DownloadingConfigValidator",
    "fields": [
      {
        "name": "downloaderConfigValidator"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.validation.IndexerConfigValidator",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "prepareForSaving",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.nzbhydra.config.validation.IndexerConfigValidator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.validation.LoggingConfigValidator",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "prepareForSaving",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.nzbhydra.config.validation.LoggingConfigValidator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.validation.MainConfigValidator",
    "fields": [
      {
        "name": "loggingConfigValidator"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.validation.NotificationConfigValidator",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.nzbhydra.config.validation.NotificationConfigValidator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.validation.SearchingConfigValidator",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "prepareForSaving",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.nzbhydra.config.validation.SearchingConfigValidator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.validation.UserAuthConfigValidator",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "doesValidate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "prepareForSaving",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      },
      {
        "name": "updateAfterLoading",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.nzbhydra.config.validation.UserAuthConfigValidator",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.database.DatabaseRecreationBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.database.DatabaseRecreationConfig",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.database.H2DialectExtended",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo"
        ]
      }
    ],
    "name": "org.nzbhydra.database.H2DialectExtended"
  },
  {
    "name": "org.nzbhydra.debuginfos.DebugInfosProvider$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.debuginfos.DebugInfosProvider$$SpringCGLIB$$0"
  },
  {
    "name": "org.nzbhydra.debuginfos.DebugInfosWeb",
    "fields": [
      {
        "name": "debugInfos"
      },
      {
        "name": "mappingsEndpoint"
      },
      {
        "name": "baseConfigHandler"
      },
      {
        "name": "logContentProvider"
      },
      {
        "name": "configProvider"
      }
    ],
    "methods": [
      {
        "name": "downloadLogFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "executeSqlQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createAndUploadDebugInfos",
        "parameterTypes": []
      },
      {
        "name": "executeSqlUpdate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEndpoints",
        "parameterTypes": []
      },
      {
        "name": "getLogFilenames",
        "parameterTypes": []
      },
      {
        "name": "setLoggingConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createAndProvideDebugInfos",
        "parameterTypes": []
      },
      {
        "name": "logsAsJson",
        "parameterTypes": [
          "java.lang.Integer",
          "java.lang.Integer"
        ]
      },
      {
        "name": "logThreadDump",
        "parameterTypes": []
      },
      {
        "name": "getCurrentLogFile",
        "parameterTypes": []
      },
      {
        "name": "getThreadCpuUsageChartData",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.DownloadStatusUpdater$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.downloading.DownloadStatusUpdater$$SpringCGLIB$$0"
  },
  {
    "name": "org.nzbhydra.downloading.FileDownloadEntity_"
  },
  {
    "name": "org.nzbhydra.downloading.FileDownloadRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.FileDownloadStatus"
  },
  {
    "name": "org.nzbhydra.downloading.FileHandler$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.downloading.FileHandler$$SpringCGLIB$$0"
  },
  {
    "name": "org.nzbhydra.downloading.IndexerSpecificDownloadExceptions",
    "fields": [
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.IndexerUniquenessScoreSaver",
    "fields": [
      {
        "name": "indexerUniquenessScoreEntityRepository"
      },
      {
        "name": "transactionManager"
      },
      {
        "name": "searchResultRepository"
      },
      {
        "name": "indexerSearchRepository"
      },
      {
        "name": "configProvider"
      }
    ],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "onNzbDownloadEvent",
        "parameterTypes": [
          "org.nzbhydra.downloading.FileDownloadEvent"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.IndexerUniquenessScoreSaver$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderInstatiator",
    "fields": [
      {
        "name": "restTemplate"
      },
      {
        "name": "nzbHandler"
      },
      {
        "name": "indexerSpecificDownloadExceptions"
      },
      {
        "name": "requestFactory"
      },
      {
        "name": "searchResultRepository"
      },
      {
        "name": "ssl"
      },
      {
        "name": "configProvider"
      },
      {
        "name": "applicationEventPublisher"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderProvider",
    "fields": [
      {
        "name": "configProvider"
      },
      {
        "name": "downloaderInstatiator"
      }
    ],
    "methods": [
      {
        "name": "handleNewConfig",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderStatusRetrieval",
    "fields": [
      {
        "name": "downloaderProvider"
      },
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderWeb",
    "fields": [
      {
        "name": "downloaderProvider"
      },
      {
        "name": "downloaderStatusRetrieval"
      },
      {
        "name": "configProvider"
      }
    ],
    "methods": [
      {
        "name": "checkConnection",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.DownloaderConfig"
        ]
      },
      {
        "name": "addNzb",
        "parameterTypes": [
          "org.nzbhydra.downloading.AddFilesRequest"
        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getCategories",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderWebSocket",
    "fields": [
      {
        "name": "downloaderStatusRetrieval"
      },
      {
        "name": "configProvider"
      },
      {
        "name": "messagingTemplate"
      }
    ],
    "methods": [
      {
        "name": "connect",
        "parameterTypes": []
      },
      {
        "name": "onShutdown",
        "parameterTypes": []
      },
      {
        "name": "onClientSubscribe",
        "parameterTypes": [
          "org.springframework.web.socket.messaging.SessionSubscribeEvent"
        ]
      },
      {
        "name": "onClientDisconnect",
        "parameterTypes": [
          "org.springframework.web.socket.messaging.SessionDisconnectEvent"
        ]
      },
      {
        "name": "handleNewConfig",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.nzbs.NzbHandlingWeb",
    "fields": [
      {
        "name": "noApiKeyNeeded"
      },
      {
        "name": "fileHandler"
      },
      {
        "name": "configProvider"
      }
    ],
    "methods": [
      {
        "name": "downloadNzbZip",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNzbZipData",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "downloadNzbInternal",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "downloadNzbWithApikey",
        "parameterTypes": [
          "long",
          "java.lang.String"
        ]
      },
      {
        "name": "saveNzbToBlackhole",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "downloadNzbForUsers",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getNfo",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.package-info"
  },
  {
    "name": "org.nzbhydra.downloading.torrents.TorrentFileHandler$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.downloading.torrents.TorrentFileHandler$$SpringCGLIB$$0"
  },
  {
    "name": "org.nzbhydra.downloading.torrents.TorrentHandlingWeb",
    "fields": [
      {
        "name": "configProvider"
      },
      {
        "name": "torrentHandler"
      }
    ],
    "methods": [
      {
        "name": "downloadTorrentForUsers",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "downloadTorrentWithApikey",
        "parameterTypes": [
          "long",
          "java.lang.String"
        ]
      },
      {
        "name": "saveOrSendTorrents",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "downloadTorrentInternal",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.externaltools.ExternalTools",
    "fields": [
      {
        "name": "urlCalculator"
      },
      {
        "name": "webAccess"
      },
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.externaltools.ExternalToolsWeb",
    "fields": [
      {
        "name": "externalTools"
      },
      {
        "name": "configProvider"
      },
      {
        "name": "indexerRepository"
      },
      {
        "name": "urlCalculator"
      }
    ],
    "methods": [
      {
        "name": "getMessages",
        "parameterTypes": []
      },
      {
        "name": "configureExternalTool",
        "parameterTypes": [
          "org.nzbhydra.externaltools.AddRequest"
        ]
      },
      {
        "name": "getDialogInfo",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.fortests.DebugWeb",
    "fields": [
      {
        "name": "urlCalculator"
      },
      {
        "name": "configProvider"
      }
    ],
    "methods": [
      {
        "name": "getHostData",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "testHostSTuff",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.genericstorage.GenericStorage",
    "fields": [
      {
        "name": "baseConfigHandler"
      },
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.genericstorage.GenericStorageWeb",
    "fields": [
      {
        "name": "genericStorage"
      }
    ],
    "methods": [
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "java.lang.String",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.History$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.historystats.History$$SpringCGLIB$$0"
  },
  {
    "name": "org.nzbhydra.historystats.HistoryWeb$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.historystats.HistoryWeb$$SpringCGLIB$$0"
  },
  {
    "name": "org.nzbhydra.historystats.Stats$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.historystats.Stats$$SpringCGLIB$$0"
  },
  {
    "name": "org.nzbhydra.historystats.StatsWeb",
    "fields": [
      {
        "name": "stats"
      }
    ],
    "methods": [
      {
        "name": "getAllStats",
        "parameterTypes": [
          "org.nzbhydra.historystats.stats.StatsRequest"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.Anizb$NewznabHandlingStrategy",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.Anizb$NewznabHandlingStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.Binsearch$NewznabHandlingStrategy",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.Binsearch$NewznabHandlingStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.DevIndexer$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.DevIndexer$$SpringCGLIB$$0"
  },
  {
    "name": "org.nzbhydra.indexers.DevIndexer$DevIndexerHandlingStrategy",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.DevIndexer$DevIndexerHandlingStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.DogNzb$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.DogNzb$$SpringCGLIB$$0"
  },
  {
    "name": "org.nzbhydra.indexers.DogNzb$NewznabHandlingStrategy",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.DogNzb$NewznabHandlingStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.Indexer",
    "methods": [
      {
        "name": "handleNewConfig",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      },
      {
        "name": "persistSearchResults",
        "parameterTypes": [
          "java.util.List",
          "org.nzbhydra.searching.dtoseventsenums.IndexerSearchResult"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "cleanUpTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "completeIndexerSearchResult",
        "parameterTypes": [
          "java.lang.Object",
          "org.nzbhydra.searching.dtoseventsenums.IndexerSearchResult",
          "org.nzbhydra.searching.SearchResultAcceptor$AcceptorResult",
          "org.nzbhydra.searching.searchrequests.SearchRequest",
          "int",
          "java.lang.Integer"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getConfig",
        "parameterTypes": []
      },
      {
        "name": "getIndexerEntity",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getSearchResultItems",
        "parameterTypes": [
          "java.lang.Object",
          "org.nzbhydra.searching.searchrequests.SearchRequest"
        ]
      },
      {
        "name": "handleNewConfig",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "initialize",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig",
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "search",
        "parameterTypes": [
          "org.nzbhydra.searching.searchrequests.SearchRequest",
          "int",
          "java.lang.Integer"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "tryParseDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.Indexer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerAccessResult"
  },
  {
    "name": "org.nzbhydra.indexers.IndexerApiAccessEntityShortRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerApiAccessEntityShort_"
  },
  {
    "name": "org.nzbhydra.indexers.IndexerApiAccessEntity_"
  },
  {
    "name": "org.nzbhydra.indexers.IndexerApiAccessRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerApiAccessType"
  },
  {
    "name": "org.nzbhydra.indexers.IndexerEntity_"
  },
  {
    "name": "org.nzbhydra.indexers.IndexerHandlingStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.IndexerRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerSearchEntity$HibernateProxy$Gx9qhr5z",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.IndexerSearchEntity_"
  },
  {
    "name": "org.nzbhydra.indexers.IndexerSearchRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerStatusesCleanupTask",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigProvider",
          "org.nzbhydra.config.BaseConfigHandler"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigProvider",
          "org.nzbhydra.config.BaseConfigHandler"
        ]
      },
      {
        "name": "cleanup",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.indexers.IndexerStatusesCleanupTask",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerWebAccess",
    "fields": [
      {
        "name": "webAccess"
      },
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.Newznab",
    "fields": [
      {
        "name": "unmarshaller"
      },
      {
        "name": "indexerStatusRepository"
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.Newznab$NewznabHandlingStrategy",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.Newznab$NewznabHandlingStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.NzbGeek$NewznabHandlingStrategy",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.NzbGeek$NewznabHandlingStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.NzbIndex$NewznabHandlingStrategy",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.NzbIndex$NewznabHandlingStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.NzbIndexApi$NewznabHandlingStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.NzbIndexBeta$NewznabHandlingStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.NzbKing$NewznabHandlingStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.QueryGenerator",
    "fields": [
      {
        "name": "configProvider"
      },
      {
        "name": "infoProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.WtfNzb$$SpringCGLIB$$0"
  },
  {
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.WtfNzb$NewznabHandlingStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.capscheck.IndexerChecker",
    "fields": [
      {
        "name": "searchModuleProvider"
      },
      {
        "name": "indexerWebAccess"
      },
      {
        "name": "configProvider"
      },
      {
        "name": "eventPublisher"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.capscheck.IndexerWeb",
    "fields": [
      {
        "name": "jacketConfigRetriever"
      },
      {
        "name": "simpleConnectionChecker"
      },
      {
        "name": "newznabChecker"
      }
    ],
    "methods": [
      {
        "name": "handleCheckerEvent",
        "parameterTypes": [
          "org.nzbhydra.indexers.capscheck.IndexerChecker$CheckerEvent"
        ]
      },
      {
        "name": "readJackettConfig",
        "parameterTypes": [
          "org.nzbhydra.indexers.capscheck.IndexerWeb$JacketConfigReadRequest"
        ]
      },
      {
        "name": "getCheckerMessages",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "testConnection",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      },
      {
        "name": "checkCaps",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.CapsCheckRequest"
        ]
      },
      {
        "name": "getCheckerMessages",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.capscheck.JacketConfigRetriever",
    "fields": [
      {
        "name": "indexerWebAccess"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.capscheck.SimpleConnectionChecker",
    "fields": [
      {
        "name": "indexerWebAccess"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.package-info"
  },
  {
    "name": "org.nzbhydra.indexers.status.IndexerLimitRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.status.IndexerLimit_"
  },
  {
    "name": "org.nzbhydra.indexers.status.IndexerStatusesAndLimits",
    "fields": [
      {
        "name": "indexerLimitRepository"
      },
      {
        "name": "searchModuleProvider"
      },
      {
        "name": "entityManager"
      },
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.status.IndexerStatusesWeb",
    "fields": [
      {
        "name": "indexerStatuses"
      }
    ],
    "methods": [
      {
        "name": "indexerStatuses",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.status.package-info"
  },
  {
    "name": "org.nzbhydra.indexers.torznab.Torznab$NewznabHandlingStrategy",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handlesIndexerConfig",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig"
        ]
      }
    ],
    "name": "org.nzbhydra.indexers.torznab.Torznab$NewznabHandlingStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.logging.ColorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.logging.ColorConverter"
  },
  {
    "name": "org.nzbhydra.logging.EceptionFilter",
    "methods": [
      {
        "name": "updateMarkersFilter",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "decide",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "updateMarkersFilter",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.logging.EceptionFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.logging.LogAnonymizer",
    "fields": [
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.logging.LogContentProvider",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.logging.LogContentProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.logging.LoggingMarkerFilter",
    "fields": [
      {
        "name": "configProvider"
      }
    ],
    "methods": [
      {
        "name": "handleConfigChangedEvent",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      },
      {
        "name": "updateMarkersFilter",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.logging.MdcLogConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.logging.MdcLogConverter"
  },
  {
    "name": "org.nzbhydra.logging.SensitiveDataRemovingPatternLayoutEncoder",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      }
    ],
    "name": "org.nzbhydra.logging.SensitiveDataRemovingPatternLayoutEncoder",
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.json.JsonPubdateDeserializer"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.mapping.newznab.json.JsonPubdateSerializer"
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.JaxbPubdateAdapter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.Xml",
    "methods": [
      {
        "name": "getSearchType",
        "parameterTypes": []
      },
      {
        "name": "setSearchType",
        "parameterTypes": [
          "org.nzbhydra.mapping.newznab.NewznabResponse$SearchType"
        ]
      },
      {
        "name": "getContentHeader",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.package-info"
  },
  {
    "name": "org.nzbhydra.mediainfo.InfoProvider$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.mediainfo.InfoProvider$$SpringCGLIB$$0"
  },
  {
    "name": "org.nzbhydra.mediainfo.MediaInfoWeb",
    "fields": [
      {
        "name": "infoProvider"
      },
      {
        "name": "configProvider"
      }
    ],
    "methods": [
      {
        "name": "autocomplete",
        "parameterTypes": [
          "org.nzbhydra.mediainfo.AutocompleteType",
          "java.lang.String"
        ]
      },
      {
        "name": "redirectTvRageId",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mediainfo.MovieInfoRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.mediainfo.MovieInfo_"
  },
  {
    "name": "org.nzbhydra.mediainfo.TmdbHandler",
    "fields": [
      {
        "name": "tmdbApiKey"
      },
      {
        "name": "webAccess"
      },
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mediainfo.TvInfoRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.mediainfo.TvInfo_"
  },
  {
    "name": "org.nzbhydra.mediainfo.TvMazeHandler",
    "fields": [
      {
        "name": "restTemplate"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mediainfo.package-info"
  },
  {
    "name": "org.nzbhydra.misc.BrowserOpener",
    "fields": [
      {
        "name": "urlCalculator"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.misc.OpenPortChecker",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.misc.OpenPortChecker",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.misc.UserAgentMapper",
    "fields": [
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.misc.WebHooks$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.misc.WebHooks$$SpringCGLIB$$0"
  },
  {
    "name": "org.nzbhydra.news.NewsProvider",
    "fields": [
      {
        "name": "newsUrl"
      },
      {
        "name": "updateManager"
      },
      {
        "name": "shownNewsRepository"
      },
      {
        "name": "webAccess"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.news.NewsWeb",
    "fields": [
      {
        "name": "newsProvider"
      },
      {
        "name": "updateManager"
      },
      {
        "name": "userInfosProvider"
      }
    ],
    "methods": [
      {
        "name": "saveShown",
        "parameterTypes": []
      },
      {
        "name": "handleNewsException",
        "parameterTypes": [
          "java.io.IOException",
          "org.springframework.web.context.request.WebRequest"
        ]
      },
      {
        "name": "getAllNews",
        "parameterTypes": [
          "jakarta.servlet.http.HttpSession",
          "java.security.Principal"
        ]
      },
      {
        "name": "getNewsForCurrentVersionAndAfter",
        "parameterTypes": [
          "java.security.Principal"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.news.ShownNewsRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.news.ShownNews_"
  },
  {
    "name": "org.nzbhydra.news.package-info"
  },
  {
    "name": "org.nzbhydra.notifications.NotificationEntity$MessageType"
  },
  {
    "name": "org.nzbhydra.notifications.NotificationEntity_"
  },
  {
    "name": "org.nzbhydra.notifications.NotificationHandler",
    "fields": [
      {
        "name": "webAccess"
      },
      {
        "name": "notificationRepository"
      },
      {
        "name": "configProvider"
      }
    ],
    "methods": [
      {
        "name": "handleNotification",
        "parameterTypes": [
          "org.nzbhydra.notifications.NotificationEvent"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.notifications.NotificationRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.notifications.NotificationsWeb",
    "fields": [
      {
        "name": "applicationEventPublisher"
      },
      {
        "name": "notificationRepository"
      },
      {
        "name": "messagingTemplate"
      }
    ],
    "methods": [
      {
        "name": "onClientSubscribe",
        "parameterTypes": [
          "org.springframework.web.socket.messaging.SessionSubscribeEvent"
        ]
      },
      {
        "name": "onShutdown",
        "parameterTypes": []
      },
      {
        "name": "testNotification",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "onClientDisconnect",
        "parameterTypes": [
          "org.springframework.web.socket.messaging.SessionDisconnectEvent"
        ]
      },
      {
        "name": "markRead",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.notifications.package-info"
  },
  {
    "name": "org.nzbhydra.problemdetection.DeleteOldDatabaseBackupDetector",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "executeCheck",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.problemdetection.DeleteOldDatabaseBackupDetector",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.problemdetection.OpenPortProblemDetector",
    "fields": [
      {
        "name": "configProvider"
      },
      {
        "name": "openPortChecker"
      },
      {
        "name": "genericStorage"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.problemdetection.OutOfMemoryDetector",
    "fields": [
      {
        "name": "genericStorage"
      },
      {
        "name": "logContentProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.problemdetection.OutdatedWrapperDetector",
    "fields": [
      {
        "name": "genericStorage"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.problemdetection.ProblemDetector",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.problemdetection.ProblemDetectorTask",
    "fields": [
      {
        "name": "genericStorage"
      },
      {
        "name": "problemDetectors"
      }
    ],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.problemdetection.VipExpiryDetector",
    "fields": [
      {
        "name": "configProvider"
      },
      {
        "name": "applicationEventPublisher"
      },
      {
        "name": "genericStorage"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.CustomQueryAndTitleMappingHandler",
    "fields": [
      {
        "name": "configProvider"
      }
    ],
    "methods": [
      {
        "name": "testMapping",
        "parameterTypes": [
          "org.nzbhydra.searching.CustomQueryAndTitleMappingHandler$TestRequest"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.nzbhydra.searching.db.SearchResultRepository",
          "org.nzbhydra.searching.SearchModuleProvider"
        ]
      }
    ],
    "name": "org.nzbhydra.searching.DetailsProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.DuplicateDetector",
    "fields": [
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.IndexerForSearchSelector",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.IndexerForSearchSelector$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.searching.IndexerForSearchSelector$$SpringCGLIB$$0"
  },
  {
    "name": "org.nzbhydra.searching.IndexerInstantiator",
    "fields": [
      {
        "name": "resultAcceptor"
      },
      {
        "name": "unmarshaller"
      },
      {
        "name": "indexerStatusRepository"
      },
      {
        "name": "indexerApiAccessRepository"
      },
      {
        "name": "titleMapping"
      },
      {
        "name": "indexerApiAccessShortRepository"
      },
      {
        "name": "queryGenerator"
      },
      {
        "name": "infoProvider"
      },
      {
        "name": "baseConfigHandler"
      },
      {
        "name": "indexerRepository"
      },
      {
        "name": "searchResultRepository"
      },
      {
        "name": "eventPublisher"
      },
      {
        "name": "indexerWebAccess"
      },
      {
        "name": "categoryProvider"
      },
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.InternalSearchResultProcessor",
    "fields": [
      {
        "name": "fileDownloadRepository"
      },
      {
        "name": "nzbHandler"
      },
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.SearchModuleConfigProvider",
    "fields": [
      {
        "name": "configProvider"
      },
      {
        "name": "searchModuleProvider"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setIndexers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getIndexers",
        "parameterTypes": []
      },
      {
        "name": "handleNewConfig",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.SearchModuleProvider$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.searching.SearchModuleProvider$$SpringCGLIB$$0"
  },
  {
    "name": "org.nzbhydra.searching.SearchResultAcceptor",
    "fields": [
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.SearchWeb",
    "fields": [
      {
        "name": "searcher"
      },
      {
        "name": "searchResultProcessor"
      },
      {
        "name": "searchRequestFactory"
      },
      {
        "name": "customQueryAndTitleMappingHandler"
      },
      {
        "name": "messagingTemplate"
      },
      {
        "name": "categoryProvider"
      }
    ],
    "methods": [
      {
        "name": "handleIndexerSearchFinishedEvent",
        "parameterTypes": [
          "org.nzbhydra.searching.dtoseventsenums.IndexerSearchFinishedEvent"
        ]
      },
      {
        "name": "handleSearchMessageEvent",
        "parameterTypes": [
          "org.nzbhydra.searching.dtoseventsenums.SearchMessageEvent"
        ]
      },
      {
        "name": "search",
        "parameterTypes": [
          "org.nzbhydra.searching.dtoseventsenums.SearchRequestParameters"
        ]
      },
      {
        "name": "handleIndexerSelectionEvent",
        "parameterTypes": [
          "org.nzbhydra.searching.dtoseventsenums.IndexerSelectionEvent"
        ]
      },
      {
        "name": "handleFallbackSearchInitatedEvent",
        "parameterTypes": [
          "org.nzbhydra.searching.dtoseventsenums.FallbackSearchInitiatedEvent"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.searching.Searcher$$SpringCGLIB$$0"
  },
  {
    "name": "org.nzbhydra.searching.cleanup.HistoryCleanupTask",
    "fields": [
      {
        "name": "configProvider"
      },
      {
        "name": "dataSource"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.cleanup.OldResultsCleanupTask$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.searching.cleanup.OldResultsCleanupTask$$SpringCGLIB$$0"
  },
  {
    "name": "org.nzbhydra.searching.cleanup.ShortIndexerApiAccessCleanup$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.searching.cleanup.ShortIndexerApiAccessCleanup$$SpringCGLIB$$0"
  },
  {
    "name": "org.nzbhydra.searching.db.IdentifierKeyValuePair_"
  },
  {
    "name": "org.nzbhydra.searching.db.SearchEntity_"
  },
  {
    "name": "org.nzbhydra.searching.db.SearchRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.db.SearchResultEntity$HibernateProxy$pWMjAShB",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.db.SearchResultEntity_"
  },
  {
    "name": "org.nzbhydra.searching.db.SearchResultRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.db.SearchResultSequenceGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.searching.db.SearchResultSequenceGenerator"
  },
  {
    "name": "org.nzbhydra.searching.db.package-info"
  },
  {
    "name": "org.nzbhydra.searching.dtoseventsenums.SearchResultItem$DownloadType"
  },
  {
    "name": "org.nzbhydra.searching.searchrequests.SearchRequestFactory",
    "fields": [
      {
        "name": "infoProvider"
      },
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.searchrequests.SearchSource"
  },
  {
    "name": "org.nzbhydra.searching.uniqueness.IndexerUniquenessScoreEntityRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.uniqueness.IndexerUniquenessScoreEntity_"
  },
  {
    "name": "org.nzbhydra.searching.uniqueness.package-info"
  },
  {
    "name": "org.nzbhydra.springconfig.AppConfig$$SpringCGLIB$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.springconfig.AppConfig$$SpringCGLIB$$2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.springconfig.ControllerAdvices",
    "methods": [
      {
        "name": "initBinder",
        "parameterTypes": [
          "org.springframework.web.bind.WebDataBinder"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "initBinder",
        "parameterTypes": [
          "org.springframework.web.bind.WebDataBinder"
        ]
      }
    ],
    "name": "org.nzbhydra.springconfig.ControllerAdvices",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.springconfig.GracefulSpringShutdown",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      }
    ],
    "name": "org.nzbhydra.springconfig.GracefulSpringShutdown",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ],
    "name": "org.nzbhydra.springnative.ReflectionMarker",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.systemcontrol.SystemControl",
    "fields": [
      {
        "name": "environment"
      },
      {
        "name": "applicationEventPublisher"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.systemcontrol.SystemControlWeb",
    "fields": [
      {
        "name": "systemControl"
      },
      {
        "name": "urlCalculator"
      }
    ],
    "methods": [
      {
        "name": "restart",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "ping",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.tasks.HydraTask",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.tasks.HydraTaskConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.tasks.HydraTaskConfiguration$$SpringCGLIB$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.tasks.HydraTaskConfiguration$$SpringCGLIB$$2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.tasks.HydraTaskScheduler",
    "fields": [
      {
        "name": "scheduler"
      },
      {
        "name": "environment"
      }
    ],
    "methods": [
      {
        "name": "onShutdown",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.tasks.HydraTasksWeb",
    "fields": [
      {
        "name": "hydraTaskScheduler"
      }
    ],
    "methods": [
      {
        "name": "runTask",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTasks",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.update.AutomaticUpdater$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ],
    "name": "org.nzbhydra.update.AutomaticUpdater$$SpringCGLIB$$0"
  },
  {
    "name": "org.nzbhydra.update.UpdateManager",
    "fields": [
      {
        "name": "repositoryBaseUrl"
      },
      {
        "name": "blockedVersionsUrl"
      },
      {
        "name": "currentVersionString"
      },
      {
        "name": "backupAndRestore"
      },
      {
        "name": "environment"
      },
      {
        "name": "changelogUrl"
      },
      {
        "name": "systemControl"
      },
      {
        "name": "genericStorage"
      },
      {
        "name": "webAccess"
      },
      {
        "name": "applicationEventPublisher"
      },
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.update.UpdatesWeb",
    "fields": [
      {
        "name": "outdatedWrapperDetector"
      },
      {
        "name": "genericStorage"
      },
      {
        "name": "configProvider"
      },
      {
        "name": "environment"
      },
      {
        "name": "updateManager"
      }
    ],
    "methods": [
      {
        "name": "handleUpdateException",
        "parameterTypes": [
          "org.nzbhydra.update.UpdateException"
        ]
      },
      {
        "name": "resetCache",
        "parameterTypes": []
      },
      {
        "name": "setWrapperOutdatedWarningShown",
        "parameterTypes": []
      },
      {
        "name": "getSimpleInfos",
        "parameterTypes": []
      },
      {
        "name": "ignore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getVersionHistoryForAutomaticUpdate",
        "parameterTypes": []
      },
      {
        "name": "handleUpdateEvent",
        "parameterTypes": [
          "org.nzbhydra.update.UpdateManager$UpdateEvent"
        ]
      },
      {
        "name": "isWrapperOutdated",
        "parameterTypes": []
      },
      {
        "name": "installUpdate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getVersionHistory",
        "parameterTypes": []
      },
      {
        "name": "getChangesSince",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUpdateMessages",
        "parameterTypes": []
      },
      {
        "name": "getVersions",
        "parameterTypes": []
      },
      {
        "name": "ackHistoryForAutomaticUpdateShown",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.ErrorHandler",
    "methods": [
      {
        "name": "handleConflict",
        "parameterTypes": [
          "java.lang.Exception",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "handleConflict",
        "parameterTypes": [
          "java.lang.Exception",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ],
    "name": "org.nzbhydra.web.ErrorHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.web.HelpWeb",
    "methods": [
      {
        "name": "askForAdmin",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.HelpWeb",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.web.HydraErrorController",
    "methods": [
      {
        "name": "handleError",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "java.lang.Exception"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.error.ErrorAttributes"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.error.ErrorAttributes"
        ]
      }
    ],
    "name": "org.nzbhydra.web.HydraErrorController",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.web.Interceptor",
    "fields": [
      {
        "name": "userAgentMapper"
      },
      {
        "name": "configProvider"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.MainWeb",
    "fields": [
      {
        "name": "configProvider"
      },
      {
        "name": "environment"
      },
      {
        "name": "userInfos"
      }
    ],
    "methods": [
      {
        "name": "loggedOut",
        "parameterTypes": [
          "jakarta.servlet.http.HttpSession",
          "java.security.Principal",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "system",
        "parameterTypes": [
          "jakarta.servlet.http.HttpSession",
          "java.security.Principal"
        ]
      },
      {
        "name": "index",
        "parameterTypes": [
          "jakarta.servlet.http.HttpSession",
          "java.security.Principal",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "logout",
        "parameterTypes": [
          "jakarta.servlet.http.HttpSession",
          "java.security.Principal",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "index2",
        "parameterTypes": [
          "jakarta.servlet.http.HttpSession",
          "java.security.Principal"
        ]
      },
      {
        "name": "stats",
        "parameterTypes": [
          "jakarta.servlet.http.HttpSession",
          "java.security.Principal"
        ]
      },
      {
        "name": "config",
        "parameterTypes": [
          "jakarta.servlet.http.HttpSession",
          "java.security.Principal"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.NzbDetailsWeb",
    "fields": [
      {
        "name": "configProvider"
      },
      {
        "name": "searchResultRepository"
      }
    ],
    "methods": [
      {
        "name": "details",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.UrlCalculator",
    "fields": [
      {
        "name": "environment"
      },
      {
        "name": "serverContextPath"
      },
      {
        "name": "serverAddress"
      },
      {
        "name": "serverPort"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.WebConfiguration$$SpringCGLIB$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.WebConfiguration$$SpringCGLIB$$2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "configureClientInboundChannel",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.ChannelRegistration"
        ]
      },
      {
        "name": "configureClientOutboundChannel",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.ChannelRegistration"
        ]
      },
      {
        "name": "configureMessageBroker",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.MessageBrokerRegistry"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "onShutdown",
        "parameterTypes": []
      },
      {
        "name": "registerStompEndpoints",
        "parameterTypes": [
          "org.springframework.web.socket.config.annotation.StompEndpointRegistry"
        ]
      }
    ],
    "name": "org.nzbhydra.web.WebSocketConfig",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.nzbhydra.web.WelcomeWeb",
    "fields": [
      {
        "name": "configProvider"
      },
      {
        "name": "baseConfigHandler"
      }
    ],
    "methods": [
      {
        "name": "setWelcomeShown",
        "parameterTypes": []
      },
      {
        "name": "logfileContent",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.webaccess.HydraOkHttp3ClientHttpRequestFactory",
    "fields": [
      {
        "name": "configProvider"
      },
      {
        "name": "timeout"
      },
      {
        "name": "ssl"
      }
    ],
    "methods": [
      {
        "name": "handleConfigChangedEvent",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.webaccess.Ssl",
    "fields": [
      {
        "name": "configProvider"
      }
    ],
    "methods": [
      {
        "name": "handleConfigChangedEvent",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.webaccess.WebAccess",
    "fields": [
      {
        "name": "requestFactory"
      },
      {
        "name": "timeout"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.quartz.Scheduler"
  },
  {
    "name": "org.reactivestreams$Publisher"
  },
  {
    "name": "org.reactivestreams.Publisher"
  },
  {
    "name": "org.slf4j.Logger"
  },
  {
    "name": "org.slf4j.LoggerFactory"
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.slf4j.spi.LocationAwareLogger",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "log",
        "parameterTypes": [
          "org.slf4j.Marker",
          "java.lang.String",
          "int",
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "org.slf4j.spi.LocationAwareLogger",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.slf4j.spi.SLF4JServiceProvider"
  },
  {
    "name": "org.springframework.amqp.rabbit.core.RabbitTemplate"
  },
  {
    "name": "org.springframework.aop.Advisor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "isPerInstance",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.aop.Advisor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.PointcutAdvisor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.SpringProxy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.TargetClassAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getTargetClass",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getTargetClass",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.aop.TargetClassAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "getTargetSource",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.aop.framework.Advised",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.framework.Advised",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "getTargetSource",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.AopInfrastructureBean",
    "queryAllPublicMethods": true
  },
  {
    "fields": [
      {
        "name": "toString"
      }
    ],
    "name": "org.springframework.aop.framework.ProxyConfig"
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "methods": [
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.scope.ScopedObject",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.scope.ScopedProxyFactoryBean",
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getAdvice",
        "parameterTypes": []
      },
      {
        "name": "getAdviceBeanName",
        "parameterTypes": []
      },
      {
        "name": "setAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "setAdviceBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.support.AbstractPointcutAdvisor",
    "methods": [
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aot.generate.Generated",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aot.hint.annotation.Reflective",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aot.hint.annotation.RegisterReflectionForBinding",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.batch.core.launch.JobLauncher"
  },
  {
    "name": "org.springframework.beans.factory.Aware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanClassLoaderAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactoryAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanNameAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.DisposableBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.FactoryBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isSingleton",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "isSingleton",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.beans.factory.FactoryBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.InitializingBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.SmartInitializingSingleton",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "onShutdown",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.beans.factory.SmartInitializingSingleton",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Autowired",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.annotation.Qualifier",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.annotation.Qualifier",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Value",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.aot.BeanRegistrationAotProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isBeanExcludedFromAotProcessing",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setSingleton",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "org.springframework.beans.factory.config.AbstractFactoryBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "onShutdown",
        "parameterTypes": []
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.beans.factory.config.BeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInstantiation",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInstantiation",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessProperties",
        "parameterTypes": [
          "org.springframework.beans.PropertyValues",
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "determineCandidateConstructors",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "getEarlyBeanReference",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "predictBeanType",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "resetBeanDefinition",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.beans.factory.support.NullBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.LazyInitializationExcludeFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.SpringApplication",
    "methods": [
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.ConfigurableEnvironment"
        ]
      },
      {
        "name": "setLazyInitialization",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBeanNameGenerator",
        "parameterTypes": [
          "org.springframework.beans.factory.support.BeanNameGenerator"
        ]
      },
      {
        "name": "setLogStartupInfo",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setListeners",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setBanner",
        "parameterTypes": [
          "org.springframework.boot.Banner"
        ]
      },
      {
        "name": "getAllSources",
        "parameterTypes": []
      },
      {
        "name": "setAddConversionService",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowBeanDefinitionOverriding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDefaultProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setAdditionalProfiles",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setInitializers",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setMainApplicationClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setAddCommandLineProperties",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSources",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getInitializers",
        "parameterTypes": []
      },
      {
        "name": "setApplicationStartup",
        "parameterTypes": [
          "org.springframework.core.metrics.ApplicationStartup"
        ]
      },
      {
        "name": "getAdditionalProfiles",
        "parameterTypes": []
      },
      {
        "name": "getResourceLoader",
        "parameterTypes": []
      },
      {
        "name": "setRegisterShutdownHook",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getEnvironmentPrefix",
        "parameterTypes": []
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "setHeadless",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMainApplicationClass",
        "parameterTypes": []
      },
      {
        "name": "getApplicationStartup",
        "parameterTypes": []
      },
      {
        "name": "setEnvironmentPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAllowCircularReferences",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getListeners",
        "parameterTypes": []
      },
      {
        "name": "setWebApplicationType",
        "parameterTypes": [
          "org.springframework.boot.WebApplicationType"
        ]
      },
      {
        "name": "setBannerMode",
        "parameterTypes": [
          "org.springframework.boot.Banner$Mode"
        ]
      },
      {
        "name": "getWebApplicationType",
        "parameterTypes": []
      },
      {
        "name": "getSources",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContextFactory",
        "parameterTypes": [
          "org.springframework.boot.ApplicationContextFactory"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.SpringApplication"
  },
  {
    "name": "org.springframework.boot.SpringApplication",
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.audit.AuditEventRepository"
  },
  {
    "name": "org.springframework.boot.actuate.audit.AuditEventsEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration$ProbesCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "beansEndpoint",
        "parameterTypes": [
          "org.springframework.context.ConfigurableApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "cachesEndpoint",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "cachesEndpointWebExtension",
        "parameterTypes": [
          "org.springframework.boot.actuate.cache.CachesEndpoint"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint",
    "methods": [
      {
        "name": "conditions",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "conditionsReportEndpoint",
        "parameterTypes": [
          "org.springframework.context.ConfigurableApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "configurationPropertiesReportEndpointWebExtension",
        "parameterTypes": [
          "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint",
          "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties"
        ]
      },
      {
        "name": "configurationPropertiesReportEndpoint",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "getShowValues",
        "parameterTypes": []
      },
      {
        "name": "setShowValues",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "endpointOperationParameterMapper",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "endpointCachingOperationInvokerAdvisor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.OnAvailableEndpointCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure"
  },
  {
    "methods": [
      {
        "name": "match",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.ExposableEndpoint"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "endpointObjectMapper",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAllowedOrigins",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setExposedHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": []
      },
      {
        "name": "getAllowCredentials",
        "parameterTypes": []
      },
      {
        "name": "getAllowedMethods",
        "parameterTypes": []
      },
      {
        "name": "getAllowedHeaders",
        "parameterTypes": []
      },
      {
        "name": "getExposedHeaders",
        "parameterTypes": []
      },
      {
        "name": "getAllowedOriginPatterns",
        "parameterTypes": []
      },
      {
        "name": "setAllowCredentials",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAllowedMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setAllowedHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getAllowedOrigins",
        "parameterTypes": []
      },
      {
        "name": "setAllowedOriginPatterns",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getRootPath",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.EndpointId"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "servletExposeExcludePropertyEndpointFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "servletEndpointRegistrar",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
          "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
          "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      },
      {
        "name": "controllerExposeExcludePropertyEndpointFilter",
        "parameterTypes": []
      },
      {
        "name": "pathMappedEndpoints",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "endpointMediaTypes",
        "parameterTypes": []
      },
      {
        "name": "webEndpointPathMapper",
        "parameterTypes": []
      },
      {
        "name": "webExposeExcludePropertyEndpointFilter",
        "parameterTypes": []
      },
      {
        "name": "controllerEndpointDiscoverer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "webEndpointDiscoverer",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
          "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "servletEndpointDiscoverer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getBasePath",
        "parameterTypes": []
      },
      {
        "name": "setBasePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDiscovery",
        "parameterTypes": []
      },
      {
        "name": "getPathMapping",
        "parameterTypes": []
      },
      {
        "name": "getExposure",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Discovery",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setExclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getExclude",
        "parameterTypes": []
      },
      {
        "name": "setInclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getInclude",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "controllerEndpointHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      },
      {
        "name": "endpointObjectMapperWebMvcConfigurer",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper"
        ]
      },
      {
        "name": "webEndpointServletHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
          "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
          "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
          "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "configureMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration$EndpointObjectMapperWebMvcConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "environmentEndpoint",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "environmentEndpointWebExtension",
        "parameterTypes": [
          "org.springframework.boot.actuate.env.EnvironmentEndpoint",
          "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getShowValues",
        "parameterTypes": []
      },
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "setShowValues",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.flyway.FlywayEndpointAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "flywayEndpoint",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.flyway.FlywayEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "registerContributor",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNames",
        "parameterTypes": []
      },
      {
        "name": "getPrimary",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "pingHealthContributor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "healthContributorRegistry",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.health.HealthEndpointGroups",
          "java.util.Map",
          "java.util.Map"
        ]
      },
      {
        "name": "healthEndpointGroupsBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "healthEndpointGroups",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      },
      {
        "name": "healthEndpoint",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.HealthContributorRegistry",
          "org.springframework.boot.actuate.health.HealthEndpointGroups",
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      },
      {
        "name": "healthStatusAggregator",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      },
      {
        "name": "healthHttpCodeStatusMapper",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupMembershipValidator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getLogging",
        "parameterTypes": []
      },
      {
        "name": "getShowDetails",
        "parameterTypes": []
      },
      {
        "name": "setShowDetails",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      },
      {
        "name": "getGroup",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Group",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getExclude",
        "parameterTypes": []
      },
      {
        "name": "getShowDetails",
        "parameterTypes": []
      },
      {
        "name": "getInclude",
        "parameterTypes": []
      },
      {
        "name": "setExclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setShowDetails",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      },
      {
        "name": "getAdditionalPath",
        "parameterTypes": []
      },
      {
        "name": "setInclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setAdditionalPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Logging",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setSlowIndicatorThreshold",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getSlowIndicatorThreshold",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "healthEndpointWebExtension",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.HealthContributorRegistry",
          "org.springframework.boot.actuate.health.HealthEndpointGroups",
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "healthEndpointWebMvcHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
          "org.springframework.boot.actuate.health.HealthEndpointGroups"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
    "methods": [
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getShowComponents",
        "parameterTypes": []
      },
      {
        "name": "setShowComponents",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getHttpMapping",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.OnEnabledHealthIndicatorCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorFallback"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getGit",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties$Git",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getMode",
        "parameterTypes": []
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "org.springframework.boot.actuate.info.InfoPropertiesInfoContributor$Mode"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "infoEndpoint",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.OnEnabledInfoContributorCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "dbHealthContributor",
        "parameterTypes": [
          "java.util.Map",
          "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreRoutingDataSources",
        "parameterTypes": []
      },
      {
        "name": "setIgnoreRoutingDataSources",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration$LogFileCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getExternalFile",
        "parameterTypes": []
      },
      {
        "name": "setExternalFile",
        "parameterTypes": [
          "java.io.File"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "loggersEndpoint",
        "parameterTypes": [
          "org.springframework.boot.logging.LoggingSystem",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration$OnEnabledLoggingSystemCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "heapDumpWebEndpoint",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dumpEndpoint",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPercentilesHistogram",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPercentiles",
        "parameterTypes": []
      },
      {
        "name": "isPercentilesHistogram",
        "parameterTypes": []
      },
      {
        "name": "setPercentiles",
        "parameterTypes": [
          "double[]"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jvmGcMetrics",
        "parameterTypes": []
      },
      {
        "name": "classLoaderMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmMemoryMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmThreadMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmInfoMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmCompilationMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmHeapPressureMetrics",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "logbackMetrics",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration$LogbackLoggingCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "propertiesMeterFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      },
      {
        "name": "meterRegistryPostProcessor",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "micrometerClock",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration$MeterRegistryCloser",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "metricsEndpoint",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getEnable",
        "parameterTypes": []
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getWeb",
        "parameterTypes": []
      },
      {
        "name": "setUseGlobalRegistry",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isUseGlobalRegistry",
        "parameterTypes": []
      },
      {
        "name": "getDistribution",
        "parameterTypes": []
      },
      {
        "name": "getSystem",
        "parameterTypes": []
      },
      {
        "name": "getTags",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getRepository",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data$Repository",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMetricName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAutotime",
        "parameterTypes": []
      },
      {
        "name": "getMetricName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getMinimumExpectedValue",
        "parameterTypes": []
      },
      {
        "name": "getSlo",
        "parameterTypes": []
      },
      {
        "name": "getExpiry",
        "parameterTypes": []
      },
      {
        "name": "getPercentiles",
        "parameterTypes": []
      },
      {
        "name": "getMaximumExpectedValue",
        "parameterTypes": []
      },
      {
        "name": "getPercentilesHistogram",
        "parameterTypes": []
      },
      {
        "name": "getBufferLength",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getDiskspace",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System$Diskspace",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getPaths",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getServer",
        "parameterTypes": []
      },
      {
        "name": "getClient",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMaxUriTags",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getMaxUriTags",
        "parameterTypes": []
      },
      {
        "name": "getRequest",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client$ClientRequest",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMetricName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMetricName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMaxUriTags",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getRequest",
        "parameterTypes": []
      },
      {
        "name": "getMaxUriTags",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server$ServerRequest",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getMetricName",
        "parameterTypes": []
      },
      {
        "name": "setMetricName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.NoOpMeterRegistryConfiguration"
  },
  {
    "methods": [
      {
        "name": "accept",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id",
          "io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
        ]
      },
      {
        "name": "map",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MeterValue"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "diskSpaceMetrics",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      },
      {
        "name": "uptimeMetrics",
        "parameterTypes": []
      },
      {
        "name": "fileDescriptorMetrics",
        "parameterTypes": []
      },
      {
        "name": "processorMetrics",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration$CaffeineCacheMeterBinderProviderConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "caffeineCacheMeterBinderProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration$CaffeineCacheMeterBinderProviderConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsRegistrarConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry",
          "java.util.Collection",
          "java.util.Map"
        ]
      },
      {
        "name": "cacheMetricsRegistrar",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry",
          "java.util.Collection",
          "java.util.Map"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsRegistrarConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.data.MetricsRepositoryMethodInvocationListenerBeanPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      },
      {
        "name": "metricsRepositoryMethodInvocationListenerBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "metricsRepositoryMethodInvocationListener",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider"
        ]
      },
      {
        "name": "repositoryTagsProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.OnMetricsExportEnabledCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "simpleMeterRegistry",
        "parameterTypes": [
          "io.micrometer.core.instrument.simple.SimpleConfig",
          "io.micrometer.core.instrument.Clock"
        ]
      },
      {
        "name": "simpleConfig",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setStep",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMode",
        "parameterTypes": []
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "io.micrometer.core.instrument.simple.CountingMode"
        ]
      },
      {
        "name": "getStep",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "mode",
        "parameterTypes": []
      },
      {
        "name": "prefix",
        "parameterTypes": []
      },
      {
        "name": "step",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimplePropertiesConfigAdapter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dataSourcePoolMetadataMeterBinder",
        "parameterTypes": [
          "java.util.Map",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration$DataSourcePoolMetadataMeterBinder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "hikariDataSourceMeterBinder",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration$HikariDataSourceMeterBinder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "startupTimeMetrics",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "bindTaskExecutorsToRegistry",
        "parameterTypes": [
          "java.util.Map",
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "tomcatMetricsBinder",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "observationRegistryPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "observationRegistry",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultMeterObservationHandler",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$ObservedAspectConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "metricsObservationHandlerGrouping",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getHttp",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getServer",
        "parameterTypes": []
      },
      {
        "name": "getClient",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Client",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getRequests",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Client$ClientRequests",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Server",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getRequests",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Server$ServerRequests",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "map",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "test",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.observation.PropertiesObservationFilterPredicate",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "metricsHttpClientUriTagFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "observationRestTemplateCustomizer",
        "parameterTypes": [
          "io.micrometer.observation.ObservationRegistry",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      },
      {
        "name": "webMvcObservationFilter",
        "parameterTypes": [
          "io.micrometer.observation.ObservationRegistry",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "metricsHttpServerUriTagFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.sbom.SbomProperties"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.sbom.SbomEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "scheduledTasksEndpoint",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "configureTasks",
        "parameterTypes": [
          "org.springframework.scheduling.config.ScheduledTaskRegistrar"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration$ObservabilitySchedulingConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration$MvcRequestMatcherConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "requestMatcherProvider",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration$MvcRequestMatcherConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.startup.StartupEndpointAutoConfiguration$ApplicationStartupCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "diskSpaceHealthIndicator",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setThreshold",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "getThreshold",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.tracing.LogCorrelationEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.tracing.MicrometerTracingAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextType"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesEndpointAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "mappingsEndpoint",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "servletMappingDescriptionProvider",
        "parameterTypes": []
      },
      {
        "name": "filterMappingDescriptionProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dispatcherServletMappingDescriptionProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextConfigurationImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementPortType"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      },
      {
        "name": "getSsl",
        "parameterTypes": []
      },
      {
        "name": "getBasePath",
        "parameterTypes": []
      },
      {
        "name": "getAddress",
        "parameterTypes": []
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setBasePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "getPort",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.OnManagementPortCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementServletContext",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "servletWebChildContextFactory",
        "parameterTypes": []
      },
      {
        "name": "managementServletContext",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.beans.BeansEndpoint",
    "methods": [
      {
        "name": "beans",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.beans.BeansEndpoint",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpoint",
    "methods": [
      {
        "name": "cache",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "clearCaches",
        "parameterTypes": []
      },
      {
        "name": "clearCache",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "caches",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpoint",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpointWebExtension",
    "methods": [
      {
        "name": "cache",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "clearCache",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpointWebExtension",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.context.ShutdownEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint",
    "methods": [
      {
        "name": "configurationProperties",
        "parameterTypes": []
      },
      {
        "name": "configurationPropertiesWithPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension",
    "methods": [
      {
        "name": "configurationProperties",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.SecurityContext"
        ]
      },
      {
        "name": "configurationPropertiesWithPrefix",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.SecurityContext",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.EndpointFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.EndpointsSupplier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.ShowEditor"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.DeleteOperation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.Endpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "createOperationKey",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Operation"
        ]
      },
      {
        "name": "getEndpoints",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointExtension",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.ReadOperation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.Selector",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.WriteOperation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "mapParameterValue",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.invoke.OperationParameter",
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.EndpointId",
          "org.springframework.boot.actuate.endpoint.OperationType",
          "org.springframework.boot.actuate.endpoint.invoke.OperationParameters",
          "org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "iterator",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.PathMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "onStartup",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter"
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getEndpoints",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$LinksHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$LinksHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AdditionalHealthEndpointPathsWebMvcHandlerMapping",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping$WebMvcLinksHandler",
    "methods": [
      {
        "name": "links",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping$WebMvcLinksHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint",
    "methods": [
      {
        "name": "environment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "environmentEntry",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension",
    "methods": [
      {
        "name": "environmentEntry",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.SecurityContext",
          "java.lang.String"
        ]
      },
      {
        "name": "environment",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.SecurityContext",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.flyway.FlywayEndpoint",
    "methods": [
      {
        "name": "flywayBeans",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.flyway.FlywayEndpoint",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "health",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.health.AbstractHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.ContributorRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "registerContributor",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.health.DefaultContributorRegistry",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getContributor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "registerContributor",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "unregisterContributor",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.health.DefaultHealthContributorRegistry",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthContributor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthContributorRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpoint",
    "methods": [
      {
        "name": "health",
        "parameterTypes": []
      },
      {
        "name": "healthForPath",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpoint",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointGroups",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "get",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.AdditionalHealthEndpointPath"
        ]
      },
      {
        "name": "getAllWithAdditionalPath",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.WebServerNamespace"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "get",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.AdditionalHealthEndpointPath"
        ]
      },
      {
        "name": "getAllWithAdditionalPath",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.WebServerNamespace"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.health.HealthEndpointGroups",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getHealth",
        "parameterTypes": [
          "java.lang.Object",
          "boolean"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.health.HealthEndpointSupport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointWebExtension",
    "methods": [
      {
        "name": "health",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.ApiVersion",
          "org.springframework.boot.actuate.endpoint.web.WebServerNamespace",
          "org.springframework.boot.actuate.endpoint.SecurityContext"
        ]
      },
      {
        "name": "health",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.ApiVersion",
          "org.springframework.boot.actuate.endpoint.web.WebServerNamespace",
          "org.springframework.boot.actuate.endpoint.SecurityContext",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointWebExtension",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthIndicator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getHealth",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getHealth",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.health.HealthIndicator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HttpCodeStatusMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.NamedContributors",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "stream",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "stream",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.health.NamedContributors",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.PingHealthIndicator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getStatusCode",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.Status"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getAggregateStatus",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.health.SimpleStatusAggregator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.StatusAggregator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getAggregateStatus",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.Status[]"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getAggregateStatus",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.Status[]"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.health.StatusAggregator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.info.InfoEndpoint",
    "methods": [
      {
        "name": "info",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.info.InfoEndpoint",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.logging.LogFileWebEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint",
    "methods": [
      {
        "name": "loggerLevels",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "configureLogLevel",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.boot.logging.LogLevel"
        ]
      },
      {
        "name": "loggers",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.management.HeapDumpWebEndpoint",
    "methods": [
      {
        "name": "heapDump",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.management.HeapDumpWebEndpoint",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.management.ThreadDumpEndpoint",
    "methods": [
      {
        "name": "textThreadDump",
        "parameterTypes": []
      },
      {
        "name": "threadDump",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.management.ThreadDumpEndpoint",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.MetricsEndpoint",
    "methods": [
      {
        "name": "metric",
        "parameterTypes": [
          "java.lang.String",
          "java.util.List"
        ]
      },
      {
        "name": "listNames",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.MetricsEndpoint",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.cache.CacheMetricsRegistrar",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getMeterBinder",
        "parameterTypes": [
          "org.springframework.cache.Cache",
          "java.lang.Iterable"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.metrics.cache.CaffeineCacheMeterBinderProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "repositoryTags",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.metrics.data.DefaultRepositoryTagsProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "afterInvocation",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "supportsEventType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.web.client.RestClient$Builder"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.metrics.web.client.ObservationRestClientCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.web.client.RestTemplate"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.metrics.web.client.ObservationRestTemplateCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ],
    "name": "org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.sbom.SbomEndpoint",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.sbom.SbomEndpointWebExtension",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint",
    "methods": [
      {
        "name": "scheduledTasks",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint$IntervalTaskDescriptor",
    "methods": [
      {
        "name": "getInitialDelay",
        "parameterTypes": []
      },
      {
        "name": "getInterval",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository"
  },
  {
    "name": "org.springframework.boot.actuate.web.exchanges.HttpExchangesEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.MappingDescriptionProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint",
    "methods": [
      {
        "name": "mappings",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "describeMappings",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "getMappingName",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletsMappingDescriptionProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "describeMappings",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "getMappingName",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.web.mappings.servlet.FiltersMappingDescriptionProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.RegistrationMappingDescription",
    "methods": [
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "describeMappings",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "getMappingName",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.actuate.web.mappings.servlet.ServletsMappingDescriptionProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.ansi.AnsiOutput$EnabledEditor"
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackage",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureAfter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureBefore",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureOrder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.EnableAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "applicationAvailability",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnCloudPlatform",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnJndi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnThreading",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnCloudPlatformCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnJndiCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnResourceCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.SearchStrategy"
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultLifecycleProcessor",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.context.LifecycleProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getTimeoutPerShutdownPhase",
        "parameterTypes": []
      },
      {
        "name": "setTimeoutPerShutdownPhase",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "propertySourcesPlaceholderConfigurer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "persistenceExceptionTranslationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration$BootstrapExecutorCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration$JpaRepositoriesImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
        ]
      },
      {
        "name": "pageableCustomizer",
        "parameterTypes": []
      },
      {
        "name": "sortCustomizer",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getPageable",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getMaxPageSize",
        "parameterTypes": []
      },
      {
        "name": "setDefaultPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setOneIndexedParameters",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getQualifierDelimiter",
        "parameterTypes": []
      },
      {
        "name": "setPageParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": []
      },
      {
        "name": "isOneIndexedParameters",
        "parameterTypes": []
      },
      {
        "name": "getPageParameter",
        "parameterTypes": []
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSizeParameter",
        "parameterTypes": []
      },
      {
        "name": "setSizeParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDefaultPageSize",
        "parameterTypes": []
      },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxPageSize",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Sort",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getSortParameter",
        "parameterTypes": []
      },
      {
        "name": "setSortParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "stringOrNumberMigrationVersionConverter",
        "parameterTypes": []
      },
      {
        "name": "flywayDefaultDdlModeProvider",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayAutoConfigurationRuntimeHints"
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "flyway",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.flyway.FlywayProperties",
          "org.springframework.core.io.ResourceLoader",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.autoconfigure.flyway.ResourceProviderCustomizer"
        ]
      },
      {
        "name": "flywayInitializer",
        "parameterTypes": [
          "org.flywaydb.core.Flyway",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayDataSourceCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$PropertiesFlywayConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "getConvertibleTypes",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayDataSource",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCleanDisabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getRepeatableSqlMigrationPrefix",
        "parameterTypes": []
      },
      {
        "name": "setCleanOnValidationError",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getTable",
        "parameterTypes": []
      },
      {
        "name": "setTarget",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSkipDefaultCallbacks",
        "parameterTypes": []
      },
      {
        "name": "getSqlMigrationSeparator",
        "parameterTypes": []
      },
      {
        "name": "setMixed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSqlMigrationSuffixes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setScriptPlaceholderPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getIgnoreMigrationPatterns",
        "parameterTypes": []
      },
      {
        "name": "isCreateSchemas",
        "parameterTypes": []
      },
      {
        "name": "setScriptPlaceholderSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPlaceholders",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setOracleSqlplusWarn",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDryRunOutput",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "getOracleSqlplus",
        "parameterTypes": []
      },
      {
        "name": "getLockRetryCount",
        "parameterTypes": []
      },
      {
        "name": "getDryRunOutput",
        "parameterTypes": []
      },
      {
        "name": "getBaselineVersion",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getConnectRetriesInterval",
        "parameterTypes": []
      },
      {
        "name": "isValidateOnMigrate",
        "parameterTypes": []
      },
      {
        "name": "setDefaultSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFailOnMissingLocations",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isFailOnMissingLocations",
        "parameterTypes": []
      },
      {
        "name": "setTablespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOracleKerberosCacheFile",
        "parameterTypes": []
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUndoSqlMigrationPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStream",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "isCleanOnValidationError",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setValidateMigrationNaming",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getScriptPlaceholderSuffix",
        "parameterTypes": []
      },
      {
        "name": "isBaselineOnMigrate",
        "parameterTypes": []
      },
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "getPlaceholders",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getOracleWalletLocation",
        "parameterTypes": []
      },
      {
        "name": "getDefaultSchema",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "setTable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemas",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSqlServerKerberosLoginFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBaselineDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLicenseKey",
        "parameterTypes": []
      },
      {
        "name": "setOracleSqlplus",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getPlaceholderSuffix",
        "parameterTypes": []
      },
      {
        "name": "setSqlMigrationPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKerberosConfigFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCherryPick",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "isValidateMigrationNaming",
        "parameterTypes": []
      },
      {
        "name": "setSkipDefaultResolvers",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setConnectRetriesInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setOracleKerberosCacheFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isCleanDisabled",
        "parameterTypes": []
      },
      {
        "name": "setSkipDefaultCallbacks",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getInstalledBy",
        "parameterTypes": []
      },
      {
        "name": "getBaselineDescription",
        "parameterTypes": []
      },
      {
        "name": "getPlaceholderPrefix",
        "parameterTypes": []
      },
      {
        "name": "isMixed",
        "parameterTypes": []
      },
      {
        "name": "setRepeatableSqlMigrationPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getSchemas",
        "parameterTypes": []
      },
      {
        "name": "setCreateSchemas",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setConnectRetries",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getCherryPick",
        "parameterTypes": []
      },
      {
        "name": "getInitSqls",
        "parameterTypes": []
      },
      {
        "name": "getTarget",
        "parameterTypes": []
      },
      {
        "name": "isOutOfOrder",
        "parameterTypes": []
      },
      {
        "name": "getSqlMigrationPrefix",
        "parameterTypes": []
      },
      {
        "name": "getSkipExecutingMigrations",
        "parameterTypes": []
      },
      {
        "name": "getKerberosConfigFile",
        "parameterTypes": []
      },
      {
        "name": "setBaselineOnMigrate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInstalledBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getScriptPlaceholderPrefix",
        "parameterTypes": []
      },
      {
        "name": "getUndoSqlMigrationPrefix",
        "parameterTypes": []
      },
      {
        "name": "getLocations",
        "parameterTypes": []
      },
      {
        "name": "setOutputQueryResults",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setPlaceholderPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidateOnMigrate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrorOverrides",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setInitSqls",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSqlMigrationSeparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStream",
        "parameterTypes": []
      },
      {
        "name": "getConnectRetries",
        "parameterTypes": []
      },
      {
        "name": "isSkipDefaultResolvers",
        "parameterTypes": []
      },
      {
        "name": "setSkipExecutingMigrations",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setOracleWalletLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreMigrationPatterns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDetectEncoding",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setPlaceholderSeparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBatch",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setJdbcProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getOracleSqlplusWarn",
        "parameterTypes": []
      },
      {
        "name": "getOutputQueryResults",
        "parameterTypes": []
      },
      {
        "name": "setPlaceholderReplacement",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getErrorOverrides",
        "parameterTypes": []
      },
      {
        "name": "setLockRetryCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPlaceholderSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLicenseKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTablespace",
        "parameterTypes": []
      },
      {
        "name": "setBaselineVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSqlMigrationSuffixes",
        "parameterTypes": []
      },
      {
        "name": "getJdbcProperties",
        "parameterTypes": []
      },
      {
        "name": "getDetectEncoding",
        "parameterTypes": []
      },
      {
        "name": "getSqlServerKerberosLoginFile",
        "parameterTypes": []
      },
      {
        "name": "getBatch",
        "parameterTypes": []
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isPlaceholderReplacement",
        "parameterTypes": []
      },
      {
        "name": "getPlaceholderSeparator",
        "parameterTypes": []
      },
      {
        "name": "isGroup",
        "parameterTypes": []
      },
      {
        "name": "setOutOfOrder",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getSchemaManagement",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.flyway.FlywaySchemaManagementProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.NativeImageResourceProviderCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.ResourceProviderCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "standardGsonBuilderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.gson.GsonProperties"
        ]
      },
      {
        "name": "gsonBuilder",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "gson",
        "parameterTypes": [
          "com.google.gson.GsonBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "com.google.gson.GsonBuilder"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonBuilderCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisableInnerClassSerialization",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getExcludeFieldsWithoutExposeAnnotation",
        "parameterTypes": []
      },
      {
        "name": "setLenient",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setGenerateNonExecutableJson",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEnableComplexMapKeySerialization",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setFieldNamingPolicy",
        "parameterTypes": [
          "com.google.gson.FieldNamingPolicy"
        ]
      },
      {
        "name": "getDisableHtmlEscaping",
        "parameterTypes": []
      },
      {
        "name": "getPrettyPrinting",
        "parameterTypes": []
      },
      {
        "name": "setSerializeNulls",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getEnableComplexMapKeySerialization",
        "parameterTypes": []
      },
      {
        "name": "getLenient",
        "parameterTypes": []
      },
      {
        "name": "getGenerateNonExecutableJson",
        "parameterTypes": []
      },
      {
        "name": "setDisableHtmlEscaping",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getSerializeNulls",
        "parameterTypes": []
      },
      {
        "name": "getFieldNamingPolicy",
        "parameterTypes": []
      },
      {
        "name": "getDisableInnerClassSerialization",
        "parameterTypes": []
      },
      {
        "name": "setPrettyPrinting",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setLongSerializationPolicy",
        "parameterTypes": [
          "com.google.gson.LongSerializationPolicy"
        ]
      },
      {
        "name": "getDateFormat",
        "parameterTypes": []
      },
      {
        "name": "setExcludeFieldsWithoutExposeAnnotation",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getLongSerializationPolicy",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$JacksonAndJsonbUnavailableCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$PreferGsonOrJacksonAndJsonbUnavailableCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "iterator",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "messageConverters",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$HttpMessageConvertersAutoConfigurationRuntimeHints"
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "stringHttpMessageConverter",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "mappingJackson2HttpMessageConverter",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getBuild",
        "parameterTypes": []
      },
      {
        "name": "getGit",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jsonComponentModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "standardJacksonObjectMapperBuilderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jsonMixinModule",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.jackson.JsonMixinModuleEntries"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonObjectMapperBuilder",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonObjectMapper",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "parameterNamesModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getVisibility",
        "parameterTypes": []
      },
      {
        "name": "setTimeZone",
        "parameterTypes": [
          "java.util.TimeZone"
        ]
      },
      {
        "name": "setPropertyNamingStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getGenerator",
        "parameterTypes": []
      },
      {
        "name": "getParser",
        "parameterTypes": []
      },
      {
        "name": "setDefaultLeniency",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getSerialization",
        "parameterTypes": []
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "getPropertyNamingStrategy",
        "parameterTypes": []
      },
      {
        "name": "getDefaultLeniency",
        "parameterTypes": []
      },
      {
        "name": "getDateFormat",
        "parameterTypes": []
      },
      {
        "name": "getMapper",
        "parameterTypes": []
      },
      {
        "name": "getDefaultPropertyInclusion",
        "parameterTypes": []
      },
      {
        "name": "getTimeZone",
        "parameterTypes": []
      },
      {
        "name": "setDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "setDefaultPropertyInclusion",
        "parameterTypes": [
          "com.fasterxml.jackson.annotation.JsonInclude$Include"
        ]
      },
      {
        "name": "getDeserialization",
        "parameterTypes": []
      },
      {
        "name": "setConstructorDetector",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy"
        ]
      },
      {
        "name": "getConstructorDetector",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceAvailableCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Dbcp2"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dataSource",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$OracleUcp"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Tomcat"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getXa",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "setXa",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa"
        ]
      },
      {
        "name": "setGenerateUniqueName",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEmbeddedDatabaseConnection",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJndiName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getJndiName",
        "parameterTypes": []
      },
      {
        "name": "setEmbeddedDatabaseConnection",
        "parameterTypes": [
          "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "isGenerateUniqueName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getTemplate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setFetchSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxRows",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getQueryTimeout",
        "parameterTypes": []
      },
      {
        "name": "setQueryTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getMaxRows",
        "parameterTypes": []
      },
      {
        "name": "getFetchSize",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jdbcTemplate",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.jdbc.JdbcProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "namedParameterJdbcTemplate",
        "parameterTypes": [
          "org.springframework.jdbc.core.JdbcTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getXaDataSourceClassName",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "hikariPoolDataSourceMetadataProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getNaming",
        "parameterTypes": []
      },
      {
        "name": "getDdlAuto",
        "parameterTypes": []
      },
      {
        "name": "setDdlAuto",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties$Naming",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getImplicitStrategy",
        "parameterTypes": []
      },
      {
        "name": "getPhysicalStrategy",
        "parameterTypes": []
      },
      {
        "name": "setPhysicalStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImplicitStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration",
    "queriedMethods": [
      {
        "name": "transactionManager",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "entityManagerFactory",
        "parameterTypes": [
          "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
          "org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes"
        ]
      },
      {
        "name": "entityManagerFactoryBuilder",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "jpaVendorAdapter",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "entityManagerFactory",
        "parameterTypes": [
          "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
          "org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes"
        ]
      },
      {
        "name": "entityManagerFactoryBuilder",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "jpaVendorAdapter",
        "parameterTypes": []
      },
      {
        "name": "transactionManager",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getOpenInView",
        "parameterTypes": []
      },
      {
        "name": "isGenerateDdl",
        "parameterTypes": []
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setShowSql",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDatabasePlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOpenInView",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getMappingResources",
        "parameterTypes": []
      },
      {
        "name": "getDatabase",
        "parameterTypes": []
      },
      {
        "name": "isShowSql",
        "parameterTypes": []
      },
      {
        "name": "getDatabasePlatform",
        "parameterTypes": []
      },
      {
        "name": "setDatabase",
        "parameterTypes": [
          "org.springframework.orm.jpa.vendor.Database"
        ]
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "setGenerateDdl",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.ConditionalOnDefaultWebSecurity",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityDataConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties$Filter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getDispatcherTypes",
        "parameterTypes": []
      },
      {
        "name": "setDispatcherTypes",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties$User",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration$ReactiveUserDetailsServiceCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getRequestMatcher",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.security.servlet.AntPathRequestMatcherProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.RequestMatcherProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "authenticationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "securityFilterChainRegistration",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.security.SecurityProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.service.connection.ConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dataSourceScriptDatabaseInitializer",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getSeparator",
        "parameterTypes": []
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPlatform",
        "parameterTypes": []
      },
      {
        "name": "setContinueOnError",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMode",
        "parameterTypes": []
      },
      {
        "name": "isContinueOnError",
        "parameterTypes": []
      },
      {
        "name": "setDataLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getSchemaLocations",
        "parameterTypes": []
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "getDataLocations",
        "parameterTypes": []
      },
      {
        "name": "setSeparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "setPlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemaLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "org.springframework.boot.sql.init.DatabaseInitializationMode"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer"
  },
  {
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.ssl.FileWatcher",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader",
          "org.springframework.boot.autoconfigure.ssl.SslProperties"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "registerBundles",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundleRegistry"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "isExcluded",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.beans.factory.config.BeanDefinition",
          "java.lang.Class"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.task.ScheduledBeanLazyInitializationExcludeFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "taskExecutorBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": []
      },
      {
        "name": "getPool",
        "parameterTypes": []
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCoreSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getQueueCapacity",
        "parameterTypes": []
      },
      {
        "name": "setQueueCapacity",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getMaxSize",
        "parameterTypes": []
      },
      {
        "name": "getCoreSize",
        "parameterTypes": []
      },
      {
        "name": "getKeepAlive",
        "parameterTypes": []
      },
      {
        "name": "setMaxSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setAllowCoreThreadTimeout",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isAllowCoreThreadTimeout",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isAwaitTermination",
        "parameterTypes": []
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setAwaitTermination",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "taskSchedulerBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "scheduledBeanLazyInitializationExcludeFilter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": []
      },
      {
        "name": "getPool",
        "parameterTypes": []
      },
      {
        "name": "getShutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getSize",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": []
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setAwaitTermination",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isAwaitTermination",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "templateEngine",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$ReactiveTemplateEngineConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "defaultTemplateResolver",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
          "org.springframework.context.ApplicationContext"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "thymeleafViewResolver",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
          "org.thymeleaf.spring6.SpringTemplateEngine"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getServlet",
        "parameterTypes": []
      },
      {
        "name": "isCache",
        "parameterTypes": []
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setEnableSpringElCompiler",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMode",
        "parameterTypes": []
      },
      {
        "name": "getTemplateResolverOrder",
        "parameterTypes": []
      },
      {
        "name": "getViewNames",
        "parameterTypes": []
      },
      {
        "name": "getPrefix",
        "parameterTypes": []
      },
      {
        "name": "isRenderHiddenMarkersBeforeCheckboxes",
        "parameterTypes": []
      },
      {
        "name": "setTemplateResolverOrder",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "isEnableSpringElCompiler",
        "parameterTypes": []
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getReactive",
        "parameterTypes": []
      },
      {
        "name": "isCheckTemplate",
        "parameterTypes": []
      },
      {
        "name": "setCheckTemplateLocation",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCheckTemplate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isCheckTemplateLocation",
        "parameterTypes": []
      },
      {
        "name": "setRenderHiddenMarkersBeforeCheckboxes",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setViewNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setExcludedViewNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "getExcludedViewNames",
        "parameterTypes": []
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getMediaTypes",
        "parameterTypes": []
      },
      {
        "name": "setChunkedModeViewNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setFullModeViewNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getFullModeViewNames",
        "parameterTypes": []
      },
      {
        "name": "getMaxChunkSize",
        "parameterTypes": []
      },
      {
        "name": "setMediaTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMaxChunkSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getChunkedModeViewNames",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Servlet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getContentType",
        "parameterTypes": []
      },
      {
        "name": "setProducePartialOutputWhileProcessing",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isProducePartialOutputWhileProcessing",
        "parameterTypes": []
      },
      {
        "name": "setContentType",
        "parameterTypes": [
          "org.springframework.util.MimeType"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true
  },
  {
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.transaction.TransactionManager"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.PlatformTransactionManagerCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "platformTransactionManagerCustomizers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "transactionTemplate",
        "parameterTypes": [
          "org.springframework.transaction.PlatformTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getDefaultTimeout",
        "parameterTypes": []
      },
      {
        "name": "setDefaultTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getRollbackOnCommitFailure",
        "parameterTypes": []
      },
      {
        "name": "setRollbackOnCommitFailure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultValidator",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "methodValidationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getIncludeMessage",
        "parameterTypes": []
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIncludeStacktrace",
        "parameterTypes": []
      },
      {
        "name": "isIncludeException",
        "parameterTypes": []
      },
      {
        "name": "setIncludeException",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIncludeMessage",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getWhitelabel",
        "parameterTypes": []
      },
      {
        "name": "setIncludeStacktrace",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setIncludeBindingErrors",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "getIncludeBindingErrors",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties$Whitelabel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getPort",
        "parameterTypes": []
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      },
      {
        "name": "getError",
        "parameterTypes": []
      },
      {
        "name": "getServlet",
        "parameterTypes": []
      },
      {
        "name": "getForwardHeadersStrategy",
        "parameterTypes": []
      },
      {
        "name": "setMaxHttpHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getReactive",
        "parameterTypes": []
      },
      {
        "name": "getJetty",
        "parameterTypes": []
      },
      {
        "name": "getCompression",
        "parameterTypes": []
      },
      {
        "name": "getUndertow",
        "parameterTypes": []
      },
      {
        "name": "setServerHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "setMaxHttpRequestHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getSsl",
        "parameterTypes": []
      },
      {
        "name": "getAddress",
        "parameterTypes": []
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      },
      {
        "name": "getMaxHttpRequestHeaderSize",
        "parameterTypes": []
      },
      {
        "name": "getServerHeader",
        "parameterTypes": []
      },
      {
        "name": "setForwardHeadersStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
        ]
      },
      {
        "name": "getHttp2",
        "parameterTypes": []
      },
      {
        "name": "getTomcat",
        "parameterTypes": []
      },
      {
        "name": "getNetty",
        "parameterTypes": []
      },
      {
        "name": "getShutdown",
        "parameterTypes": []
      },
      {
        "name": "getMaxHttpHeaderSize",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategyEditor"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMaxHttpFormPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setConnectionIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getMaxHttpFormPostSize",
        "parameterTypes": []
      },
      {
        "name": "getThreads",
        "parameterTypes": []
      },
      {
        "name": "getConnectionIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "getAccesslog",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setFileDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIgnorePaths",
        "parameterTypes": []
      },
      {
        "name": "setCustomFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAppend",
        "parameterTypes": []
      },
      {
        "name": "setRetentionPeriod",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "getFilename",
        "parameterTypes": []
      },
      {
        "name": "setAppend",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCustomFormat",
        "parameterTypes": []
      },
      {
        "name": "getRetentionPeriod",
        "parameterTypes": []
      },
      {
        "name": "getFileDateFormat",
        "parameterTypes": []
      },
      {
        "name": "setFormat",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog$FORMAT"
        ]
      },
      {
        "name": "getFormat",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIgnorePaths",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMaxQueueCapacity",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMin",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setSelectors",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getSelectors",
        "parameterTypes": []
      },
      {
        "name": "getMin",
        "parameterTypes": []
      },
      {
        "name": "setAcceptors",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "getMaxQueueCapacity",
        "parameterTypes": []
      },
      {
        "name": "getAcceptors",
        "parameterTypes": []
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getMaxKeepAliveRequests",
        "parameterTypes": []
      },
      {
        "name": "setMaxInitialLineLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getMaxChunkSize",
        "parameterTypes": []
      },
      {
        "name": "setMaxKeepAliveRequests",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxChunkSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setInitialBufferSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setValidateHeaders",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": []
      },
      {
        "name": "isValidateHeaders",
        "parameterTypes": []
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getMaxInitialLineLength",
        "parameterTypes": []
      },
      {
        "name": "getH2cMaxContentLength",
        "parameterTypes": []
      },
      {
        "name": "getInitialBufferSize",
        "parameterTypes": []
      },
      {
        "name": "setH2cMaxContentLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getSession",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive$Session",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCookie",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getSession",
        "parameterTypes": []
      },
      {
        "name": "isRegisterDefaultServlet",
        "parameterTypes": []
      },
      {
        "name": "getContextPath",
        "parameterTypes": []
      },
      {
        "name": "setContextPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getJsp",
        "parameterTypes": []
      },
      {
        "name": "getContextParameters",
        "parameterTypes": []
      },
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "setApplicationDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRegisterDefaultServlet",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getApplicationDisplayName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isRejectIllegalHeader",
        "parameterTypes": []
      },
      {
        "name": "getMaxHttpFormPostSize",
        "parameterTypes": []
      },
      {
        "name": "setUseRelativeRedirects",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getRelaxedQueryChars",
        "parameterTypes": []
      },
      {
        "name": "setKeepAliveTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setAcceptCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setProcessorCache",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxSwallowSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getRedirectContextRoot",
        "parameterTypes": []
      },
      {
        "name": "getBasedir",
        "parameterTypes": []
      },
      {
        "name": "getMbeanregistry",
        "parameterTypes": []
      },
      {
        "name": "getMaxConnections",
        "parameterTypes": []
      },
      {
        "name": "getResource",
        "parameterTypes": []
      },
      {
        "name": "getAccesslog",
        "parameterTypes": []
      },
      {
        "name": "getRelaxedPathChars",
        "parameterTypes": []
      },
      {
        "name": "isUseRelativeRedirects",
        "parameterTypes": []
      },
      {
        "name": "getRemoteip",
        "parameterTypes": []
      },
      {
        "name": "setRelaxedQueryChars",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getBackgroundProcessorDelay",
        "parameterTypes": []
      },
      {
        "name": "setMaxHttpFormPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getMaxSwallowSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxKeepAliveRequests",
        "parameterTypes": []
      },
      {
        "name": "setUriEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "getAcceptCount",
        "parameterTypes": []
      },
      {
        "name": "setRedirectContextRoot",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAdditionalTldSkipPatterns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getThreads",
        "parameterTypes": []
      },
      {
        "name": "setBackgroundProcessorDelay",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getKeepAliveTimeout",
        "parameterTypes": []
      },
      {
        "name": "setBasedir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setRelaxedPathChars",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getProcessorCache",
        "parameterTypes": []
      },
      {
        "name": "setMaxKeepAliveRequests",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getAdditionalTldSkipPatterns",
        "parameterTypes": []
      },
      {
        "name": "getUriEncoding",
        "parameterTypes": []
      },
      {
        "name": "setMaxConnections",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRejectIllegalHeader",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setRenameOnRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isRenameOnRotate",
        "parameterTypes": []
      },
      {
        "name": "setCheckExists",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "isRotate",
        "parameterTypes": []
      },
      {
        "name": "getFileDateFormat",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConditionIf",
        "parameterTypes": []
      },
      {
        "name": "setConditionIf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIpv6Canonical",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBuffered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPattern",
        "parameterTypes": []
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequestAttributesEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isBuffered",
        "parameterTypes": []
      },
      {
        "name": "isCheckExists",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "isRequestAttributesEnabled",
        "parameterTypes": []
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDirectory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConditionUnless",
        "parameterTypes": []
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConditionUnless",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMaxDays",
        "parameterTypes": []
      },
      {
        "name": "isIpv6Canonical",
        "parameterTypes": []
      },
      {
        "name": "getPrefix",
        "parameterTypes": []
      },
      {
        "name": "getSuffix",
        "parameterTypes": []
      },
      {
        "name": "setFileDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDirectory",
        "parameterTypes": []
      },
      {
        "name": "setMaxDays",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Mbeanregistry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getTrustedProxies",
        "parameterTypes": []
      },
      {
        "name": "getHostHeader",
        "parameterTypes": []
      },
      {
        "name": "setProtocolHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInternalProxies",
        "parameterTypes": []
      },
      {
        "name": "setInternalProxies",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHostHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRemoteIpHeader",
        "parameterTypes": []
      },
      {
        "name": "setProtocolHeaderHttpsValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProtocolHeaderHttpsValue",
        "parameterTypes": []
      },
      {
        "name": "setTrustedProxies",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemoteIpHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPortHeader",
        "parameterTypes": []
      },
      {
        "name": "getProtocolHeader",
        "parameterTypes": []
      },
      {
        "name": "setPortHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCacheTtl",
        "parameterTypes": []
      },
      {
        "name": "isAllowCaching",
        "parameterTypes": []
      },
      {
        "name": "setAllowCaching",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCacheTtl",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getMinSpare",
        "parameterTypes": []
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "setMinSpare",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMaxHttpPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": []
      },
      {
        "name": "getNoRequestTimeout",
        "parameterTypes": []
      },
      {
        "name": "setEagerFilterInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDirectBuffers",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAlwaysSetKeepAlive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "getMaxParameters",
        "parameterTypes": []
      },
      {
        "name": "setMaxCookies",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setAllowEncodedSlash",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMaxHttpPostSize",
        "parameterTypes": []
      },
      {
        "name": "isAlwaysSetKeepAlive",
        "parameterTypes": []
      },
      {
        "name": "setDecodeUrl",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setBufferSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "isEagerFilterInit",
        "parameterTypes": []
      },
      {
        "name": "isDecodeUrl",
        "parameterTypes": []
      },
      {
        "name": "setPreservePathOnForward",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxParameters",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getUrlCharset",
        "parameterTypes": []
      },
      {
        "name": "getMaxCookies",
        "parameterTypes": []
      },
      {
        "name": "isAllowEncodedSlash",
        "parameterTypes": []
      },
      {
        "name": "getThreads",
        "parameterTypes": []
      },
      {
        "name": "getDirectBuffers",
        "parameterTypes": []
      },
      {
        "name": "setMaxHeaders",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getOptions",
        "parameterTypes": []
      },
      {
        "name": "isPreservePathOnForward",
        "parameterTypes": []
      },
      {
        "name": "setNoRequestTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getMaxHeaders",
        "parameterTypes": []
      },
      {
        "name": "getBufferSize",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": []
      },
      {
        "name": "getPattern",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "getDir",
        "parameterTypes": []
      },
      {
        "name": "isRotate",
        "parameterTypes": []
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Options",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getServer",
        "parameterTypes": []
      },
      {
        "name": "getSocket",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setWorker",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getWorker",
        "parameterTypes": []
      },
      {
        "name": "setIo",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getIo",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setLocaleResolver",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
        ]
      },
      {
        "name": "getLocaleResolver",
        "parameterTypes": []
      },
      {
        "name": "getResources",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isAddMappings",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": []
      },
      {
        "name": "setAddMappings",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getChain",
        "parameterTypes": []
      },
      {
        "name": "setStaticLocations",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getStaticLocations",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isUseLastModified",
        "parameterTypes": []
      },
      {
        "name": "setUseLastModified",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCachecontrol",
        "parameterTypes": []
      },
      {
        "name": "setPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getPeriod",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getProxyRevalidate",
        "parameterTypes": []
      },
      {
        "name": "getSMaxAge",
        "parameterTypes": []
      },
      {
        "name": "setStaleWhileRevalidate",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setNoCache",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCachePrivate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNoStore",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCachePublic",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getNoStore",
        "parameterTypes": []
      },
      {
        "name": "getCachePublic",
        "parameterTypes": []
      },
      {
        "name": "getCachePrivate",
        "parameterTypes": []
      },
      {
        "name": "setStaleIfError",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setSMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getStaleIfError",
        "parameterTypes": []
      },
      {
        "name": "getMustRevalidate",
        "parameterTypes": []
      },
      {
        "name": "getStaleWhileRevalidate",
        "parameterTypes": []
      },
      {
        "name": "setNoTransform",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setProxyRevalidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getNoTransform",
        "parameterTypes": []
      },
      {
        "name": "getNoCache",
        "parameterTypes": []
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": []
      },
      {
        "name": "setMustRevalidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isCache",
        "parameterTypes": []
      },
      {
        "name": "getStrategy",
        "parameterTypes": []
      },
      {
        "name": "setCompressed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": []
      },
      {
        "name": "isCompressed",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getFixed",
        "parameterTypes": []
      },
      {
        "name": "getContent",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Content",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPaths",
        "parameterTypes": []
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getPaths",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "fromBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fromBundle",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundle"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.client.AutoConfiguredRestClientSsl",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.web.client.RestClient$Builder"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientSsl",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "restTemplateBuilderConfigurer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "restTemplateBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "tomcatWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dispatcherServlet",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dispatcherServletRegistration",
        "parameterTypes": [
          "org.springframework.web.servlet.DispatcherServlet",
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getPrefix",
        "parameterTypes": []
      },
      {
        "name": "getRelativePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getServletUrlMapping",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getPrefix",
        "parameterTypes": []
      },
      {
        "name": "getRelativePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getServletUrlMapping",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "addUrlMappings",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "setUrlMappings",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "localeCharsetMappingsCustomizer",
        "parameterTypes": []
      },
      {
        "name": "characterEncodingFilter",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
        ]
      },
      {
        "name": "multipartResolver",
        "parameterTypes": []
      },
      {
        "name": "multipartConfigElement",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getMaxRequestSize",
        "parameterTypes": []
      },
      {
        "name": "isResolveLazily",
        "parameterTypes": []
      },
      {
        "name": "setMaxFileSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxRequestSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFileSizeThreshold",
        "parameterTypes": []
      },
      {
        "name": "setFileSizeThreshold",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getMaxFileSize",
        "parameterTypes": []
      },
      {
        "name": "setResolveLazily",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "tomcatServletWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "servletWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedJetty"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "tomcatServletWebServerFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow"
  },
  {
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isPublishRequestHandledEvents",
        "parameterTypes": []
      },
      {
        "name": "getAsync",
        "parameterTypes": []
      },
      {
        "name": "setIgnoreDefaultModelOnRedirect",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isDispatchOptionsRequest",
        "parameterTypes": []
      },
      {
        "name": "setDispatchOptionsRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDispatchTraceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMessageCodesResolverFormat",
        "parameterTypes": []
      },
      {
        "name": "isDispatchTraceRequest",
        "parameterTypes": []
      },
      {
        "name": "isLogRequestDetails",
        "parameterTypes": []
      },
      {
        "name": "getFormat",
        "parameterTypes": []
      },
      {
        "name": "getStaticPathPattern",
        "parameterTypes": []
      },
      {
        "name": "isLogResolvedException",
        "parameterTypes": []
      },
      {
        "name": "getWebjarsPathPattern",
        "parameterTypes": []
      },
      {
        "name": "setLogResolvedException",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPathmatch",
        "parameterTypes": []
      },
      {
        "name": "setStaticPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getView",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreDefaultModelOnRedirect",
        "parameterTypes": []
      },
      {
        "name": "setPublishRequestHandledEvents",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getServlet",
        "parameterTypes": []
      },
      {
        "name": "getProblemdetails",
        "parameterTypes": []
      },
      {
        "name": "setLogRequestDetails",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMessageCodesResolverFormat",
        "parameterTypes": [
          "org.springframework.validation.DefaultMessageCodesResolver$Format"
        ]
      },
      {
        "name": "getContentnegotiation",
        "parameterTypes": []
      },
      {
        "name": "isThrowExceptionIfNoHandlerFound",
        "parameterTypes": []
      },
      {
        "name": "setThrowExceptionIfNoHandlerFound",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWebjarsPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Async",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getRequestTimeout",
        "parameterTypes": []
      },
      {
        "name": "setRequestTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getMediaTypes",
        "parameterTypes": []
      },
      {
        "name": "setMediaTypes",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "isFavorParameter",
        "parameterTypes": []
      },
      {
        "name": "getParameterName",
        "parameterTypes": []
      },
      {
        "name": "setFavorParameter",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setDateTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTime",
        "parameterTypes": []
      },
      {
        "name": "getDateTime",
        "parameterTypes": []
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getMatchingStrategy",
        "parameterTypes": []
      },
      {
        "name": "setMatchingStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$MatchingStrategy"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Problemdetails",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getLoadOnStartup",
        "parameterTypes": []
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoadOnStartup",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getSuffix",
        "parameterTypes": []
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "resolveErrorView",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "org.springframework.http.HttpStatus",
          "java.util.Map"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "preserveErrorControllerTargetClassPostProcessor",
        "parameterTypes": []
      },
      {
        "name": "errorPageCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
        ]
      },
      {
        "name": "errorAttributes",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.web.WebProperties"
        ]
      },
      {
        "name": "conventionErrorViewResolver",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.web.WebProperties"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "registerErrorPages",
        "parameterTypes": [
          "org.springframework.boot.web.server.ErrorPageRegistry"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration$WebSocketMessageConverterConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      },
      {
        "name": "eagerStompWebSocketHandlerMapping",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper",
          "java.util.Map"
        ]
      },
      {
        "name": "configureClientInboundChannel",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.ChannelRegistration"
        ]
      },
      {
        "name": "configureClientOutboundChannel",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.ChannelRegistration"
        ]
      },
      {
        "name": "configureMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration$WebSocketMessageConverterConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "websocketServletWebServerCustomizer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailability",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getLivenessState",
        "parameterTypes": []
      },
      {
        "name": "getReadinessState",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getLivenessState",
        "parameterTypes": []
      },
      {
        "name": "getReadinessState",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.availability.ApplicationAvailability",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getLastChangeEvent",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.boot.availability.AvailabilityState"
        ]
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ],
    "name": "org.springframework.boot.availability.ApplicationAvailabilityBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory"
        ]
      }
    ],
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.cloud.CloudPlatform"
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory",
          "org.springframework.boot.ConfigurableBootstrapContext"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory",
          "org.springframework.boot.ConfigurableBootstrapContext"
        ]
      }
    ],
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocation",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "org.springframework.boot.origin.Origin"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.context.config.ConfigDataNotFoundAction"
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List",
          "org.springframework.boot.context.config.ConfigDataProperties$Activate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "queryAllDeclaredConstructors": true
  },
  {
    "fields": [
      {
        "name": "this$0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties$Activate",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.cloud.CloudPlatform",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ],
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory",
          "org.springframework.boot.context.properties.bind.Binder",
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory",
          "org.springframework.boot.context.properties.bind.Binder",
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ],
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.SpringApplication",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.SpringApplication",
          "java.lang.String[]"
        ]
      }
    ],
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationProperties",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$Factory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinding",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationProperties",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.NestedConfigurationProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.bind.Name",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.bind.Nested",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.migrator.PropertiesMigrationListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.context.properties.migrator.PropertiesMigrationListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.convert.DurationUnit",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory"
        ]
      }
    ],
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.info.BuildProperties"
  },
  {
    "name": "org.springframework.boot.info.GitProperties"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.io.Base64ProtocolResolver",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ],
    "name": "org.springframework.boot.jackson.JsonComponentModule",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModule",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModuleEntries",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.SchemaManagementProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jdbc.XADataSourceWrapper"
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.loader.LaunchedURLClassLoader",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.LoggingSystem"
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem.Factory"
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory"
  },
  {
    "name": "org.springframework.boot.logging.log4j2.SpringBootPropertySource"
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory"
  },
  {
    "name": "org.springframework.boot.logging.logback.RootLogLevelConfigurator"
  },
  {
    "name": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy"
  },
  {
    "name": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "queryAllPublicConstructors": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "initializeDatabase",
        "parameterTypes": []
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ],
    "name": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "detect",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
        ]
      }
    ],
    "name": "org.springframework.boot.sql.init.dependency.AbstractBeansOfTypeDatabaseInitializerDetector",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "detectionComplete",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory",
          "java.util.Set"
        ]
      }
    ],
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializerDetector",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "addBundleUpdateHandler",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "getBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "registerBundle",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.boot.ssl.SslBundle"
        ]
      },
      {
        "name": "updateBundle",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.boot.ssl.SslBundle"
        ]
      }
    ],
    "name": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.ssl.SslBundleRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.ssl.SslBundles",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.task.TaskExecutorBuilder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.task.TaskSchedulerBuilder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queriedMethods": [
      {
        "name": "byAnnotation",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "byAnnotation",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.client.RestClientCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.client.RestTemplateBuilder"
  },
  {
    "name": "org.springframework.boot.web.client.RestTemplateCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "addConnectorCustomizers",
        "parameterTypes": [
          "org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer[]"
        ]
      },
      {
        "name": "addContextCustomizers",
        "parameterTypes": [
          "org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer[]"
        ]
      },
      {
        "name": "addEngineValves",
        "parameterTypes": [
          "org.apache.catalina.Valve[]"
        ]
      },
      {
        "name": "addProtocolHandlerCustomizers",
        "parameterTypes": [
          "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer[]"
        ]
      },
      {
        "name": "getWebServer",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.ServletContextInitializer[]"
        ]
      },
      {
        "name": "setBackgroundProcessorDelay",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setBaseDirectory",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "setUriEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      }
    ],
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true
  },
  {
    "methods": [
      {
        "name": "addErrorPages",
        "parameterTypes": [
          "org.springframework.boot.web.server.ErrorPage[]"
        ]
      },
      {
        "name": "getAddress",
        "parameterTypes": []
      },
      {
        "name": "getCompression",
        "parameterTypes": []
      },
      {
        "name": "getErrorPages",
        "parameterTypes": []
      },
      {
        "name": "getHttp2",
        "parameterTypes": []
      },
      {
        "name": "getPort",
        "parameterTypes": []
      },
      {
        "name": "getServerHeader",
        "parameterTypes": []
      },
      {
        "name": "getShutdown",
        "parameterTypes": []
      },
      {
        "name": "getSsl",
        "parameterTypes": []
      },
      {
        "name": "getSslBundles",
        "parameterTypes": []
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "setCompression",
        "parameterTypes": [
          "org.springframework.boot.web.server.Compression"
        ]
      },
      {
        "name": "setErrorPages",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setHttp2",
        "parameterTypes": [
          "org.springframework.boot.web.server.Http2"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setServerHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      },
      {
        "name": "setSslBundles",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundles"
        ]
      }
    ],
    "name": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Compression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getEnabled",
        "parameterTypes": []
      },
      {
        "name": "setMinResponseSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getMinResponseSize",
        "parameterTypes": []
      },
      {
        "name": "getMimeTypes",
        "parameterTypes": []
      },
      {
        "name": "setMimeTypes",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getExcludedUserAgents",
        "parameterTypes": []
      },
      {
        "name": "setExcludedUserAgents",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ConfigurableWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Cookie",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getHttpOnly",
        "parameterTypes": []
      },
      {
        "name": "getSameSite",
        "parameterTypes": []
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setSecure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSecure",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSameSite",
        "parameterTypes": [
          "org.springframework.boot.web.server.Cookie$SameSite"
        ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHttpOnly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrar",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Http2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ShutdownEditor"
  },
  {
    "name": "org.springframework.boot.web.server.Ssl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getEnabledProtocols",
        "parameterTypes": []
      },
      {
        "name": "setKeyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyStoreType",
        "parameterTypes": []
      },
      {
        "name": "setCiphers",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getTrustStore",
        "parameterTypes": []
      },
      {
        "name": "setCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCertificate",
        "parameterTypes": []
      },
      {
        "name": "setCertificatePrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyPassword",
        "parameterTypes": []
      },
      {
        "name": "setTrustCertificatePrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyAlias",
        "parameterTypes": []
      },
      {
        "name": "getTrustStoreProvider",
        "parameterTypes": []
      },
      {
        "name": "setTrustStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTrustCertificatePrivateKey",
        "parameterTypes": []
      },
      {
        "name": "setClientAuth",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl$ClientAuth"
        ]
      },
      {
        "name": "getProtocol",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getTrustStoreType",
        "parameterTypes": []
      },
      {
        "name": "getCertificatePrivateKey",
        "parameterTypes": []
      },
      {
        "name": "getKeyStoreProvider",
        "parameterTypes": []
      },
      {
        "name": "setTrustCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setTrustStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyStorePassword",
        "parameterTypes": []
      },
      {
        "name": "getTrustCertificate",
        "parameterTypes": []
      },
      {
        "name": "setKeyStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyStore",
        "parameterTypes": []
      },
      {
        "name": "getClientAuth",
        "parameterTypes": []
      },
      {
        "name": "setKeyStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabledProtocols",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getTrustStorePassword",
        "parameterTypes": []
      },
      {
        "name": "getCiphers",
        "parameterTypes": []
      },
      {
        "name": "setTrustStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "addServletNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "addServletRegistrationBeans",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.ServletRegistrationBean[]"
        ]
      },
      {
        "name": "addUrlPatterns",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "determineDispatcherTypes",
        "parameterTypes": []
      },
      {
        "name": "getFilterName",
        "parameterTypes": []
      },
      {
        "name": "getServletNames",
        "parameterTypes": []
      },
      {
        "name": "getServletRegistrationBeans",
        "parameterTypes": []
      },
      {
        "name": "getUrlPatterns",
        "parameterTypes": []
      },
      {
        "name": "isMatchAfter",
        "parameterTypes": []
      },
      {
        "name": "setDispatcherTypes",
        "parameterTypes": [
          "jakarta.servlet.DispatcherType",
          "jakarta.servlet.DispatcherType[]"
        ]
      },
      {
        "name": "setDispatcherTypes",
        "parameterTypes": [
          "java.util.EnumSet"
        ]
      },
      {
        "name": "setMatchAfter",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setServletNames",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setServletRegistrationBeans",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setUrlPatterns",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ],
    "name": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.DispatcherType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "addInitParameter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "jakarta.servlet.Registration$Dynamic"
        ]
      },
      {
        "name": "getInitParameters",
        "parameterTypes": []
      },
      {
        "name": "isAsyncSupported",
        "parameterTypes": []
      },
      {
        "name": "setAsyncSupported",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreRegistrationFailure",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.boot.web.servlet.DynamicRegistrationBean",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getFilter",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.web.servlet.FilterRegistrationBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "onStartup",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "org.springframework.boot.web.servlet.RegistrationBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.ServletContextInitializer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getMultipartConfig",
        "parameterTypes": []
      },
      {
        "name": "getServlet",
        "parameterTypes": []
      },
      {
        "name": "getServletName",
        "parameterTypes": []
      },
      {
        "name": "getUrlMappings",
        "parameterTypes": []
      },
      {
        "name": "setLoadOnStartup",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMultipartConfig",
        "parameterTypes": [
          "jakarta.servlet.MultipartConfigElement"
        ]
      },
      {
        "name": "setServlet",
        "parameterTypes": [
          "jakarta.servlet.Servlet"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.web.servlet.ServletRegistrationBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.WebListenerRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true
  },
  {
    "methods": [
      {
        "name": "getError",
        "parameterTypes": [
          "org.springframework.web.context.request.WebRequest"
        ]
      },
      {
        "name": "getErrorAttributes",
        "parameterTypes": [
          "org.springframework.web.context.request.WebRequest",
          "org.springframework.boot.web.error.ErrorAttributeOptions"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "resolveException",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "java.lang.Exception"
        ]
      }
    ],
    "name": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorAttributes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorController",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "addCookieSameSiteSuppliers",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier[]"
        ]
      },
      {
        "name": "addInitializers",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.ServletContextInitializer[]"
        ]
      },
      {
        "name": "addMimeMappings",
        "parameterTypes": [
          "org.springframework.boot.web.server.MimeMappings"
        ]
      },
      {
        "name": "addWebListeners",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getContextPath",
        "parameterTypes": []
      },
      {
        "name": "getCookieSameSiteSuppliers",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDocumentRoot",
        "parameterTypes": []
      },
      {
        "name": "getInitParameters",
        "parameterTypes": []
      },
      {
        "name": "getJsp",
        "parameterTypes": []
      },
      {
        "name": "getLocaleCharsetMappings",
        "parameterTypes": []
      },
      {
        "name": "getMimeMappings",
        "parameterTypes": []
      },
      {
        "name": "getSession",
        "parameterTypes": []
      },
      {
        "name": "isRegisterDefaultServlet",
        "parameterTypes": []
      },
      {
        "name": "setContextPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCookieSameSiteSuppliers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDocumentRoot",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setInitializers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setJsp",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.server.Jsp"
        ]
      },
      {
        "name": "setLocaleCharsetMappings",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setMimeMappings",
        "parameterTypes": [
          "org.springframework.boot.web.server.MimeMappings"
        ]
      },
      {
        "name": "setRegisterDefaultServlet",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSession",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.server.Session"
        ]
      }
    ],
    "name": "org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Encoding",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getCharset",
        "parameterTypes": []
      },
      {
        "name": "isForceRequest",
        "parameterTypes": []
      },
      {
        "name": "setForceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMapping",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setForce",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setForceResponse",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isForceResponse",
        "parameterTypes": []
      },
      {
        "name": "getMapping",
        "parameterTypes": []
      },
      {
        "name": "isForce",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Jsp",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getRegistered",
        "parameterTypes": []
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInitParameters",
        "parameterTypes": []
      },
      {
        "name": "setRegistered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ServletWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setStoreDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "isPersistent",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setPersistent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCookie",
        "parameterTypes": []
      },
      {
        "name": "getTrackingModes",
        "parameterTypes": []
      },
      {
        "name": "getStoreDir",
        "parameterTypes": []
      },
      {
        "name": "setTrackingModes",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session$Cookie",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComment",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cache.CacheManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cache.annotation.AbstractCachingConfiguration",
    "queriedMethods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      }
    ],
    "name": "org.springframework.cache.annotation.AbstractCachingConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isCandidateClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ],
    "name": "org.springframework.cache.annotation.AnnotationCacheOperationSource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cache.annotation.Cacheable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cache.annotation.CachingConfigurationSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cache.annotation.EnableCaching",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cache.annotation.ProxyCachingConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "cacheAdvisor",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheOperationSource",
          "org.springframework.cache.interceptor.CacheInterceptor"
        ]
      },
      {
        "name": "cacheInterceptor",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheOperationSource"
        ]
      },
      {
        "name": "cacheOperationSource",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cache.annotation.ProxyCachingConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cache.caffeine.CaffeineCache"
  },
  {
    "methods": [
      {
        "name": "getCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCacheNames",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.cache.caffeine.CaffeineCacheManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getErrorHandler",
        "parameterTypes": []
      },
      {
        "name": "setErrorHandler",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheErrorHandler"
        ]
      }
    ],
    "name": "org.springframework.cache.interceptor.AbstractCacheInvoker",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getCacheOperations",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Class"
        ]
      }
    ],
    "name": "org.springframework.cache.interceptor.AbstractFallbackCacheOperationSource",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getPointcut",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.cache.interceptor.BeanFactoryCacheOperationSourceAdvisor",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "configure",
        "parameterTypes": [
          "java.util.function.Supplier",
          "java.util.function.Supplier",
          "java.util.function.Supplier",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "getCacheOperationSource",
        "parameterTypes": []
      },
      {
        "name": "getCacheResolver",
        "parameterTypes": []
      },
      {
        "name": "getKeyGenerator",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setCacheManager",
        "parameterTypes": [
          "org.springframework.cache.CacheManager"
        ]
      },
      {
        "name": "setCacheOperationSource",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheOperationSource"
        ]
      },
      {
        "name": "setCacheOperationSources",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheOperationSource[]"
        ]
      },
      {
        "name": "setCacheResolver",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheResolver"
        ]
      },
      {
        "name": "setKeyGenerator",
        "parameterTypes": [
          "org.springframework.cache.interceptor.KeyGenerator"
        ]
      }
    ],
    "name": "org.springframework.cache.interceptor.CacheAspectSupport",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "org.aopalliance.intercept.MethodInvocation"
        ]
      }
    ],
    "name": "org.springframework.cache.interceptor.CacheInterceptor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cache.interceptor.CacheOperationSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cache.jcache.JCacheCache"
  },
  {
    "name": "org.springframework.cache.jcache.config.ProxyJCacheConfiguration"
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCacheNames",
        "parameterTypes": []
      },
      {
        "name": "initializeCaches",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.cache.support.AbstractCacheManager",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cache.transaction.TransactionAwareCacheDecorator"
  },
  {
    "name": "org.springframework.cglib.proxy.Factory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationContextAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationEventPublisherAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "supportsAsyncExecution",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.context.ApplicationListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationStartupAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.EmbeddedValueResolverAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.EnvironmentAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.Lifecycle",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.LifecycleProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.MessageSourceAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.Phased",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ResourceLoaderAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.SmartLifecycle",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "isAutoStartup",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "isAutoStartup",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ],
    "name": "org.springframework.context.SmartLifecycle",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.AutoProxyRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.Bean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan$Filter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Conditional",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Configuration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassParser$DefaultDeferredImportSelectorGroup",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.DependsOn",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Import",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportRuntimeHints",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Lazy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Primary",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Role",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Scope",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.event.EventListener",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.event.SmartApplicationListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getListenerId",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "supportsSourceType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getListenerId",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "supportsSourceType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ],
    "name": "org.springframework.context.event.SmartApplicationListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ],
    "name": "org.springframework.context.support.ApplicationObjectSupport",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "onClose",
        "parameterTypes": []
      },
      {
        "name": "onRefresh",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.context.support.DefaultLifecycleProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
  },
  {
    "name": "org.springframework.context.weaving.LoadTimeWeaverAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.DecoratingProxy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.DecoratingProxy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.Ordered",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.PriorityOrdered",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.annotation.AliasFor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.annotation.Order",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.convert.ConversionService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      }
    ],
    "name": "org.springframework.core.convert.ConversionService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.converter.ConverterRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.converter.GenericConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.ConfigurableConversionService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "addConverter",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class",
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.GenericConverter"
        ]
      },
      {
        "name": "addConverterFactory",
        "parameterTypes": [
          "org.springframework.core.convert.converter.ConverterFactory"
        ]
      },
      {
        "name": "canBypassConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "removeConvertible",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.core.convert.support.GenericConversionService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.env.EnvironmentCapable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.io.AbstractResource",
    "methods": [
      {
        "name": "isOpen",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.core.io.Resource",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.core.io.Resource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.io.support.PropertiesLoaderSupport",
    "methods": [
      {
        "name": "setIgnoreResourceNotFound",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "org.springframework.core.io.Resource[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.task.AsyncListenableTaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.AsyncTaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "submitCompletable",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submitCompletable",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "submitCompletable",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submitCompletable",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      }
    ],
    "name": "org.springframework.core.task.AsyncTaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.TaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.type.classreading.MetadataReaderFactory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.dao.support.PersistenceExceptionTranslator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.annotation.QueryAnnotation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.cassandra.ReactiveSession"
  },
  {
    "name": "org.springframework.data.domain.Slice",
    "methods": [
      {
        "name": "getPageable",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "getSize",
        "parameterTypes": []
      },
      {
        "name": "isFirst",
        "parameterTypes": []
      },
      {
        "name": "getNumber",
        "parameterTypes": []
      },
      {
        "name": "isLast",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfElements",
        "parameterTypes": []
      },
      {
        "name": "getContent",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.Unpaged"
  },
  {
    "name": "org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"
  },
  {
    "name": "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient"
  },
  {
    "name": "org.springframework.data.elasticsearch.repository.ElasticsearchRepository"
  },
  {
    "name": "org.springframework.data.envers.repository.config$EnableEnversRepositories"
  },
  {
    "name": "org.springframework.data.envers.repository.config.EnableEnversRepositories"
  },
  {
    "name": "org.springframework.data.geo.GeoModule",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "convertToDatabaseColumn",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convertToEntityAttribute",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.springframework.data.jpa.convert.threeten.Jsr310JpaConverters$InstantConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicConstructors": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findPersistentPropertyPaths",
        "parameterTypes": [
          "java.lang.Class",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "hasPersistentEntityFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "findPersistentPropertyPaths",
        "parameterTypes": [
          "java.lang.Class",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "hasPersistentEntityFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "toMappingContext",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaContext",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "deleteAllByIdInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getReferenceById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAllAndFlush",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "deleteAllByIdInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getReferenceById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAllAndFlush",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.springframework.data.jpa.repository.JpaRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaSpecificationExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.Modifying",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.Query",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "countName",
        "parameterTypes": []
      },
      {
        "name": "countProjection",
        "parameterTypes": []
      },
      {
        "name": "countQuery",
        "parameterTypes": []
      },
      {
        "name": "name",
        "parameterTypes": []
      },
      {
        "name": "nativeQuery",
        "parameterTypes": []
      },
      {
        "name": "queryRewriter",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.Query",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.EnableJpaRepositories",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ],
    "name": "org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension"
  },
  {
    "name": "org.springframework.data.jpa.repository.support.CrudMethodMetadata",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getEntityGraph",
        "parameterTypes": []
      },
      {
        "name": "getLockModeType",
        "parameterTypes": []
      },
      {
        "name": "getQueryHints",
        "parameterTypes": []
      },
      {
        "name": "getQueryHintsForCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getEntityGraph",
        "parameterTypes": []
      },
      {
        "name": "getLockModeType",
        "parameterTypes": []
      },
      {
        "name": "getQueryHints",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.data.jpa.repository.support.CrudMethodMetadata",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.DefaultJpaContext",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.DefaultJpaContext",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "char"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "getExtensionId",
        "parameterTypes": []
      },
      {
        "name": "getRootObject",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryConfigurationAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean",
    "methods": [
      {
        "name": "setEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "setMappingContext",
        "parameterTypes": [
          "org.springframework.data.mapping.context.MappingContext"
        ]
      },
      {
        "name": "setEscapeCharacter",
        "parameterTypes": [
          "char"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setQueryMethodFactory",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.query.JpaQueryMethodFactory"
        ]
      },
      {
        "name": "setEntityPathResolver",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryImplementation",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      }
    ],
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryImplementation",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.support.JpaEntityInformation",
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllByIdInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getReferenceById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAllAndFlush",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setEscapeCharacter",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.query.EscapeCharacter"
        ]
      },
      {
        "name": "setRepositoryMethodMetadata",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.support.CrudMethodMetadata"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.support.JpaEntityInformation",
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllByIdInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteByTimeBefore",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllByDisplayedFalseOrderByTimeDesc",
        "parameterTypes": []
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findByIndexer",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "findByName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByStatusInAndTimeAfterOrderByTimeDesc",
        "parameterTypes": [
          "java.util.Collection",
          "java.time.Instant"
        ]
      },
      {
        "name": "findForUserSearchHistory",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getReferenceById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAllAndFlush",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setEscapeCharacter",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.query.EscapeCharacter"
        ]
      },
      {
        "name": "setProjectionFactory",
        "parameterTypes": [
          "org.springframework.data.projection.ProjectionFactory"
        ]
      },
      {
        "name": "setRepositoryMethodMetadata",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.support.CrudMethodMetadata"
        ]
      }
    ],
    "name": "org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.util.HibernateProxyDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.data.jpa.util.HibernateProxyDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.util.JpaMetamodelCacheCleanup",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.data.jpa.util.JpaMetamodelCacheCleanup",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.ldap.repository.LdapRepository"
  },
  {
    "name": "org.springframework.data.mapping.PersistentPropertyAccessor"
  },
  {
    "name": "org.springframework.data.mapping.context.AbstractMappingContext",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "createPersistentProperty",
        "parameterTypes": [
          "org.springframework.data.mapping.model.Property",
          "org.springframework.data.mapping.model.MutablePersistentEntity",
          "org.springframework.data.mapping.model.SimpleTypeHolder"
        ]
      },
      {
        "name": "getManagedTypes",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntities",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "org.springframework.data.mapping.PropertyPath"
        ]
      },
      {
        "name": "initialize",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setInitialEntitySet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setManagedTypes",
        "parameterTypes": [
          "org.springframework.data.domain.ManagedTypes"
        ]
      },
      {
        "name": "setSimpleTypeHolder",
        "parameterTypes": [
          "org.springframework.data.mapping.model.SimpleTypeHolder"
        ]
      },
      {
        "name": "setStrict",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "createPersistentProperty",
        "parameterTypes": [
          "org.springframework.data.mapping.model.Property",
          "org.springframework.data.mapping.model.MutablePersistentEntity",
          "org.springframework.data.mapping.model.SimpleTypeHolder"
        ]
      },
      {
        "name": "getManagedTypes",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntities",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "org.springframework.data.mapping.PropertyPath"
        ]
      },
      {
        "name": "initialize",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "setInitialEntitySet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setManagedTypes",
        "parameterTypes": [
          "org.springframework.data.domain.ManagedTypes"
        ]
      },
      {
        "name": "setSimpleTypeHolder",
        "parameterTypes": [
          "org.springframework.data.mapping.model.SimpleTypeHolder"
        ]
      },
      {
        "name": "setStrict",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "org.springframework.data.mapping.context.AbstractMappingContext",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.mapping.context.MappingContext",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"
        ]
      }
    ],
    "name": "org.springframework.data.mapping.context.MappingContext",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.mongodb.core.MongoTemplate"
  },
  {
    "name": "org.springframework.data.querydsl.QuerydslPredicateExecutor"
  },
  {
    "name": "org.springframework.data.querydsl.ReactiveQuerydslPredicateExecutor"
  },
  {
    "name": "org.springframework.data.r2dbc.core.R2dbcEntityTemplate"
  },
  {
    "name": "org.springframework.data.redis.cache.RedisCache"
  },
  {
    "name": "org.springframework.data.redis.connection.RedisConnectionFactory"
  },
  {
    "name": "org.springframework.data.redis.core.RedisOperations"
  },
  {
    "name": "org.springframework.data.redis.repository.configuration.EnableRedisRepositories"
  },
  {
    "name": "org.springframework.data.repository.CrudRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.springframework.data.repository.CrudRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.ListCrudRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      }
    ],
    "name": "org.springframework.data.repository.ListCrudRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.ListPagingAndSortingRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      }
    ],
    "name": "org.springframework.data.repository.ListPagingAndSortingRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.NoRepositoryBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.PagingAndSortingRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      }
    ],
    "name": "org.springframework.data.repository.PagingAndSortingRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.Repository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      }
    ],
    "name": "org.springframework.data.repository.Repository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.config.RepositoryConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.NamedQueries",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      }
    ],
    "name": "org.springframework.data.repository.core.NamedQueries",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toNamedQueries",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "empty",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryInformation",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ],
    "name": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryMethodInvocationListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.Param"
  },
  {
    "name": "org.springframework.data.repository.query.QueryByExampleExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      }
    ],
    "name": "org.springframework.data.repository.query.QueryByExampleExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.QueryLookupStrategy$Key",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.ReactiveQueryByExampleExecutor"
  },
  {
    "name": "org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter"
  },
  {
    "name": "org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration"
  },
  {
    "name": "org.springframework.data.spel.spi.EvaluationContextExtension",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getFunctions",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getFunctions",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.data.spel.spi.EvaluationContextExtension",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.spel.spi.ExtensionIdAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections$EclipseCollections",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.data.util.CustomCollections$EclipseCollections",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections$VavrCollections",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.data.util.CustomCollections$VavrCollections",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections.EclipseCollections"
  },
  {
    "name": "org.springframework.data.util.CustomCollections.VavrCollections"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.data.util.KotlinBeanInfoFactory",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.data.util.Streamable",
    "methods": [
      {
        "name": "get",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.util.Streamable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "and",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "org.springframework.data.util.Streamable"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "filter",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "flatMap",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "get",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "map",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "stream",
        "parameterTypes": []
      },
      {
        "name": "toList",
        "parameterTypes": []
      },
      {
        "name": "toSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "and",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "org.springframework.data.util.Streamable"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "filter",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "flatMap",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "get",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "map",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "stream",
        "parameterTypes": []
      },
      {
        "name": "toList",
        "parameterTypes": []
      },
      {
        "name": "toSet",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.data.util.Streamable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.OffsetScrollPositionArgumentResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "resolveArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "org.springframework.web.method.support.ModelAndViewContainer",
          "org.springframework.web.context.request.NativeWebRequest",
          "org.springframework.web.bind.support.WebDataBinderFactory"
        ]
      },
      {
        "name": "supportsParameter",
        "parameterTypes": [
          "org.springframework.core.MethodParameter"
        ]
      }
    ],
    "name": "org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "setOffsetParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolverSupport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.PageableArgumentResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "resolveArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "org.springframework.web.method.support.ModelAndViewContainer",
          "org.springframework.web.context.request.NativeWebRequest",
          "org.springframework.web.bind.support.WebDataBinderFactory"
        ]
      },
      {
        "name": "supportsParameter",
        "parameterTypes": [
          "org.springframework.core.MethodParameter"
        ]
      }
    ],
    "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "isFallbackPageable",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "setFallbackPageable",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "setMaxPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setOneIndexedParameters",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPageParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSizeParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolverSupport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.SortArgumentResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "resolveArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "org.springframework.web.method.support.ModelAndViewContainer",
          "org.springframework.web.context.request.NativeWebRequest",
          "org.springframework.web.bind.support.WebDataBinderFactory"
        ]
      },
      {
        "name": "supportsParameter",
        "parameterTypes": [
          "org.springframework.core.MethodParameter"
        ]
      }
    ],
    "name": "org.springframework.data.web.SortHandlerMethodArgumentResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getPropertyDelimiter",
        "parameterTypes": []
      },
      {
        "name": "setFallbackSort",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "setPropertyDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSortParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.data.web.SortHandlerMethodArgumentResolverSupport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.EnableSpringDataWebSupport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.EnableSpringDataWebSupport$QuerydslActivator",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.EnableSpringDataWebSupport$SpringDataWebConfigurationImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "projectingArgumentResolverBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ],
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonModules",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataWebConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectFactory"
        ]
      },
      {
        "name": "sortResolver",
        "parameterTypes": []
      },
      {
        "name": "pageableResolver",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectFactory"
        ]
      },
      {
        "name": "addArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addFormatters",
        "parameterTypes": [
          "org.springframework.format.FormatterRegistry"
        ]
      },
      {
        "name": "extendMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      }
    ],
    "name": "org.springframework.data.web.config.SpringDataWebConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.format.FormatterRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.format.support.DefaultFormattingConversionService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "addFormatter",
        "parameterTypes": [
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldAnnotation",
        "parameterTypes": [
          "org.springframework.format.AnnotationFormatterFactory"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Printer",
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addParser",
        "parameterTypes": [
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addPrinter",
        "parameterTypes": [
          "org.springframework.format.Printer"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      }
    ],
    "name": "org.springframework.format.support.FormattingConversionService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.hateoas$Link"
  },
  {
    "name": "org.springframework.hateoas.EntityModel"
  },
  {
    "name": "org.springframework.hateoas.Link"
  },
  {
    "name": "org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter"
  },
  {
    "name": "org.springframework.http.HttpEntity",
    "methods": [
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "getHeaders",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpStatus"
  },
  {
    "name": "org.springframework.http.ReactiveHttpInputMessage"
  },
  {
    "name": "org.springframework.http.client.AbstractClientHttpRequestFactoryWrapper",
    "fields": [
      {
        "name": "requestFactory"
      }
    ]
  },
  {
    "name": "org.springframework.http.client.ClientHttpRequestFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.http.client.ClientHttpRequestFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.client.OkHttp3ClientHttpRequestFactory",
    "methods": [
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.client.SimpleClientHttpRequestFactory",
    "condition": {
      "typeReachable": "java.net.HttpURLConnection"
    },
    "methods": [
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setBufferRequestBody",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getClientHttpRequestInitializers",
        "parameterTypes": []
      },
      {
        "name": "setClientHttpRequestInitializers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "org.springframework.http.client.support.HttpAccessor",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getInterceptors",
        "parameterTypes": []
      },
      {
        "name": "getRequestFactory",
        "parameterTypes": []
      },
      {
        "name": "setInterceptors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRequestFactory",
        "parameterTypes": [
          "org.springframework.http.client.ClientHttpRequestFactory"
        ]
      }
    ],
    "name": "org.springframework.http.client.support.InterceptingHttpAccessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.codec.CodecConfigurer"
  },
  {
    "name": "org.springframework.http.codec.multipart.DefaultPartHttpMessageReader"
  },
  {
    "methods": [
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Type",
          "org.springframework.http.MediaType",
          "org.springframework.http.HttpOutputMessage"
        ]
      }
    ],
    "name": "org.springframework.http.converter.AbstractGenericHttpMessageConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "addDefaultHeaders",
        "parameterTypes": [
          "org.springframework.http.HttpHeaders",
          "java.lang.Object",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getContentLength",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getDefaultCharset",
        "parameterTypes": []
      },
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": []
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.HttpInputMessage"
        ]
      },
      {
        "name": "setDefaultCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setSupportedMediaTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "supportsRepeatableWrites",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.MediaType",
          "org.springframework.http.HttpOutputMessage"
        ]
      },
      {
        "name": "writeInternal",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.HttpOutputMessage"
        ]
      }
    ],
    "name": "org.springframework.http.converter.AbstractHttpMessageConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.GenericHttpMessageConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.HttpMessageConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ],
    "name": "org.springframework.http.converter.HttpMessageConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.StringHttpMessageConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getObjectMapper",
        "parameterTypes": []
      },
      {
        "name": "getObjectMappersForType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.HttpInputMessage"
        ]
      },
      {
        "name": "registerObjectMappersForType",
        "parameterTypes": [
          "java.lang.Class",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "setObjectMapper",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      },
      {
        "name": "setPrettyPrint",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSupportedMediaTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.GsonHttpMessageConverter"
  },
  {
    "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.server.reactive.HttpHandler"
  },
  {
    "name": "org.springframework.instrument$InstrumentationSavingAgent"
  },
  {
    "name": "org.springframework.instrument.InstrumentationSavingAgent"
  },
  {
    "name": "org.springframework.integration.config.EnableIntegration"
  },
  {
    "name": "org.springframework.integration.graph.IntegrationGraphServer"
  },
  {
    "name": "org.springframework.jdbc.core.JdbcOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection",
          "int",
          "org.springframework.jdbc.core.ParameterizedPreparedStatementSetter"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.List"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.List",
          "int[]"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.BatchPreparedStatementSetter"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.BatchPreparedStatementSetter",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "call",
        "parameterTypes": [
          "org.springframework.jdbc.core.CallableStatementCreator",
          "java.util.List"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.CallableStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.CallableStatementCreator",
          "org.springframework.jdbc.core.CallableStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.ConnectionCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.StatementCallback"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      }
    ],
    "name": "org.springframework.jdbc.core.JdbcTemplate",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map[]"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource[]"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource[]",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource[]",
          "org.springframework.jdbc.support.KeyHolder",
          "java.lang.String[]"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "getJdbcOperations",
        "parameterTypes": []
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.support.KeyHolder",
          "java.lang.String[]"
        ]
      }
    ],
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "sql",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.jdbc.core.simple.DefaultJdbcClient",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.simple.JdbcClient",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.datasource.DelegatingDataSource"
  },
  {
    "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy",
    "condition": {
      "typeReachable": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory"
    },
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
  },
  {
    "name": "org.springframework.jdbc.datasource.init.DatabasePopulator"
  },
  {
    "name": "org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource"
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "isLazyInit",
        "parameterTypes": []
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDatabaseProductName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionTranslator",
        "parameterTypes": [
          "org.springframework.jdbc.support.SQLExceptionTranslator"
        ]
      },
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "org.springframework.jdbc.support.JdbcAccessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.support.JdbcUtils"
  },
  {
    "name": "org.springframework.jms.core.JmsTemplate"
  },
  {
    "name": "org.springframework.jmx.export.MBeanExporter"
  },
  {
    "name": "org.springframework.jndi.JndiObjectFactoryBean"
  },
  {
    "name": "org.springframework.kafka.core.KafkaTemplate"
  },
  {
    "name": "org.springframework.kafka.core.ProducerFactory"
  },
  {
    "name": "org.springframework.lang.NonNullApi"
  },
  {
    "name": "org.springframework.lang.Nullable"
  },
  {
    "name": "org.springframework.ldap.core.ContextSource"
  },
  {
    "name": "org.springframework.ldap.core.LdapOperations"
  },
  {
    "name": "org.springframework.mail.javamail.JavaMailSenderImpl"
  },
  {
    "name": "org.springframework.messaging.MessageChannel",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.MessageHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.SubscribableChannel",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "fromMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message",
          "java.lang.Class"
        ]
      },
      {
        "name": "fromMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message",
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "toMessage",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.MessageHeaders"
        ]
      },
      {
        "name": "toMessage",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.MessageHeaders",
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.messaging.converter.CompositeMessageConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.converter.MessageConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.converter.SmartMessageConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.util.Map",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "doSend",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "getDefaultDestination",
        "parameterTypes": []
      },
      {
        "name": "getMessageConverter",
        "parameterTypes": []
      },
      {
        "name": "send",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "setDefaultDestination",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMessageConverter",
        "parameterTypes": [
          "org.springframework.messaging.converter.MessageConverter"
        ]
      }
    ],
    "name": "org.springframework.messaging.core.AbstractMessageSendingTemplate",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.messaging.core.MessageSendingOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.handler.annotation.MessageMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.messaging.handler.annotation.SendTo",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.messaging.handler.invocation.AbstractExceptionHandlerMethodResolver",
    "methods": [
      {
        "name": "noMatchingExceptionHandler",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "noMatchingExceptionHandler",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.messaging.handler.invocation.AbstractExceptionHandlerMethodResolver"
  },
  {
    "methods": [
      {
        "name": "getApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "getArgumentResolvers",
        "parameterTypes": []
      },
      {
        "name": "getCustomArgumentResolvers",
        "parameterTypes": []
      },
      {
        "name": "getCustomReturnValueHandlers",
        "parameterTypes": []
      },
      {
        "name": "getDestinationPrefixes",
        "parameterTypes": []
      },
      {
        "name": "getDirectLookupDestinations",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getHandlerMethods",
        "parameterTypes": []
      },
      {
        "name": "getMatchingMapping",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "getReturnValueHandlers",
        "parameterTypes": []
      },
      {
        "name": "handleMatch",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.handler.HandlerMethod",
          "java.lang.String",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "handleMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCustomArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCustomReturnValueHandlers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setReturnValueHandlers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler"
  },
  {
    "name": "org.springframework.messaging.simp.SimpMessageSendingOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "convertAndSendToUser",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSendToUser",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "convertAndSendToUser",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertAndSendToUser",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      }
    ],
    "name": "org.springframework.messaging.simp.SimpMessagingTemplate",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getConversionService",
        "parameterTypes": []
      },
      {
        "name": "getHeaderInitializer",
        "parameterTypes": []
      },
      {
        "name": "getMessageConverter",
        "parameterTypes": []
      },
      {
        "name": "getPathMatcher",
        "parameterTypes": []
      },
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "setConversionService",
        "parameterTypes": [
          "org.springframework.core.convert.ConversionService"
        ]
      },
      {
        "name": "setDestinationPrefixes",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      },
      {
        "name": "setHeaderInitializer",
        "parameterTypes": [
          "org.springframework.messaging.support.MessageHeaderInitializer"
        ]
      },
      {
        "name": "setMessageConverter",
        "parameterTypes": [
          "org.springframework.messaging.converter.MessageConverter"
        ]
      },
      {
        "name": "setPathMatcher",
        "parameterTypes": [
          "org.springframework.util.PathMatcher"
        ]
      },
      {
        "name": "setPhase",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ],
    "name": "org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getApplicationEventPublisher",
        "parameterTypes": []
      },
      {
        "name": "getBrokerChannel",
        "parameterTypes": []
      },
      {
        "name": "getClientInboundChannel",
        "parameterTypes": []
      },
      {
        "name": "getClientOutboundChannel",
        "parameterTypes": []
      },
      {
        "name": "getDestinationPrefixes",
        "parameterTypes": []
      },
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "handleMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "isAutoStartup",
        "parameterTypes": []
      },
      {
        "name": "isBrokerAvailable",
        "parameterTypes": []
      },
      {
        "name": "isPreservePublishOrder",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setAutoStartup",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPhase",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPreservePublishOrder",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUserDestinationPredicate",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ],
    "name": "org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration",
    "queriedMethods": [
      {
        "name": "simpleBrokerMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.user.UserDestinationResolver"
        ]
      },
      {
        "name": "simpAnnotationMethodMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.SimpMessagingTemplate",
          "org.springframework.messaging.converter.CompositeMessageConverter"
        ]
      },
      {
        "name": "userDestinationMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.user.UserDestinationResolver"
        ]
      },
      {
        "name": "userRegistry",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "messageBrokerTaskScheduler",
        "parameterTypes": []
      },
      {
        "name": "stompBrokerRelayMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.user.UserDestinationMessageHandler",
          "org.springframework.messaging.MessageHandler",
          "org.springframework.messaging.simp.user.UserDestinationResolver"
        ]
      },
      {
        "name": "brokerMessagingTemplate",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.converter.CompositeMessageConverter"
        ]
      },
      {
        "name": "brokerMessageConverter",
        "parameterTypes": []
      },
      {
        "name": "clientInboundChannel",
        "parameterTypes": [
          "org.springframework.core.task.TaskExecutor"
        ]
      },
      {
        "name": "brokerChannel",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.core.task.TaskExecutor"
        ]
      },
      {
        "name": "clientOutboundChannelExecutor",
        "parameterTypes": []
      },
      {
        "name": "clientInboundChannelExecutor",
        "parameterTypes": []
      },
      {
        "name": "clientOutboundChannel",
        "parameterTypes": [
          "org.springframework.core.task.TaskExecutor"
        ]
      },
      {
        "name": "brokerChannelExecutor",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "userRegistryMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.user.SimpUserRegistry",
          "org.springframework.messaging.simp.SimpMessagingTemplate",
          "org.springframework.scheduling.TaskScheduler"
        ]
      },
      {
        "name": "userDestinationResolver",
        "parameterTypes": [
          "org.springframework.messaging.simp.user.SimpUserRegistry",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "brokerChannel",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.core.task.TaskExecutor"
        ]
      },
      {
        "name": "brokerChannelExecutor",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "brokerMessageConverter",
        "parameterTypes": []
      },
      {
        "name": "brokerMessagingTemplate",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.converter.CompositeMessageConverter"
        ]
      },
      {
        "name": "clientInboundChannel",
        "parameterTypes": [
          "org.springframework.core.task.TaskExecutor"
        ]
      },
      {
        "name": "clientInboundChannelExecutor",
        "parameterTypes": []
      },
      {
        "name": "clientOutboundChannel",
        "parameterTypes": [
          "org.springframework.core.task.TaskExecutor"
        ]
      },
      {
        "name": "clientOutboundChannelExecutor",
        "parameterTypes": []
      },
      {
        "name": "getApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "messageBrokerTaskScheduler",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "simpAnnotationMethodMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.SimpMessagingTemplate",
          "org.springframework.messaging.converter.CompositeMessageConverter"
        ]
      },
      {
        "name": "simpleBrokerMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.user.UserDestinationResolver"
        ]
      },
      {
        "name": "stompBrokerRelayMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.user.UserDestinationMessageHandler",
          "org.springframework.messaging.MessageHandler",
          "org.springframework.messaging.simp.user.UserDestinationResolver"
        ]
      },
      {
        "name": "userDestinationMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.user.UserDestinationResolver"
        ]
      },
      {
        "name": "userDestinationResolver",
        "parameterTypes": [
          "org.springframework.messaging.simp.user.SimpUserRegistry",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "userRegistry",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "userRegistryMessageHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.simp.user.SimpUserRegistry",
          "org.springframework.messaging.simp.SimpMessagingTemplate",
          "org.springframework.scheduling.TaskScheduler"
        ]
      }
    ],
    "name": "org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "resolveDestination",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.messaging.simp.user.DefaultUserDestinationResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.simp.user.SimpUserRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "handleMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.messaging.simp.user.UserDestinationMessageHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.simp.user.UserDestinationResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getBeanName",
        "parameterTypes": []
      },
      {
        "name": "getInterceptors",
        "parameterTypes": []
      },
      {
        "name": "getLogger",
        "parameterTypes": []
      },
      {
        "name": "removeInterceptor",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeInterceptor",
        "parameterTypes": [
          "org.springframework.messaging.support.ChannelInterceptor"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "org.springframework.messaging.Message",
          "long"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogger",
        "parameterTypes": [
          "org.apache.commons.logging.Log"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.messaging.support.AbstractMessageChannel",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getSubscribers",
        "parameterTypes": []
      },
      {
        "name": "hasSubscription",
        "parameterTypes": [
          "org.springframework.messaging.MessageHandler"
        ]
      },
      {
        "name": "subscribe",
        "parameterTypes": [
          "org.springframework.messaging.MessageHandler"
        ]
      },
      {
        "name": "unsubscribe",
        "parameterTypes": [
          "org.springframework.messaging.MessageHandler"
        ]
      }
    ],
    "name": "org.springframework.messaging.support.AbstractSubscribableChannel",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "addInterceptor",
        "parameterTypes": [
          "int",
          "org.springframework.messaging.support.ChannelInterceptor"
        ]
      },
      {
        "name": "addInterceptor",
        "parameterTypes": [
          "org.springframework.messaging.support.ChannelInterceptor"
        ]
      },
      {
        "name": "setInterceptors",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "org.springframework.messaging.support.ExecutorSubscribableChannel",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.support.InterceptableChannel",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.orm.hibernate5.SpringSessionContext",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.engine.spi.SessionFactoryImplementor"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.engine.spi.SessionFactoryImplementor"
        ]
      }
    ],
    "name": "org.springframework.orm.hibernate5.SpringSessionContext"
  },
  {
    "methods": [
      {
        "name": "createNativeEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getBeanClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getBootstrapExecutor",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerInterface",
        "parameterTypes": []
      },
      {
        "name": "getJpaDialect",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": []
      },
      {
        "name": "getJpaVendorAdapter",
        "parameterTypes": []
      },
      {
        "name": "getNativeEntityManagerFactory",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceProvider",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBootstrapExecutor",
        "parameterTypes": [
          "org.springframework.core.task.AsyncTaskExecutor"
        ]
      },
      {
        "name": "setEntityManagerFactoryInterface",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setEntityManagerInitializer",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "setEntityManagerInterface",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setJpaDialect",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaDialect"
        ]
      },
      {
        "name": "setJpaProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setJpaPropertyMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setJpaVendorAdapter",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter"
        ]
      },
      {
        "name": "setPersistenceProvider",
        "parameterTypes": [
          "jakarta.persistence.spi.PersistenceProvider"
        ]
      },
      {
        "name": "setPersistenceProviderClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "translateExceptionIfPossible",
        "parameterTypes": [
          "java.lang.RuntimeException"
        ]
      }
    ],
    "name": "org.springframework.orm.jpa.AbstractEntityManagerFactoryBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.EntityManagerFactoryInfo",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createNativeEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getBeanClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerInterface",
        "parameterTypes": []
      },
      {
        "name": "getJpaDialect",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "createNativeEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getBeanClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerInterface",
        "parameterTypes": []
      },
      {
        "name": "getJpaDialect",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.orm.jpa.EntityManagerFactoryInfo",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.EntityManagerProxy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.EntityManagerProxy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getResourceFactory",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ],
    "name": "org.springframework.orm.jpa.JpaTransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.JpaVendorAdapter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitInfo",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitName",
        "parameterTypes": []
      },
      {
        "name": "setLoadTimeWeaver",
        "parameterTypes": [
          "org.springframework.instrument.classloading.LoadTimeWeaver"
        ]
      },
      {
        "name": "setPersistenceUnitName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ],
    "name": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.SharedEntityManagerCreator",
    "queriedMethods": [
      {
        "name": "createSharedEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManagerFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.SharedEntityManagerCreator",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createSharedEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManagerFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.SharedEntityManagerCreator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getManagedClassNames",
        "parameterTypes": []
      },
      {
        "name": "getManagedPackages",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitRootUrl",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.orm.jpa.persistenceunit.SimplePersistenceManagedTypes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "postProcessEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "postProcessEntityManagerFactory",
        "parameterTypes": [
          "jakarta.persistence.EntityManagerFactory"
        ]
      },
      {
        "name": "setDatabase",
        "parameterTypes": [
          "org.springframework.orm.jpa.vendor.Database"
        ]
      },
      {
        "name": "setDatabasePlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGenerateDdl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowSql",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getEntityManagerFactoryInterface",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerInterface",
        "parameterTypes": []
      },
      {
        "name": "getJpaDialect",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": [
          "jakarta.persistence.spi.PersistenceUnitInfo"
        ]
      },
      {
        "name": "getPersistenceProvider",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceProviderRootPackage",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.oxm.GenericMarshaller",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.oxm.GenericUnmarshaller",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.oxm.Marshaller",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.oxm.Unmarshaller",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "marshal",
        "parameterTypes": [
          "java.lang.Object",
          "javax.xml.transform.Result"
        ]
      },
      {
        "name": "marshal",
        "parameterTypes": [
          "java.lang.Object",
          "javax.xml.transform.Result",
          "org.springframework.oxm.mime.MimeContainer"
        ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.reflect.Type"
        ]
      },
      {
        "name": "unmarshal",
        "parameterTypes": [
          "javax.xml.transform.Source"
        ]
      },
      {
        "name": "unmarshal",
        "parameterTypes": [
          "javax.xml.transform.Source",
          "org.springframework.oxm.mime.MimeContainer"
        ]
      }
    ],
    "name": "org.springframework.oxm.jaxb.Jaxb2Marshaller",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.oxm.mime.MimeMarshaller",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.oxm.mime.MimeUnmarshaller",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.r2dbc.connection.R2dbcTransactionManager"
  },
  {
    "name": "org.springframework.r2dbc.connection.init.DatabasePopulator"
  },
  {
    "name": "org.springframework.scheduling.SchedulingTaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "prefersShortLivedTasks",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "prefersShortLivedTasks",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.scheduling.SchedulingTaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.scheduling.TaskScheduler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "schedule",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date",
          "long"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date",
          "long"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "schedule",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date",
          "long"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date",
          "long"
        ]
      }
    ],
    "name": "org.springframework.scheduling.TaskScheduler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.AbstractAsyncConfiguration",
    "queriedMethods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      }
    ],
    "name": "org.springframework.scheduling.annotation.AbstractAsyncConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.Async",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.AsyncConfigurationSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.annotation.EnableAsync",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.EnableScheduling",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.ProxyAsyncConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "asyncAdvisor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.annotation.ProxyAsyncConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.Schedules",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.SchedulingConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "scheduledAnnotationProcessor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.annotation.SchedulingConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.SchedulingConfigurer"
  },
  {
    "name": "org.springframework.scheduling.annotation.SchedulingConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "newThread",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ],
    "name": "org.springframework.scheduling.concurrent.CustomizableThreadFactory",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "initialize",
        "parameterTypes": []
      },
      {
        "name": "initiateShutdown",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.event.ContextClosedEvent"
        ]
      },
      {
        "name": "setAcceptTasksAfterContextClose",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setAwaitTerminationMillis",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setAwaitTerminationSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPhase",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRejectedExecutionHandler",
        "parameterTypes": [
          "java.util.concurrent.RejectedExecutionHandler"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWaitForTasksToCompleteOnShutdown",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ],
    "name": "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      }
    ],
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "getClock",
        "parameterTypes": []
      },
      {
        "name": "schedule",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Instant"
        ]
      },
      {
        "name": "schedule",
        "parameterTypes": [
          "java.lang.Runnable",
          "org.springframework.scheduling.Trigger"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Duration"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Instant",
          "java.time.Duration"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Duration"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Instant",
          "java.time.Duration"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      }
    ],
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.scheduling.config.ScheduledTaskHolder",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.annotation.Secured",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionHandler",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createEvaluationContext",
        "parameterTypes": [
          "java.util.function.Supplier",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.method.MethodSecurityExpressionHandler",
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getAccessDecisionManager",
        "parameterTypes": []
      },
      {
        "name": "getAfterInvocationManager",
        "parameterTypes": []
      },
      {
        "name": "getAuthenticationManager",
        "parameterTypes": []
      },
      {
        "name": "getRunAsManager",
        "parameterTypes": []
      },
      {
        "name": "isAlwaysReauthenticate",
        "parameterTypes": []
      },
      {
        "name": "isRejectPublicInvocations",
        "parameterTypes": []
      },
      {
        "name": "isValidateConfigAttributes",
        "parameterTypes": []
      },
      {
        "name": "setAccessDecisionManager",
        "parameterTypes": [
          "org.springframework.security.access.AccessDecisionManager"
        ]
      },
      {
        "name": "setAfterInvocationManager",
        "parameterTypes": [
          "org.springframework.security.access.intercept.AfterInvocationManager"
        ]
      },
      {
        "name": "setAlwaysReauthenticate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setAuthenticationManager",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationManager"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "setPublishAuthorizationSuccess",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRejectPublicInvocations",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRunAsManager",
        "parameterTypes": [
          "org.springframework.security.access.intercept.RunAsManager"
        ]
      },
      {
        "name": "setSecurityContextHolderStrategy",
        "parameterTypes": [
          "org.springframework.security.core.context.SecurityContextHolderStrategy"
        ]
      },
      {
        "name": "setValidateConfigAttributes",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "org.springframework.security.access.intercept.AbstractSecurityInterceptor",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getSecureObjectClass",
        "parameterTypes": []
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "org.aopalliance.intercept.MethodInvocation"
        ]
      },
      {
        "name": "obtainSecurityMetadataSource",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.security.access.method.MethodSecurityMetadataSource",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.security.access.method.MethodSecurityMetadataSource",
          "java.lang.String"
        ]
      },
      {
        "name": "getAdvice",
        "parameterTypes": []
      },
      {
        "name": "getPointcut",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ],
    "name": "org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "toMethodSecurityMetadataSource",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource"
        ]
      }
    ],
    "name": "org.springframework.security.access.method.MethodSecurityMetadataSource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.access.method.MethodSecurityMetadataSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.prepost.PreInvocationAuthorizationAdvice",
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "authenticate",
        "parameterTypes": [
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ],
    "name": "org.springframework.security.authentication.AnonymousAuthenticationProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationEventPublisher",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationManagerResolver"
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "publishAuthenticationFailure",
        "parameterTypes": [
          "org.springframework.security.core.AuthenticationException",
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "publishAuthenticationSuccess",
        "parameterTypes": [
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ],
    "name": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "authenticate",
        "parameterTypes": [
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      }
    ],
    "name": "org.springframework.security.authentication.ProviderManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.ReactiveAuthenticationManager"
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "authenticate",
        "parameterTypes": [
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "getUserCache",
        "parameterTypes": []
      },
      {
        "name": "isForcePrincipalAsString",
        "parameterTypes": []
      },
      {
        "name": "isHideUserNotFoundExceptions",
        "parameterTypes": []
      },
      {
        "name": "setAuthoritiesMapper",
        "parameterTypes": [
          "org.springframework.security.core.authority.mapping.GrantedAuthoritiesMapper"
        ]
      },
      {
        "name": "setForcePrincipalAsString",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHideUserNotFoundExceptions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "setPostAuthenticationChecks",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetailsChecker"
        ]
      },
      {
        "name": "setPreAuthenticationChecks",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetailsChecker"
        ]
      },
      {
        "name": "setUserCache",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserCache"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ],
    "name": "org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.dao.DaoAuthenticationProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ],
    "name": "org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent"
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ],
    "name": "org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent"
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ],
    "name": "org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent"
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ],
    "name": "org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent"
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureLockedEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ],
    "name": "org.springframework.security.authentication.event.AuthenticationFailureLockedEvent"
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ],
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent"
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ],
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent"
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ],
    "name": "org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent"
  },
  {
    "name": "org.springframework.security.authorization.AuthorizationManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "verify",
        "parameterTypes": [
          "java.util.function.Supplier",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "verify",
        "parameterTypes": [
          "java.util.function.Supplier",
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.springframework.security.authorization.AuthorizationManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityConfigurer"
        ]
      },
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityConfigurerAdapter"
        ]
      },
      {
        "name": "getConfigurer",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getConfigurers",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getOrBuild",
        "parameterTypes": []
      },
      {
        "name": "getSharedObject",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getSharedObjects",
        "parameterTypes": []
      },
      {
        "name": "objectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor"
        ]
      },
      {
        "name": "removeConfigurer",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "removeConfigurers",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setSharedObject",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "with",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityConfigurerAdapter",
          "org.springframework.security.config.Customizer"
        ]
      }
    ],
    "name": "org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "build",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.security.config.annotation.AbstractSecurityBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.ObjectPostProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityBuilder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      }
    ],
    "name": "org.springframework.security.config.annotation.SecurityConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.ProviderManagerBuilder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "authenticationEventPublisher",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationEventPublisher"
        ]
      },
      {
        "name": "authenticationProvider",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationProvider"
        ]
      },
      {
        "name": "eraseCredentials",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultUserDetailsService",
        "parameterTypes": []
      },
      {
        "name": "isConfigured",
        "parameterTypes": []
      },
      {
        "name": "ldapAuthentication",
        "parameterTypes": []
      },
      {
        "name": "parentAuthenticationManager",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationManager"
        ]
      }
    ],
    "name": "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setGlobalAuthenticationConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "authenticationManagerBuilder",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor",
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "enableGlobalAuthenticationAutowiredConfigurer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "initializeUserDetailsBeanManagerConfigurer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "initializeAuthenticationProviderBeanManagerConfigurer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setObjectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "inMemoryAuthentication",
        "parameterTypes": []
      },
      {
        "name": "jdbcAuthentication",
        "parameterTypes": []
      },
      {
        "name": "userDetailsService",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetailsService"
        ]
      }
    ],
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$DefaultPasswordEncoderAuthenticationManagerBuilder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
        ]
      }
    ],
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.EnableGlobalAuthentication",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "configure",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
        ]
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      }
    ],
    "name": "org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
        ]
      }
    ],
    "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
        ]
      }
    ],
    "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "postProcess",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "objectPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.config.AutowireCapableBeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration",
    "methods": [
      {
        "name": "setSecurityContextHolderStrategy",
        "parameterTypes": [
          "org.springframework.security.core.context.SecurityContextHolderStrategy"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "preInvocationAuthorizationAdvice",
        "parameterTypes": []
      },
      {
        "name": "setMethodSecurityExpressionHandler",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setObjectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor"
        ]
      },
      {
        "name": "methodSecurityInterceptor",
        "parameterTypes": [
          "org.springframework.security.access.method.MethodSecurityMetadataSource"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "methodSecurityInterceptor",
        "parameterTypes": [
          "org.springframework.security.access.method.MethodSecurityMetadataSource"
        ]
      },
      {
        "name": "preInvocationAuthorizationAdvice",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      },
      {
        "name": "setMethodSecurityExpressionHandler",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setObjectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor"
        ]
      }
    ],
    "name": "org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$SpringCGLIB$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.GlobalMethodSecuritySelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.MethodSecurityMetadataSourceAdvisorRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.HttpSecurityBuilder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "addFilter",
        "parameterTypes": [
          "jakarta.servlet.Filter"
        ]
      },
      {
        "name": "addFilterAfter",
        "parameterTypes": [
          "jakarta.servlet.Filter",
          "java.lang.Class"
        ]
      },
      {
        "name": "addFilterBefore",
        "parameterTypes": [
          "jakarta.servlet.Filter",
          "java.lang.Class"
        ]
      },
      {
        "name": "authenticationProvider",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationProvider"
        ]
      },
      {
        "name": "setSharedObject",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "userDetailsService",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetailsService"
        ]
      }
    ],
    "name": "org.springframework.security.config.annotation.web.builders.HttpSecurity",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ],
    "name": "org.springframework.security.config.annotation.web.builders.WebSecurity",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setObjectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor"
        ]
      },
      {
        "name": "httpSecurity",
        "parameterTypes": []
      },
      {
        "name": "setAuthenticationConfiguration",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"
        ]
      },
      {
        "name": "setContentNegotiationStrategy",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationStrategy"
        ]
      },
      {
        "name": "setSecurityContextHolderStrategy",
        "parameterTypes": [
          "org.springframework.security.core.context.SecurityContextHolderStrategy"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.OAuth2ImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.SpringWebMvcImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "requestDataValueProcessor",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "addArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ],
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      },
      {
        "name": "getFilterChains",
        "parameterTypes": []
      },
      {
        "name": "getFilters",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilterChainDecorator",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy$FilterChainDecorator"
        ]
      },
      {
        "name": "setFilterChainValidator",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy$FilterChainValidator"
        ]
      },
      {
        "name": "setFirewall",
        "parameterTypes": [
          "org.springframework.security.web.firewall.HttpFirewall"
        ]
      },
      {
        "name": "setRequestRejectedHandler",
        "parameterTypes": [
          "org.springframework.security.web.firewall.RequestRejectedHandler"
        ]
      },
      {
        "name": "setSecurityContextHolderStrategy",
        "parameterTypes": [
          "org.springframework.security.core.context.SecurityContextHolderStrategy"
        ]
      },
      {
        "name": "toFilter",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy",
    "queryAllDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ],
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$HandlerMappingIntrospectorCacheFilterFactoryBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration",
    "fields": [
      {
        "name": "objectObjectPostProcessor"
      },
      {
        "name": "httpSecurity"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "privilegeEvaluator",
        "parameterTypes": []
      },
      {
        "name": "setFilterChainProxySecurityConfigurer",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
        ]
      },
      {
        "name": "springSecurityFilterChain",
        "parameterTypes": []
      },
      {
        "name": "setFilterChains",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setWebSecurityCustomizers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "webSecurityExpressionHandler",
        "parameterTypes": []
      },
      {
        "name": "conversionServicePostProcessor",
        "parameterTypes": []
      },
      {
        "name": "delegatingApplicationListener",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"
  },
  {
    "name": "org.springframework.security.config.http.SessionCreationPolicy"
  },
  {
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ],
    "name": "org.springframework.security.context.DelegatingApplicationListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.core.userdetails.UserDetailsService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.data.repository.query.SecurityEvaluationContextExtension"
  },
  {
    "name": "org.springframework.security.oauth2.client.registration$ClientRegistration"
  },
  {
    "name": "org.springframework.security.oauth2.client.registration.ClientRegistration"
  },
  {
    "name": "org.springframework.security.oauth2.client.registration.ClientRegistrationRepository"
  },
  {
    "name": "org.springframework.security.oauth2.jwt.JwtDecoder"
  },
  {
    "name": "org.springframework.security.oauth2.server.resource$BearerTokenError"
  },
  {
    "name": "org.springframework.security.oauth2.server.resource.BearerTokenError"
  },
  {
    "name": "org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken"
  },
  {
    "name": "org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector"
  },
  {
    "name": "org.springframework.security.provisioning.UserDetailsManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor"
  },
  {
    "name": "org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository"
  },
  {
    "methods": [
      {
        "name": "getFilters",
        "parameterTypes": []
      },
      {
        "name": "matches",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.security.web.DefaultSecurityFilterChain",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      },
      {
        "name": "toFilter",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.security.web.FilterChainProxy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.SecurityFilterChain",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.access.AccessDeniedHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "setErrorPage",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.security.web.access.AccessDeniedHandlerImpl",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.access.AuthorizationManagerWebInvocationPrivilegeEvaluator$HttpServletRequestTransformer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      }
    ],
    "name": "org.springframework.security.web.access.ExceptionTranslationFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector"
        ]
      },
      {
        "name": "transform",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ],
    "name": "org.springframework.security.web.access.HandlerMappingIntrospectorRequestTransformer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "isAllowed",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "isAllowed",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ],
    "name": "org.springframework.security.web.access.RequestMatcherDelegatingWebInvocationPrivilegeEvaluator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.access.WebInvocationPrivilegeEvaluator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler",
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ],
    "name": "org.springframework.security.web.access.intercept.AuthorizationFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "check",
        "parameterTypes": [
          "java.util.function.Supplier",
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.springframework.security.web.access.intercept.RequestMatcherDelegatingAuthorizationManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "setSecurityContextHolderStrategy",
        "parameterTypes": [
          "org.springframework.security.core.context.SecurityContextHolderStrategy"
        ]
      }
    ],
    "name": "org.springframework.security.web.authentication.AnonymousAuthenticationFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ],
    "name": "org.springframework.security.web.authentication.logout.LogoutFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.logout.LogoutHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "logout",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ],
    "name": "org.springframework.security.web.authentication.logout.LogoutSuccessEventPublishingLogoutHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "onAuthentication",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "setAlwaysCreateSession",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ],
    "name": "org.springframework.security.web.authentication.session.AbstractSessionFixationProtectionStrategy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "onAuthentication",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.session.SessionAuthenticationStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer"
  },
  {
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ],
    "name": "org.springframework.security.web.context.SecurityContextHolderFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getFirewalledRequest",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "getFirewalledResponse",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletResponse"
        ]
      }
    ],
    "name": "org.springframework.security.web.firewall.DefaultHttpFirewall",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.firewall.HttpFirewall",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.header.HeaderWriterFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ],
    "name": "org.springframework.security.web.savedrequest.RequestCacheAwareFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.server.WebFilterChainProxy"
  },
  {
    "name": "org.springframework.security.web.server.csrf.CsrfToken"
  },
  {
    "methods": [
      {
        "name": "getExtraHiddenFields",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "processAction",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "processFormFieldValue",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "processUrl",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "extractUriTemplateVariables",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "matcher",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "matches",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.security.web.servlet.util.matcher.MvcRequestMatcher",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ],
    "name": "org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.util.matcher.RequestMatcher"
  },
  {
    "name": "org.springframework.security.web.util.matcher.RequestMatcher",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.util.matcher.RequestVariablesExtractor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.session.FindByIndexNameSessionRepository"
  },
  {
    "name": "org.springframework.session.Session"
  },
  {
    "name": "org.springframework.stereotype.Component",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Controller",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Indexed",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Repository",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "addListener",
        "parameterTypes": [
          "org.springframework.transaction.TransactionExecutionListener"
        ]
      }
    ],
    "name": "org.springframework.transaction.ConfigurableTransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.PlatformTransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.ReactiveTransactionManager"
  },
  {
    "name": "org.springframework.transaction.TransactionDefinition",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
    "queriedMethods": [
      {
        "name": "transactionalEventListenerFactory",
        "parameterTypes": []
      },
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      }
    ],
    "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isCandidateClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ],
    "name": "org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.EnableTransactionManagement",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "transactionInterceptor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      },
      {
        "name": "transactionAdvisor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource",
          "org.springframework.transaction.interceptor.TransactionInterceptor"
        ]
      },
      {
        "name": "transactionAttributeSource",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.TransactionRuntimeHints"
  },
  {
    "name": "org.springframework.transaction.annotation.Transactional",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getTransactionAttribute",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Class"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      }
    ],
    "name": "org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getPointcut",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getTransactionAttributeSource",
        "parameterTypes": []
      },
      {
        "name": "getTransactionManager",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setTransactionAttributeSource",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      },
      {
        "name": "setTransactionAttributeSources",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource[]"
        ]
      },
      {
        "name": "setTransactionAttributes",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "org.springframework.transaction.TransactionManager"
        ]
      },
      {
        "name": "setTransactionManagerBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.transaction.interceptor.TransactionAspectSupport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAttributeSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "org.aopalliance.intercept.MethodInvocation"
        ]
      }
    ],
    "name": "org.springframework.transaction.interceptor.TransactionInterceptor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionalProxy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionalProxy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.jta.JtaTransactionManager"
  },
  {
    "methods": [
      {
        "name": "commit",
        "parameterTypes": [
          "org.springframework.transaction.TransactionStatus"
        ]
      },
      {
        "name": "getTransaction",
        "parameterTypes": [
          "org.springframework.transaction.TransactionDefinition"
        ]
      },
      {
        "name": "getTransactionExecutionListeners",
        "parameterTypes": []
      },
      {
        "name": "rollback",
        "parameterTypes": [
          "org.springframework.transaction.TransactionStatus"
        ]
      },
      {
        "name": "setTransactionExecutionListeners",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ],
    "name": "org.springframework.transaction.support.AbstractPlatformTransactionManager",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getIsolationLevel",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPropagationBehavior",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.transaction.support.DefaultTransactionDefinition",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.support.ResourceTransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.support.TransactionOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "executeWithoutResult",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "executeWithoutResult",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      }
    ],
    "name": "org.springframework.transaction.support.TransactionOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.transaction.support.TransactionCallback"
        ]
      }
    ],
    "name": "org.springframework.transaction.support.TransactionTemplate",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "combine",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "extractPathWithinPattern",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "extractUriTemplateVariables",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getPatternComparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "match",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "matchStart",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.util.AntPathMatcher",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.util.Assert"
  },
  {
    "methods": [
      {
        "name": "createThread",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "getThreadGroup",
        "parameterTypes": []
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": []
      },
      {
        "name": "getThreadPriority",
        "parameterTypes": []
      },
      {
        "name": "isDaemon",
        "parameterTypes": []
      },
      {
        "name": "setDaemon",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setThreadGroup",
        "parameterTypes": [
          "java.lang.ThreadGroup"
        ]
      },
      {
        "name": "setThreadGroupName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadPriority",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "org.springframework.util.CustomizableThreadCreator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.util.MimeType",
    "methods": [
      {
        "name": "getParameters",
        "parameterTypes": []
      },
      {
        "name": "getSubtype",
        "parameterTypes": []
      },
      {
        "name": "getCharset",
        "parameterTypes": []
      },
      {
        "name": "isConcrete",
        "parameterTypes": []
      },
      {
        "name": "isWildcardType",
        "parameterTypes": []
      },
      {
        "name": "isWildcardSubtype",
        "parameterTypes": []
      },
      {
        "name": "getSubtypeSuffix",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.util.PathMatcher",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.util.unit.DataSizeEditor"
  },
  {
    "name": "org.springframework.validation.SmartValidator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.validation.Validator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "validateObject",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.springframework.validation.Validator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getClockProvider",
        "parameterTypes": []
      },
      {
        "name": "getConstraintValidatorFactory",
        "parameterTypes": []
      },
      {
        "name": "getMessageInterpolator",
        "parameterTypes": []
      },
      {
        "name": "getParameterNameProvider",
        "parameterTypes": []
      },
      {
        "name": "getTraversableResolver",
        "parameterTypes": []
      },
      {
        "name": "getValidationPropertyMap",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setConfigurationInitializer",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "setConstraintValidatorFactory",
        "parameterTypes": [
          "jakarta.validation.ConstraintValidatorFactory"
        ]
      },
      {
        "name": "setMappingLocations",
        "parameterTypes": [
          "org.springframework.core.io.Resource[]"
        ]
      },
      {
        "name": "setMessageInterpolator",
        "parameterTypes": [
          "jakarta.validation.MessageInterpolator"
        ]
      },
      {
        "name": "setParameterNameDiscoverer",
        "parameterTypes": [
          "org.springframework.core.ParameterNameDiscoverer"
        ]
      },
      {
        "name": "setProviderClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setTraversableResolver",
        "parameterTypes": [
          "jakarta.validation.TraversableResolver"
        ]
      },
      {
        "name": "setValidationMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "setValidationProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setValidationPropertyMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setValidationProviderResolver",
        "parameterTypes": [
          "jakarta.validation.ValidationProviderResolver"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "usingContext",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "forExecutables",
        "parameterTypes": []
      },
      {
        "name": "getConstraintsForClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "validateProperty",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class[]"
        ]
      }
    ],
    "name": "org.springframework.validation.beanvalidation.SpringValidatorAdapter",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getAllFileExtensions",
        "parameterTypes": []
      },
      {
        "name": "resolveFileExtensions",
        "parameterTypes": [
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "resolveMediaTypes",
        "parameterTypes": [
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      }
    ],
    "name": "org.springframework.web.accept.ContentNegotiationManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.accept.MediaTypeFileExtensionResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ControllerAdvice",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.CrossOrigin",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ExceptionHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.InitBinder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.Mapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PathVariable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestBody",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMethod"
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestParam",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ResponseBody",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ResponseStatus",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RestController",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.client.RestOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "org.springframework.core.ParameterizedTypeReference",
          "java.util.Map"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "org.springframework.core.ParameterizedTypeReference",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.net.URI",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "java.lang.Class"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "java.net.URI",
          "org.springframework.http.HttpMethod",
          "org.springframework.http.HttpEntity",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "org.springframework.http.RequestEntity",
          "java.lang.Class"
        ]
      },
      {
        "name": "exchange",
        "parameterTypes": [
          "org.springframework.http.RequestEntity",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.web.client.RequestCallback",
          "org.springframework.web.client.ResponseExtractor",
          "java.util.Map"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.http.HttpMethod",
          "org.springframework.web.client.RequestCallback",
          "org.springframework.web.client.ResponseExtractor",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.net.URI",
          "org.springframework.http.HttpMethod",
          "org.springframework.web.client.RequestCallback",
          "org.springframework.web.client.ResponseExtractor"
        ]
      },
      {
        "name": "getForEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "getForEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "getForEntity",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Class"
        ]
      },
      {
        "name": "getForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "getForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "getForObject",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Class"
        ]
      },
      {
        "name": "headForHeaders",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "headForHeaders",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "headForHeaders",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "optionsForAllow",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "optionsForAllow",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "optionsForAllow",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "patchForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "patchForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "patchForObject",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "postForEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "postForEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "postForEntity",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "postForLocation",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "postForLocation",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "postForLocation",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object"
        ]
      },
      {
        "name": "postForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.util.Map"
        ]
      },
      {
        "name": "postForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "postForObject",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.net.URI",
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.springframework.web.client.RestTemplate",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.context.ConfigurableWebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.ConfigurableWebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.ServletContextAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.context.WebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.annotation.RequestScope",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.context.support.GenericWebApplicationContext"
  },
  {
    "methods": [
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ],
    "name": "org.springframework.web.context.support.WebApplicationObjectSupport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.cors.CorsConfigurationSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "isForceRequestEncoding",
        "parameterTypes": []
      },
      {
        "name": "isForceResponseEncoding",
        "parameterTypes": []
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForceEncoding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceRequestEncoding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceResponseEncoding",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "org.springframework.web.filter.CharacterEncodingFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.DelegatingFilterProxy",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getEnvironment",
        "parameterTypes": []
      },
      {
        "name": "getFilterConfig",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": [
          "jakarta.servlet.FilterConfig"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ],
    "name": "org.springframework.web.filter.GenericFilterBean",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ],
    "name": "org.springframework.web.filter.OncePerRequestFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.ServerHttpObservationFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.method.annotation.ExceptionHandlerMethodResolver",
    "methods": [
      {
        "name": "noMatchingExceptionHandler",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "noMatchingExceptionHandler",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.web.method.annotation.ExceptionHandlerMethodResolver"
  },
  {
    "methods": [
      {
        "name": "contributeMethodArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "java.lang.Object",
          "org.springframework.web.util.UriComponentsBuilder",
          "java.util.Map",
          "org.springframework.core.convert.ConversionService"
        ]
      },
      {
        "name": "supportsParameter",
        "parameterTypes": [
          "org.springframework.core.MethodParameter"
        ]
      }
    ],
    "name": "org.springframework.web.method.support.CompositeUriComponentsContributor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.method.support.HandlerMethodArgumentResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.method.support.UriComponentsContributor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.multipart.MultipartResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "cleanupMultipart",
        "parameterTypes": [
          "org.springframework.web.multipart.MultipartHttpServletRequest"
        ]
      },
      {
        "name": "isMultipart",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "resolveMultipart",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ],
    "name": "org.springframework.web.multipart.support.StandardServletMultipartResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive$DispatcherHandler"
  },
  {
    "name": "org.springframework.web.reactive.DispatcherHandler"
  },
  {
    "name": "org.springframework.web.reactive.HandlerResult"
  },
  {
    "name": "org.springframework.web.reactive.config$EnableWebFlux"
  },
  {
    "name": "org.springframework.web.reactive.config.EnableWebFlux"
  },
  {
    "name": "org.springframework.web.reactive.config.WebFluxConfigurer"
  },
  {
    "name": "org.springframework.web.reactive.function.client$ExchangeFilterFunction"
  },
  {
    "name": "org.springframework.web.reactive.function.client.ExchangeFilterFunction"
  },
  {
    "name": "org.springframework.web.reactive.function.client.WebClient"
  },
  {
    "name": "org.springframework.web.reactive.result.view.RequestContext"
  },
  {
    "name": "org.springframework.web.reactive.result.view.View"
  },
  {
    "name": "org.springframework.web.servlet.DispatcherServlet"
  },
  {
    "name": "org.springframework.web.servlet.DispatcherServlet",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.FlashMapManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getContextAttribute",
        "parameterTypes": []
      },
      {
        "name": "getContextClass",
        "parameterTypes": []
      },
      {
        "name": "getContextConfigLocation",
        "parameterTypes": []
      },
      {
        "name": "getContextId",
        "parameterTypes": []
      },
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "getServletContextAttributeName",
        "parameterTypes": []
      },
      {
        "name": "isEnableLoggingRequestDetails",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.event.ContextRefreshedEvent"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setContextAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setContextConfigLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextInitializerClasses",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextInitializers",
        "parameterTypes": [
          "org.springframework.context.ApplicationContextInitializer[]"
        ]
      },
      {
        "name": "setDispatchOptionsRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDispatchTraceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableLoggingRequestDetails",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublishContext",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPublishEvents",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setThreadContextInheritable",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.FrameworkServlet",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerAdapter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerExceptionResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerInterceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterCompletion",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "java.lang.Exception"
        ]
      },
      {
        "name": "postHandle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "org.springframework.web.servlet.ModelAndView"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "afterCompletion",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "java.lang.Exception"
        ]
      },
      {
        "name": "postHandle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "org.springframework.web.servlet.ModelAndView"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.HandlerInterceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerMapping",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getEnvironment",
        "parameterTypes": []
      },
      {
        "name": "getServletName",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.HttpServletBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.LocaleResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.RequestToViewNameTranslator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.ThemeResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.View"
  },
  {
    "fields": [
      {
        "name": "PATH_VARIABLES"
      }
    ],
    "name": "org.springframework.web.servlet.View",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.ViewResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.EnableWebMvc",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
    "queriedMethods": [
      {
        "name": "mvcUriComponentsContributor",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
        ]
      },
      {
        "name": "beanNameHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "mvcViewResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "mvcContentNegotiationManager",
        "parameterTypes": []
      },
      {
        "name": "mvcPatternParser",
        "parameterTypes": []
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "viewControllerHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "viewNameTranslator",
        "parameterTypes": []
      },
      {
        "name": "mvcPathMatcher",
        "parameterTypes": []
      },
      {
        "name": "handlerExceptionResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "themeResolver",
        "parameterTypes": []
      },
      {
        "name": "mvcValidator",
        "parameterTypes": []
      },
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": []
      },
      {
        "name": "defaultServletHandlerMapping",
        "parameterTypes": []
      },
      {
        "name": "localeResolver",
        "parameterTypes": []
      },
      {
        "name": "mvcResourceUrlProvider",
        "parameterTypes": []
      },
      {
        "name": "simpleControllerHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "mvcConversionService",
        "parameterTypes": []
      },
      {
        "name": "httpRequestHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "mvcHandlerMappingIntrospector",
        "parameterTypes": []
      },
      {
        "name": "flashMapManager",
        "parameterTypes": []
      },
      {
        "name": "mvcUrlPathHelper",
        "parameterTypes": []
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "beanNameHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "defaultServletHandlerMapping",
        "parameterTypes": []
      },
      {
        "name": "flashMapManager",
        "parameterTypes": []
      },
      {
        "name": "handlerExceptionResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": []
      },
      {
        "name": "httpRequestHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "localeResolver",
        "parameterTypes": []
      },
      {
        "name": "mvcContentNegotiationManager",
        "parameterTypes": []
      },
      {
        "name": "mvcConversionService",
        "parameterTypes": []
      },
      {
        "name": "mvcHandlerMappingIntrospector",
        "parameterTypes": []
      },
      {
        "name": "mvcPathMatcher",
        "parameterTypes": []
      },
      {
        "name": "mvcPatternParser",
        "parameterTypes": []
      },
      {
        "name": "mvcResourceUrlProvider",
        "parameterTypes": []
      },
      {
        "name": "mvcUriComponentsContributor",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
        ]
      },
      {
        "name": "mvcUrlPathHelper",
        "parameterTypes": []
      },
      {
        "name": "mvcValidator",
        "parameterTypes": []
      },
      {
        "name": "mvcViewResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      },
      {
        "name": "simpleControllerHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "themeResolver",
        "parameterTypes": []
      },
      {
        "name": "viewControllerHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "viewNameTranslator",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport$$SpringCGLIB$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addCorsMappings",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.CorsRegistry"
        ]
      },
      {
        "name": "addFormatters",
        "parameterTypes": [
          "org.springframework.format.FormatterRegistry"
        ]
      },
      {
        "name": "addInterceptors",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.InterceptorRegistry"
        ]
      },
      {
        "name": "addResourceHandlers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
        ]
      },
      {
        "name": "addReturnValueHandlers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addViewControllers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ViewControllerRegistry"
        ]
      },
      {
        "name": "configureAsyncSupport",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"
        ]
      },
      {
        "name": "configureContentNegotiation",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"
        ]
      },
      {
        "name": "configureDefaultServletHandling",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"
        ]
      },
      {
        "name": "configureHandlerExceptionResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "configureMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "configurePathMatch",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.PathMatchConfigurer"
        ]
      },
      {
        "name": "configureViewResolvers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ViewResolverRegistry"
        ]
      },
      {
        "name": "extendHandlerExceptionResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "extendMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getMessageCodesResolver",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "addArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addCorsMappings",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.CorsRegistry"
        ]
      },
      {
        "name": "addFormatters",
        "parameterTypes": [
          "org.springframework.format.FormatterRegistry"
        ]
      },
      {
        "name": "addInterceptors",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.InterceptorRegistry"
        ]
      },
      {
        "name": "addResourceHandlers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
        ]
      },
      {
        "name": "addReturnValueHandlers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addViewControllers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ViewControllerRegistry"
        ]
      },
      {
        "name": "configureAsyncSupport",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"
        ]
      },
      {
        "name": "configureContentNegotiation",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"
        ]
      },
      {
        "name": "configureDefaultServletHandling",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"
        ]
      },
      {
        "name": "configureHandlerExceptionResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "configureMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "configurePathMatch",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.PathMatchConfigurer"
        ]
      },
      {
        "name": "configureViewResolvers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ViewResolverRegistry"
        ]
      },
      {
        "name": "extendHandlerExceptionResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "extendMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getMessageCodesResolver",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "match",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.function.support.RouterFunctionMapping",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "initApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "setDetectHandlersInAncestorContexts",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getCorsConfigurationSource",
        "parameterTypes": []
      },
      {
        "name": "getCorsProcessor",
        "parameterTypes": []
      },
      {
        "name": "getDefaultHandler",
        "parameterTypes": []
      },
      {
        "name": "getHandler",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getPathMatcher",
        "parameterTypes": []
      },
      {
        "name": "getPatternParser",
        "parameterTypes": []
      },
      {
        "name": "getUrlPathHelper",
        "parameterTypes": []
      },
      {
        "name": "setAlwaysUseFullPath",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCorsConfigurationSource",
        "parameterTypes": [
          "org.springframework.web.cors.CorsConfigurationSource"
        ]
      },
      {
        "name": "setCorsConfigurations",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setCorsProcessor",
        "parameterTypes": [
          "org.springframework.web.cors.CorsProcessor"
        ]
      },
      {
        "name": "setDefaultHandler",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setInterceptors",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPathMatcher",
        "parameterTypes": [
          "org.springframework.util.PathMatcher"
        ]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      {
        "name": "setRemoveSemicolonContent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlDecode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlPathHelper",
        "parameterTypes": [
          "org.springframework.web.util.UrlPathHelper"
        ]
      },
      {
        "name": "usesPathPatterns",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getDirectPaths",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getHandlerMethods",
        "parameterTypes": []
      },
      {
        "name": "getHandlerMethodsForMappingName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMappingPathPatterns",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getMatchingMapping",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "getNamingStrategy",
        "parameterTypes": []
      },
      {
        "name": "handleMatch",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "setDetectHandlerMethodsInAncestorContexts",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHandlerMethodMappingNamingStrategy",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"
        ]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      {
        "name": "unregisterMapping",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "handle",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler"
  },
  {
    "methods": [
      {
        "name": "getRootHandler",
        "parameterTypes": []
      },
      {
        "name": "match",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      },
      {
        "name": "setLazyInitHandlers",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      {
        "name": "setRootHandler",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setUseTrailingSlashMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "useTrailingSlashMatch",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "resolveException",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "java.lang.Exception"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.handler.HandlerExceptionResolverComposite",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerMappingIntrospector"
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getCorsConfiguration",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.handler.HandlerMappingIntrospector",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.MatchableHandlerMapping",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getUrlMap",
        "parameterTypes": []
      },
      {
        "name": "initApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "setMappings",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setUrlMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "setDefaultLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.i18n.AbstractLocaleResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "resolveLocale",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.util.Locale"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "handle",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler"
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getBuilderConfiguration",
        "parameterTypes": []
      },
      {
        "name": "getContentNegotiationManager",
        "parameterTypes": []
      },
      {
        "name": "getFileExtensions",
        "parameterTypes": []
      },
      {
        "name": "getPathPrefixes",
        "parameterTypes": []
      },
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "match",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "org.springframework.web.servlet.mvc.method.RequestMappingInfo",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "setContentNegotiationManager",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      },
      {
        "name": "setPathPrefixes",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      {
        "name": "setUseRegisteredSuffixPatternMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseSuffixPatternMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseTrailingSlashMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "useRegisteredSuffixPatternMatch",
        "parameterTypes": []
      },
      {
        "name": "useSuffixPatternMatch",
        "parameterTypes": []
      },
      {
        "name": "useTrailingSlashMatch",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.resource.ResourceUrlProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getFlashMapTimeout",
        "parameterTypes": []
      },
      {
        "name": "getUrlPathHelper",
        "parameterTypes": []
      },
      {
        "name": "retrieveAndUpdate",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "saveOutputFlashMap",
        "parameterTypes": [
          "org.springframework.web.servlet.FlashMap",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "setFlashMapTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUrlPathHelper",
        "parameterTypes": [
          "org.springframework.web.util.UrlPathHelper"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.support.AbstractFlashMapManager",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.support.RequestContext"
  },
  {
    "name": "org.springframework.web.servlet.support.RequestDataValueProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.support.SessionFlashMapManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.support.WebContentGenerator",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getDefaultThemeName",
        "parameterTypes": []
      },
      {
        "name": "setDefaultThemeName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.theme.AbstractThemeResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "resolveThemeName",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "setThemeName",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.String"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.theme.FixedThemeResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "getCacheFilter",
        "parameterTypes": []
      },
      {
        "name": "getCacheLimit",
        "parameterTypes": []
      },
      {
        "name": "isCache",
        "parameterTypes": []
      },
      {
        "name": "isCacheUnresolved",
        "parameterTypes": []
      },
      {
        "name": "removeFromCache",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "resolveViewName",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCacheFilter",
        "parameterTypes": [
          "org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"
        ]
      },
      {
        "name": "setCacheLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setCacheUnresolved",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.view.AbstractCachingViewResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getViewName",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "resolveViewName",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ],
    "name": "org.springframework.web.servlet.view.ViewResolverComposite",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.socket.SubProtocolCapable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.socket.WebSocketHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.socket.adapter.standard.StandardWebSocketHandlerAdapter",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.web.socket.config.WebSocketMessageBrokerStats",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.socket.config.annotation.EnableWebSocketMessageBroker",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurationSupport",
    "queriedMethods": [
      {
        "name": "stompWebSocketHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketHandler",
          "org.springframework.scheduling.TaskScheduler"
        ]
      },
      {
        "name": "webSocketScopeConfigurer",
        "parameterTypes": []
      },
      {
        "name": "subProtocolWebSocketHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "webSocketMessageBrokerStats",
        "parameterTypes": [
          "org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler",
          "org.springframework.web.socket.WebSocketHandler",
          "org.springframework.core.task.TaskExecutor",
          "org.springframework.core.task.TaskExecutor",
          "org.springframework.scheduling.TaskScheduler"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "stompWebSocketHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketHandler",
          "org.springframework.scheduling.TaskScheduler",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "subProtocolWebSocketHandler",
        "parameterTypes": [
          "org.springframework.messaging.support.AbstractSubscribableChannel",
          "org.springframework.messaging.support.AbstractSubscribableChannel"
        ]
      },
      {
        "name": "webSocketMessageBrokerStats",
        "parameterTypes": [
          "org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler",
          "org.springframework.web.socket.WebSocketHandler",
          "org.springframework.core.task.TaskExecutor",
          "org.springframework.core.task.TaskExecutor",
          "org.springframework.scheduling.TaskScheduler"
        ]
      }
    ],
    "name": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurationSupport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addReturnValueHandlers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "configureClientInboundChannel",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.ChannelRegistration"
        ]
      },
      {
        "name": "configureClientOutboundChannel",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.ChannelRegistration"
        ]
      },
      {
        "name": "configureMessageBroker",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.MessageBrokerRegistry"
        ]
      },
      {
        "name": "configureMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "configureWebSocketTransport",
        "parameterTypes": [
          "org.springframework.web.socket.config.annotation.WebSocketTransportRegistration"
        ]
      },
      {
        "name": "registerStompEndpoints",
        "parameterTypes": [
          "org.springframework.web.socket.config.annotation.StompEndpointRegistry"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "addArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addReturnValueHandlers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "configureMessageBroker",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.MessageBrokerRegistry"
        ]
      },
      {
        "name": "configureMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "configureWebSocketTransport",
        "parameterTypes": [
          "org.springframework.web.socket.config.annotation.WebSocketTransportRegistration"
        ]
      },
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "onShutdown",
        "parameterTypes": []
      },
      {
        "name": "registerStompEndpoints",
        "parameterTypes": [
          "org.springframework.web.socket.config.annotation.StompEndpointRegistry"
        ]
      }
    ],
    "name": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "findSubscriptions",
        "parameterTypes": [
          "org.springframework.messaging.simp.user.SimpSubscriptionMatcher"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserCount",
        "parameterTypes": []
      },
      {
        "name": "getUsers",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "supportsEventType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "supportsSourceType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.web.socket.messaging.DefaultSimpUserRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "afterConnectionClosed",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketSession",
          "org.springframework.web.socket.CloseStatus"
        ]
      },
      {
        "name": "afterConnectionEstablished",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketSession"
        ]
      },
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "getSubProtocols",
        "parameterTypes": []
      },
      {
        "name": "handleMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "handleMessage",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketSession",
          "org.springframework.web.socket.WebSocketMessage"
        ]
      },
      {
        "name": "handleTransportError",
        "parameterTypes": [
          "org.springframework.web.socket.WebSocketSession",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "supportsPartialMessages",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.web.socket.messaging.SubProtocolWebSocketHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      }
    ],
    "name": "org.springframework.web.socket.server.support.WebSocketHandlerMapping",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.util.UrlPathHelper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.util.pattern.PathPatternParser",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.ws.client.core.WebServiceTemplate"
  },
  {
    "name": "org.springframework.ws.transport.http.MessageDispatcherServlet"
  },
  {
    "name": "org.thymeleaf.ITemplateEngine",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "addDialect",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.dialect.IDialect"
        ]
      },
      {
        "name": "addDialect",
        "parameterTypes": [
          "org.thymeleaf.dialect.IDialect"
        ]
      },
      {
        "name": "addLinkBuilder",
        "parameterTypes": [
          "org.thymeleaf.linkbuilder.ILinkBuilder"
        ]
      },
      {
        "name": "addMessageResolver",
        "parameterTypes": [
          "org.thymeleaf.messageresolver.IMessageResolver"
        ]
      },
      {
        "name": "addTemplateResolver",
        "parameterTypes": [
          "org.thymeleaf.templateresolver.ITemplateResolver"
        ]
      },
      {
        "name": "clearDialects",
        "parameterTypes": []
      },
      {
        "name": "clearTemplateCache",
        "parameterTypes": []
      },
      {
        "name": "clearTemplateCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConfiguration",
        "parameterTypes": []
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "org.thymeleaf.context.IContext",
          "java.io.Writer"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.context.IContext",
          "java.io.Writer"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "org.thymeleaf.TemplateSpec",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "org.thymeleaf.TemplateSpec",
          "org.thymeleaf.context.IContext",
          "java.io.Writer"
        ]
      },
      {
        "name": "processThrottled",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "processThrottled",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "processThrottled",
        "parameterTypes": [
          "org.thymeleaf.TemplateSpec",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "setAdditionalDialects",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCacheManager",
        "parameterTypes": [
          "org.thymeleaf.cache.ICacheManager"
        ]
      },
      {
        "name": "setDecoupledTemplateLogicResolver",
        "parameterTypes": [
          "org.thymeleaf.templateparser.markup.decoupled.IDecoupledTemplateLogicResolver"
        ]
      },
      {
        "name": "setDialect",
        "parameterTypes": [
          "org.thymeleaf.dialect.IDialect"
        ]
      },
      {
        "name": "setDialects",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDialectsByPrefix",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setEngineContextFactory",
        "parameterTypes": [
          "org.thymeleaf.context.IEngineContextFactory"
        ]
      },
      {
        "name": "setLinkBuilder",
        "parameterTypes": [
          "org.thymeleaf.linkbuilder.ILinkBuilder"
        ]
      },
      {
        "name": "setLinkBuilders",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setMessageResolver",
        "parameterTypes": [
          "org.thymeleaf.messageresolver.IMessageResolver"
        ]
      },
      {
        "name": "setMessageResolvers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTemplateResolver",
        "parameterTypes": [
          "org.thymeleaf.templateresolver.ITemplateResolver"
        ]
      },
      {
        "name": "setTemplateResolvers",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "org.thymeleaf.TemplateEngine",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.thymeleaf.extras.springsecurity6.dialect.SpringSecurityDialect"
  },
  {
    "name": "org.thymeleaf.spring5.context.IThymeleafRequestContext"
  },
  {
    "name": "org.thymeleaf.spring5.expression.IThymeleafEvaluationContext"
  },
  {
    "name": "org.thymeleaf.spring6.ISpringTemplateEngine",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "setTemplateEngineMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      }
    ],
    "name": "org.thymeleaf.spring6.SpringTemplateEngine",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.thymeleaf.spring6.context.IThymeleafRequestContext"
  },
  {
    "name": "org.thymeleaf.spring6.expression.IThymeleafEvaluationContext"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "org.thymeleaf.spring6.expression.Mvc$Spring41MvcUriComponentsBuilderDelegate"
  },
  {
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ],
    "name": "org.thymeleaf.spring6.templateresolver.SpringResourceTemplateResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "addStaticVariable",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "getBeanName",
        "parameterTypes": []
      },
      {
        "name": "getCharacterEncoding",
        "parameterTypes": []
      },
      {
        "name": "getContentType",
        "parameterTypes": []
      },
      {
        "name": "getForceContentType",
        "parameterTypes": []
      },
      {
        "name": "getProducePartialOutputWhileProcessing",
        "parameterTypes": []
      },
      {
        "name": "getStaticVariables",
        "parameterTypes": []
      },
      {
        "name": "getTemplateName",
        "parameterTypes": []
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCharacterEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContentType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForceContentType",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setProducePartialOutputWhileProcessing",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStaticVariables",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setTemplateName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "org.thymeleaf.spring6.view.AbstractThymeleafView",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "render",
        "parameterTypes": [
          "java.util.Map",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      }
    ],
    "name": "org.thymeleaf.spring6.view.ThymeleafView",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ],
    "name": "org.thymeleaf.spring6.view.ThymeleafViewResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ],
    "name": "org.thymeleaf.standard.expression.AndExpression"
  },
  {
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ],
    "name": "org.thymeleaf.standard.expression.EqualsNotEqualsExpression"
  },
  {
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ],
    "name": "org.thymeleaf.standard.expression.GreaterLesserExpression"
  },
  {
    "name": "org.thymeleaf.standard.expression.IStandardConversionService"
  },
  {
    "name": "org.thymeleaf.standard.expression.IStandardExpressionParser"
  },
  {
    "name": "org.thymeleaf.standard.expression.IStandardVariableExpressionEvaluator"
  },
  {
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ],
    "name": "org.thymeleaf.standard.expression.MultiplicationDivisionRemainderExpression"
  },
  {
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ],
    "name": "org.thymeleaf.standard.expression.OrExpression"
  },
  {
    "name": "org.thymeleaf.templatemode.TemplateMode"
  },
  {
    "name": "org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "resolveTemplate",
        "parameterTypes": [
          "org.thymeleaf.IEngineConfiguration",
          "java.lang.String",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "setCheckExistence",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setResolvablePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUseDecoupledLogic",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "org.thymeleaf.templateresolver.AbstractTemplateResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.thymeleaf.templateresolver.ITemplateResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.webjars$WebJarAssetLocator"
  },
  {
    "name": "org.webjars.WebJarAssetLocator"
  },
  {
    "name": "org.xnio.SslClientAuthMode"
  },
  {
    "name": "org.yaml.snakeyaml.Yaml",
    "condition": {
      "typeReachable": "org.springframework.boot.env.YamlPropertySourceLoader"
    }
  },
  {
    "name": "reactor.core.publisher$Flux"
  },
  {
    "name": "reactor.core.publisher$Mono"
  },
  {
    "name": "reactor.core.publisher.Flux"
  },
  {
    "name": "reactor.core.publisher.Mono"
  },
  {
    "name": "reactor.netty.http.server.HttpServer"
  },
  {
    "name": "reactor.tools.agent$ReactorDebugAgent"
  },
  {
    "name": "reactor.tools.agent.ReactorDebugAgent"
  },
  {
    "name": "reactor.util.lang$NonNullApi"
  },
  {
    "name": "reactor.util.lang.NonNullApi"
  },
  {
    "name": "scala$Option"
  },
  {
    "name": "scala.Option"
  },
  {
    "name": "sun.java2d.marlin.DMarlinRenderingEngine",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.java2d.marlin.DMarlinRenderingEngine"
  },
  {
    "name": "sun.management.ClassLoadingImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.CompilationImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.ManagementFactoryHelper$1",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryManagerImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryPoolImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.RuntimeImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.reflect.ReflectionFactory",
    "methods": [
      {
        "name": "getReflectionFactory",
        "parameterTypes": []
      },
      {
        "name": "newConstructorForSerialization",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.reflect.Constructor"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "getReflectionFactory",
        "parameterTypes": []
      },
      {
        "name": "newConstructorForSerialization",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.reflect.Constructor"
        ]
      }
    ],
    "name": "sun.reflect.ReflectionFactory"
  },
  {
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Object",
          "java.lang.Object[]"
        ]
      }
    ],
    "name": "sun.reflect.misc.Trampoline"
  },
  {
    "name": "sun.rmi.registry.RegistryImpl_Stub"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.rmi.transport.DGCImpl_Skel"
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.rmi.server.RemoteRef"
        ]
      }
    ],
    "name": "sun.rmi.transport.DGCImpl_Stub"
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.pkcs12.PKCS12KeyStore"
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12"
  },
  {
    "name": "sun.security.provider.DRBG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.security.SecureRandomParameters"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.security.SecureRandomParameters"
        ]
      }
    ],
    "name": "sun.security.provider.DRBG"
  },
  {
    "name": "sun.security.provider.DSA$SHA224withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.provider.DSA$SHA224withDSA"
  },
  {
    "name": "sun.security.provider.DSA$SHA256withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.provider.DSA$SHA256withDSA"
  },
  {
    "name": "sun.security.provider.JavaKeyStore$DualFormatJKS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.provider.JavaKeyStore$DualFormatJKS"
  },
  {
    "name": "sun.security.provider.JavaKeyStore$JKS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.provider.JavaKeyStore$JKS"
  },
  {
    "name": "sun.security.provider.MD5",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.provider.MD5"
  },
  {
    "name": "sun.security.provider.SHA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.provider.SHA"
  },
  {
    "name": "sun.security.provider.SHA2$SHA224",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.provider.SHA2$SHA224"
  },
  {
    "name": "sun.security.provider.SHA2$SHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.provider.SHA2$SHA256"
  },
  {
    "name": "sun.security.provider.SHA5$SHA384",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.provider.SHA5$SHA384"
  },
  {
    "name": "sun.security.provider.SHA5$SHA512",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.provider.SHA5$SHA512"
  },
  {
    "name": "sun.security.provider.SecureRandom",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.security.SecureRandomParameters"
        ]
      }
    ],
    "name": "sun.security.provider.SecureRandom"
  },
  {
    "name": "sun.security.provider.X509Factory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.provider.X509Factory"
  },
  {
    "name": "sun.security.provider.certpath.PKIXCertPathValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.provider.certpath.PKIXCertPathValidator"
  },
  {
    "name": "sun.security.rsa.PSSParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.rsa.PSSParameters"
  },
  {
    "name": "sun.security.rsa.RSAKeyFactory$Legacy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.rsa.RSAKeyFactory$Legacy"
  },
  {
    "name": "sun.security.rsa.RSAPSSSignature",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.rsa.RSAPSSSignature"
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA224withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.rsa.RSASignature$SHA224withRSA"
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA256withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.rsa.RSASignature$SHA256withRSA"
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA384withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA512withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.rsa.RSASignature$SHA512withRSA"
  },
  {
    "name": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.ssl.KeyManagerFactoryImpl$SunX509"
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$TLSContext",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.ssl.SSLContextImpl$TLSContext"
  },
  {
    "name": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "name": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory"
  },
  {
    "name": "sun.security.util.ObjectIdentifier"
  },
  {
    "name": "sun.security.x509.AuthorityInfoAccessExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ],
    "name": "sun.security.x509.AuthorityInfoAccessExtension"
  },
  {
    "name": "sun.security.x509.AuthorityKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ],
    "name": "sun.security.x509.AuthorityKeyIdentifierExtension"
  },
  {
    "name": "sun.security.x509.BasicConstraintsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ],
    "name": "sun.security.x509.BasicConstraintsExtension"
  },
  {
    "name": "sun.security.x509.CRLDistributionPointsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ],
    "name": "sun.security.x509.CRLDistributionPointsExtension"
  },
  {
    "name": "sun.security.x509.CertificateExtensions"
  },
  {
    "name": "sun.security.x509.CertificatePoliciesExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ],
    "name": "sun.security.x509.CertificatePoliciesExtension"
  },
  {
    "name": "sun.security.x509.ExtendedKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ],
    "name": "sun.security.x509.ExtendedKeyUsageExtension"
  },
  {
    "name": "sun.security.x509.IssuerAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ],
    "name": "sun.security.x509.IssuerAlternativeNameExtension"
  },
  {
    "name": "sun.security.x509.KeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ],
    "name": "sun.security.x509.KeyUsageExtension"
  },
  {
    "name": "sun.security.x509.NetscapeCertTypeExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ],
    "name": "sun.security.x509.NetscapeCertTypeExtension"
  },
  {
    "name": "sun.security.x509.PrivateKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ],
    "name": "sun.security.x509.PrivateKeyUsageExtension"
  },
  {
    "name": "sun.security.x509.SubjectAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ],
    "name": "sun.security.x509.SubjectAlternativeNameExtension"
  },
  {
    "name": "sun.security.x509.SubjectKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ],
    "name": "sun.security.x509.SubjectKeyIdentifierExtension"
  },
  {
    "name": "void",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "weblogic.websocket.tyrus$TyrusServletWriter"
  },
  {
    "name": "weblogic.websocket.tyrus.TyrusServletWriter"
  },
  {
    "name": "zipkin2.reporter.Sender"
  }
]
